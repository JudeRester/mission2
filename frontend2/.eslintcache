[{"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/modules/arrayCategories.ts":"1","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/categories.tsx":"2","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/CategoryNode.tsx":"3","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/App.tsx":"4","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/modules/member.ts":"5","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/dropForHighOrder.tsx":"6","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/dropForLowOrder.tsx":"7","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/reportWebVitals.ts":"8","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/modules/dragNode.ts":"9","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/upload/Upload.tsx":"10","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/modify/index.tsx":"11","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/util/api.ts":"12","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/upload/DropZone.tsx":"13","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/detail/Info.tsx":"14","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/MemberManager/members.tsx":"15","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/Categories.tsx":"16","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/MemberManager/Members.tsx":"17","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/login/Login.tsx":"18","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/modules/fileList.ts":"19","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/commons/SideHeader.tsx":"20","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/DropForHighOrder.tsx":"21","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/index.tsx":"22","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/DropForLowOrder.tsx":"23","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/index.tsx":"24","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/index.tsx":"25","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/modify/ModInfo.tsx":"26","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/commons/SearchWindow.tsx":"27","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/main/Posts.tsx":"28","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/main/index.tsx":"29","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/detail/index.tsx":"30","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/MemberManager/index.tsx":"31","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/MemberManager/MembersTable.tsx":"32"},{"size":1551,"mtime":1614751601613,"results":"33","hashOfConfig":"34"},{"size":16653,"mtime":1614760833486,"results":"35","hashOfConfig":"34"},{"size":14421,"mtime":1615769601025,"results":"36","hashOfConfig":"34"},{"size":898,"mtime":1614921847600,"results":"37","hashOfConfig":"34"},{"size":904,"mtime":1614238847852,"results":"38","hashOfConfig":"34"},{"size":2749,"mtime":1614760846682,"results":"39","hashOfConfig":"34"},{"size":2748,"mtime":1614760849253,"results":"40","hashOfConfig":"34"},{"size":425,"mtime":1612155094723,"results":"41","hashOfConfig":"34"},{"size":604,"mtime":1614738344089,"results":"42","hashOfConfig":"34"},{"size":23541,"mtime":1615279173655,"results":"43","hashOfConfig":"34"},{"size":388,"mtime":1613454456600,"results":"44","hashOfConfig":"34"},{"size":857,"mtime":1614248223279,"results":"45","hashOfConfig":"34"},{"size":6666,"mtime":1615273039174,"results":"46","hashOfConfig":"34"},{"size":17246,"mtime":1615767038140,"results":"47","hashOfConfig":"34"},{"size":32026,"mtime":1614760854155,"results":"48","hashOfConfig":"34"},{"size":16308,"mtime":1615766086424,"results":"49","hashOfConfig":"34"},{"size":29851,"mtime":1615538670304,"results":"50","hashOfConfig":"34"},{"size":6141,"mtime":1614247180295,"results":"51","hashOfConfig":"34"},{"size":1424,"mtime":1614911864415,"results":"52","hashOfConfig":"34"},{"size":3634,"mtime":1615525022004,"results":"53","hashOfConfig":"34"},{"size":2806,"mtime":1614824175253,"results":"54","hashOfConfig":"34"},{"size":2240,"mtime":1615363106232,"results":"55","hashOfConfig":"34"},{"size":2805,"mtime":1614824132431,"results":"56","hashOfConfig":"34"},{"size":500,"mtime":1612155094723,"results":"57","hashOfConfig":"34"},{"size":171,"mtime":1614760941592,"results":"58","hashOfConfig":"34"},{"size":16361,"mtime":1615766699943,"results":"59","hashOfConfig":"34"},{"size":6819,"mtime":1613534235297,"results":"60","hashOfConfig":"34"},{"size":23615,"mtime":1615528713279,"results":"61","hashOfConfig":"34"},{"size":382,"mtime":1613438388671,"results":"62","hashOfConfig":"34"},{"size":345,"mtime":1613432960743,"results":"63","hashOfConfig":"34"},{"size":158,"mtime":1614761045214,"results":"64","hashOfConfig":"34"},{"size":6071,"mtime":1615535978642,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},"b90rkt",{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/modules/arrayCategories.ts",["143"],"const SET = 'arrayCategories/SET' as const;\nconst RESET = 'arrayCategories/RESET' as const;\nconst MODIFY = 'arrayCategories/MODIFY' as const;\nconst ADD = 'arrayCategories/ADD' as const;\nconst CANCELADD = 'arrayCategories/CANCELADD' as const;\n\nexport const setArrayCategories = (array:CategoryInfo[])=>({type:SET, array})\nexport const resetArrayCategories = ()=>({type:RESET})\nexport const modifyCategory = ((node:number)=>({type:MODIFY, node}))\nexport const addCategory = ((node:CategoryInfo)=>({type:ADD,node}))\n\ntype ArrayCategoriesAction = \n    | ReturnType<typeof setArrayCategories>\n    | ReturnType<typeof resetArrayCategories>\n    | ReturnType<typeof modifyCategory>\n    | ReturnType<typeof addCategory>\n\ninterface CategoryInfo {\n    categoryId: number,\n    categoryName: string,\n    categoryOrder: number,\n    categoryParent: number,\n    possessions?: number,\n    newNode?: boolean,\n    modifying?: boolean,\n}\n\n\nconst initialState:CategoryInfo[]=[]\n\nfunction arrayCategories(\n    state=initialState,\n    action:ArrayCategoriesAction\n):CategoryInfo[]{\n    switch (action.type) {\n        case SET:\n            return action.array;\n        case RESET:\n            return initialState;\n        case MODIFY:\n            let tempMod = [...state];\n            tempMod[action.node].modifying = true;\n            return tempMod;\n        case ADD:\n            let tempAdd = [...state];\n            tempAdd=[...tempAdd,action.node];\n            return tempAdd;\n       \n        default:\n            return state;\n    }   \n}\n\nexport default arrayCategories",["144","145"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/categories.tsx",["146","147","148","149","150"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/CategoryNode.tsx",[],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/App.tsx",[],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/modules/member.ts",[],["151","152"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/dropForHighOrder.tsx",[],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/dropForLowOrder.tsx",[],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/reportWebVitals.ts",[],["153","154"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/modules/dragNode.ts",[],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/upload/Upload.tsx",["155","156","157","158","159","160","161"],"import React,\n{\n    useState,\n    FormEvent,\n    useEffect,\n} from 'react';\nimport styled from '@emotion/styled';\nimport { useHistory } from 'react-router';\nimport arrayToTree from 'array-to-tree';\nimport {\n    Box,\n    Button,\n    CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    fade,\n    LinearProgress,\n    List,\n    ListItem,\n    ListItemText,\n    makeStyles,\n    Typography\n}\n    from '@material-ui/core';\nimport { TreeItem, TreeView } from '@material-ui/lab';\nimport {\n    useSelector\n} from 'react-redux';\nimport { RootState } from '../../modules';\nimport api from '../../util/api';\nimport { Folder, FolderOpen, FormatBoldTwoTone, Remove } from '@material-ui/icons';\n// import TempDropZone from './TempDropZone';\nimport { UploadFileInfo } from '../../util/types';\nimport DropZone from './DropZone';\n//style \n\nlet DivWrapper = styled.div`\nwidth:100%;\nmargin: 0 auto;\npadding: 0px;\njustify-content: center;\nalign-items: center;\nbox-sizing: border-box;\n`;\n\nlet DivContainer = styled.div`\nwidth: 100%;\nmin-height: 100vh;\ndisplay:block;\n//flex-wrap: wrap;\nmargin-right: auto;\nmargin-left: auto;\npadding-left: 15px;\npadding-right: 15px;\npadding-top: 15px;\n// justify-content: center;\n// align-items: center;\n// padding: 15px;\nbackground: #ebeeef;\n`;\n\nlet DivTitleContainer = styled.div`\n// width:100%;\ndisplay:flex;\nmargin-bottom: 20px;\nborder-bottom: 1px solid #eaeaea;\n`;\n\nlet DivBox = styled.div`\nmax-width: 80%;\n// min-width: 670px;\nmargin: auto;\nbackground: #fff;\n// padding:10px;\n// overflow: hidden;\nposition: relative;\npadding: 20px;\nborder-radius: 3px;\nbox-shadow: rgba(0, 0, 0, 0.1) 0px 1px 2px;\n`;\n\nconst DivInputGroup = styled.div`\nwidth: 100%;\nposition: relative;\nborder-bottom: 1px solid #b2b2b2;\nmargin-bottom: 26px;\n`;\n\nconst DivTagGroup = styled.div`\nwidth:100%;\nposition:relative;\nmargin-bottom:26px;\ndisplay:block;\n`;\n\nconst SpanInputLabel = styled.span`\nfont-family: Poppins-Regular;\nfont-size: 15px;\ncolor: #808080;\nline-height: 1.2;\ntext-align: right;\nposition: absolute;\ntop: 14px;\nleft: -105px;\nwidth: 80px;\n`;\nconst InputText = styled.input`\nfont-family: Poppins-Regular;\nfont-size: 15px;\ncolor: #555555;\nline-height: 1.2;\nheight: 45px;\ndisplay: block;\nwidth: 100%;\nbackground: transparent;\npadding: 0 5px;\noutline:none;\nborder:none;\n`;\nconst FormLogin = styled.form`\nwidth: 100%;\ndisplay: flex;\nflex-wrap: wrap;\njustify-content: space-between;\npadding: 43px 88px 93px 150px;\n`;\n\nconst SpanTag = styled.span`\ndisplay:inline-block;\nbackground:#4abdff;\nmargin-right:5px;\nmargin-top:2px;\nmargin-bottom:2px;\npadding:5px 7px 5px 7px;\nborder-radius:4px;\ncolor:#fff;\n`;\n\nconst SpanTimes = styled.span`\nmargin: 3px;\nmargin-left 5px;\nfont-weight: bolder;\ncolor:#fff;\n&:hover{\n    cursor:pointer;\n    color:#cccccc;\n}\n&:active{\n    color:#7a7a7a;\n}\n`;\n\n//style end\n/**\n * * types & interfaces \n */\ninterface TreeViews {\n    children?: TreeViews[];\n    categoryName: string;\n    categoryId: string;\n}\ninterface CategoryProps {\n    category: TreeViews\n}\n\nconst Upload = () => {\n    /**\n     * ? store\n     */\n    const history = useHistory()\n    const user = useSelector((state: RootState) => state.member)\n    // const fileList = useSelector((state:RootState)=>state.fileList)\n    /**\n     * ? api\n     */\n    api.defaults.headers.common['Authorization'] = 'Bearer ' + user.token;\n\n    /**\n     * ? state\n     */\n    const [fileList, setFileList] = useState<Array<UploadFileInfo>>([]);\n\n    const [title, setTitle] = useState<string>();\n    const [currentInputTag, setCurrentInputTag] = useState<string>('');\n    const [tags, setTags] = useState<Array<string>>([]);\n    const [selectedCategory, setSelectedCategory] = useState<string>();\n    const [assetSeq, setAssetSeq] = useState<number>();\n    const [isPaused, setIsPaused] = useState<boolean>(false);\n\n    const [categories, setCategories] = useState([]);\n    const [expendedCategory, setExpendedCategory] = useState<Array<string>>();\n    const [isTagDuplicated, setIsTagDuplicated] = useState<boolean>(false);\n    const [alertOpen, setAlertOpen] = useState<boolean>(false);\n    const [uploadOpen, setUploadOpen] = useState<boolean>(false);\n    const [progresses, setProgresses] = useState<Array<number>>([0]);\n    const [newProgresses, setNewProgresses] = useState<Array<number>>([0]);\n    const [cancelOpen, setCancelOpen] = useState<boolean>(false);\n    /**\n     * ? variable\n     */\n    const CHUNK_SIZE: number = 1024 * 1024 * 10;//10MB\n\n    /**\n     * ? functions\n     */\n    useEffect(() => {\n        api.defaults.headers.common['Authorization'] = 'Bearer ' + user.token;\n        api.get(`/category/list`)\n            .then(response => {\n                setCategories(arrayToTree(response.data.result, { parentProperty: 'categoryParent', customID: 'categoryId' }))\n            })\n    }, [user])\n\n    useEffect(() => {\n        setProgresses(pre => {\n            return new Array(fileList.length).fill(0)\n        })\n        setNewProgresses(pre => {\n            return new Array(fileList.length).fill(0)\n        })\n    }, [fileList])\n\n    useEffect(() => {\n        let tempArray: Array<string> = [];\n        async function getParents(array: Array<TreeViews>) {\n            await array.map((node: TreeViews) => {\n                if (node.children) {\n                    tempArray.push(node.categoryId + '');\n                    getParents(node.children);\n                }\n            });\n            setExpendedCategory(tempArray)\n        };\n        getParents(categories);\n    }, [categories])\n\n    const renderTrees = (nodes: TreeViews) => (\n        <TreeItem\n            endIcon={<Remove />}\n            key={nodes.categoryId}\n            nodeId={nodes.categoryId + ''}\n            label={nodes.categoryName}\n            classes={{ label: classes.label, group: classes.group, iconContainer: classes.iconContainer }}>\n            {Array.isArray(nodes.children) ? nodes.children.map((node) => renderTrees(node)) : null}\n        </TreeItem>\n    );\n    const Category = ({ category }: CategoryProps) => {\n        useEffect(() => {\n        }, [category]);\n        return renderTrees(category);\n    }\n    const handleToggle = (event: any, nodeIds: string[]) => {\n        event.preventDefault()\n    };\n    const handleNodeSelect = (event: any, nodeId: React.SetStateAction<string>) => {\n        setSelectedCategory(nodeId)\n    };\n    const handleAlertOpen = () => {\n        setAlertOpen(true)\n    }\n    const handleAlertClose = () => {\n        setAlertOpen(false)\n    }\n    const handleUploadOpen = () => {\n        setUploadOpen(true);\n    }\n    const handleUploadClose = () => {\n        setUploadOpen(false);\n    }\n    const handlePauseUpload = () => {\n        handleUploadClose()\n        setIsPaused(pre => {\n            let temp = true;\n            return temp;\n        })\n    }\n\n    const handleResumeUpload = async () => {\n        setIsPaused(pre => {\n            let temp = false;\n            return temp;\n        })\n        if (fileList.length !== 0 && title && selectedCategory) {\n            let data = { assetTitle: title, assetCategory: selectedCategory, assetSeq: assetSeq }\n            try {\n                const response = await api.put(`/asset/${assetSeq}`,\n                    data,\n                    {\n                        headers: {\n                            'Content-type': 'application/json',\n                        }\n                    });\n                await resumeUpload()\n                uploadStart()\n            }\n            catch (err) {\n                console.log(err);\n            }\n        } else {\n            handleAlertOpen();\n        }\n    }\n\n    const handleCancelUpload = () => {\n        //업로드 취소 확인창 띄우기\n        handlePauseUpload()\n        setCancelOpen(true)\n    }\n    const handleCloseCancel = ()=>{\n        setCancelOpen(false)\n        handleResumeUpload()\n    }\n\n    const cancelUpload = async () =>{\n        await api.delete(`/asset/${assetSeq}?assetOwner=${user.userId}`)\n        history.replace('/')\n    }\n    /**\n     * * 파일 업로드\n     */\n    const submitFiles = async (e: FormEvent) => {\n\n        e.preventDefault();\n        if (fileList.length !== 0 && title && selectedCategory) {\n            let data = { assetTitle: title, assetCategory: selectedCategory }\n            try {\n                const response = await api.post(`/asset`,\n                    data,\n                    {\n                        headers: {\n                            'Content-type': 'application/json',\n                        }\n                    });\n                setAssetSeq(pre => {\n                    const tempAssetSeq = response.data.result.assetSeq;\n                    return tempAssetSeq;\n                });\n            }\n            catch (err) {\n                console.log(err);\n            }\n        } else {\n            handleAlertOpen();\n        }\n    }\n    useEffect(() => {\n        assetSeq && uploadStart()\n    }, [assetSeq])\n    const uploadStart = async () => {\n        handleUploadOpen();\n        console.log(fileList, isPaused)\n        for (let i = 0; i < fileList.length; i++) {\n            let pause = isPaused;\n            setIsPaused(pre => {\n                pause = pre;\n                return pre;\n            })\n            fileList[i].isUploadComplete && setProgresses(pre => {\n                pre[i] = 100\n                return pre;\n            })\n            !fileList[i].isUploadComplete && !pause && await fileUpload(fileList[i]);\n            setIsPaused(pre => {\n                pause = pre\n                return pre;\n            });\n            !pause && fileList.length === i + 1 && fileUploadComplete()\n        }\n\n    }\n    const fileUpload = async (file: UploadFileInfo) => {\n        const targetFile = { ...file }\n        let pause = isPaused;\n        const response = await api.get(`/createLocation/${assetSeq}`)\n        file.assetLocation=response.data.result\n        targetFile.assetLocation = response.data.result\n        targetFile.assetSeq = assetSeq\n        const chunks = fileToChunks(targetFile.file)\n        const targetIndex = fileList.findIndex((e: UploadFileInfo) => e.assetOriginName === targetFile.assetOriginName);\n        for (let i = targetFile.currentChunk; i < chunks.length; i++) {\n            const targetFileWithNoFile = { ...targetFile }\n            delete targetFileWithNoFile.file\n            setIsPaused(pre => {\n                pause = pre;\n                return pre;\n            });\n            if (!pause) {\n                try {\n                    const response = await api.post(`/file`,\n                        chunks[i],\n                        {\n                            params: {\n                                assetLargeFile: targetFileWithNoFile,\n                            },\n                            headers: {\n                                \"Content-Type\": 'multipart/form-data'\n                            }\n                        })\n                    response.data.code === 200 && targetFile.currentChunk++\n                    setProgresses(pre => {\n                        pre[targetIndex] = Math.round(100 / chunks.length * targetFile.currentChunk);\n                        setNewProgresses([...pre])\n                        return pre\n                    })\n                } catch (err) {\n                    console.log(err);\n                }\n            } else {\n                break;\n            }\n            if (targetFile.currentChunk == targetFile.totalChunk - 1) {\n                targetFile.isUploadComplete = 1\n                setFileList(pre => {\n                    let tempList = [...pre]\n                    tempList[targetIndex] = targetFile\n                    return tempList;\n                })\n            }\n        }\n    }\n    const fileUploadComplete = async () => {\n        try {\n            await api.post(`/complete`,\n                { assetSeq: assetSeq, tags: tags.toString() },\n                {\n                    headers: {\n                        'Content-type': 'application/json',\n                    }\n                })\n            setFileList([]);\n            history.replace('/')\n        } catch (err) {\n            console.log(err)\n        }\n    }\n    // 파일을 청크로 나누는 함수\n    const fileToChunks = (target: File) => {\n        let chunks = [];\n        let chunkIndex = 0; // 파일 자를 시작 위치\n        const CHUNK_COUNT = Math.ceil(target.size / CHUNK_SIZE);//청크갯수\n        for (let i = 1; i <= CHUNK_COUNT; i++) {\n            if (i === CHUNK_COUNT)\n                chunks.push(target.slice(chunkIndex))\n            else\n                chunks.push(target.slice(chunkIndex, chunkIndex + CHUNK_SIZE))\n            chunkIndex += CHUNK_SIZE;\n        }\n        return chunks\n    }\n    /**\n     * * 업로드 재개\n     */\n    const resumeUpload = async () => {\n        const response = await api.get(`/uploaded/${assetSeq}`)\n        const uploadedList: UploadFileInfo[] = response.data.result\n        const tempFileList = [...fileList]\n        for (let i = 0; i < tempFileList.length; i++) {\n            for (let j = 0; j < uploadedList.length; j++) {\n                if (tempFileList[i].assetUuidName === uploadedList[j].assetUuidName) {\n                    let tempF = tempFileList[i]\n                    let tempU = uploadedList[j]\n                    tempF.isUploadComplete = tempU.isUploadComplete\n                    tempF.currentChunk = tempU.currentChunk + 1\n                    tempF.uploadedSize = tempU.uploadedSize\n                    break;\n                }\n            }\n        }\n        setFileList([...tempFileList])\n        console.log(fileList, tempFileList)\n    }\n\n    const addTag = (e: React.KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === \"Enter\" || e.key === \"Tab\") {\n            e.preventDefault();\n            let inputTag = currentInputTag.trim();\n            if (inputTag !== \"\") {\n                if (tags.filter(tag => tag === inputTag).length <= 0) {\n                    setIsTagDuplicated(false);\n                    let tmp: Array<string> = [...tags].concat(currentInputTag);\n                    setTags(tmp);\n                } else {\n                    setIsTagDuplicated(true)\n                }\n            }\n            setCurrentInputTag('');\n        }\n    }\n\n    const removeTag = (targetTag: string) => {\n        const targetTagIndex = tags.findIndex(e => e === targetTag);\n        tags.splice(targetTagIndex, 1);\n        setTags([...tags]);\n    }\n\n\n    const useStyles = makeStyles({\n        root: {\n            height: 240,\n            flexGrow: 1,\n            maxWidth: 400,\n            display: 'contents',\n        },\n        label: {\n            textAlign: 'left'\n        },\n        group: {\n            marginLeft: 7,\n            paddingLeft: 18,\n            borderLeft: `1px dashed ${fade('#000000', 0.4)}`,\n        },\n        iconContainer: {\n            \"& svg\": {\n                marginLeft: 10\n            }\n        }\n    });\n\n    function setFileListProp(action: string, payload: any) {\n        switch (action) {\n            case \"set\":\n                setFileList(payload)\n                break;\n            case \"add\":\n                setFileList(pre => {\n                    let tempFileList = [...pre];\n                    tempFileList = tempFileList.concat(payload)\n                    return tempFileList;\n                })\n                break;\n            case \"delete\":\n                setFileList(pre => {\n                    let tempFileList = [...pre];\n                    tempFileList.splice(payload, 1);\n                    return tempFileList;\n                })\n                break;\n            default:\n                setFileList([])\n                break;\n        }\n    }\n\n    const classes = useStyles();\n    return (\n        <>\n\n            <DivWrapper>\n                <DivContainer>\n                    <DivBox>\n                        <DivTitleContainer>\n                            <h2 className=\"h3 mb-2 text-gray-800\">업로드</h2>\n                        </DivTitleContainer>\n                        <FormLogin\n                        // onSubmit={submitFiles}\n                        >\n                            <DivInputGroup>\n                                <SpanInputLabel>제목</SpanInputLabel>\n                                <InputText type=\"text\" value={title} onChange={(e) => { setTitle(e.target.value) }} className=\"logininput\" />\n                            </DivInputGroup>\n\n                            <DivInputGroup>\n                                <SpanInputLabel>카테고리</SpanInputLabel>\n                                {categories.length > 0 ? (\n                                    <TreeView\n                                        onNodeToggle={handleToggle}\n                                        onNodeSelect={handleNodeSelect}\n                                        className={classes.root}\n                                        defaultCollapseIcon={<FolderOpen />}\n                                        defaultExpandIcon={<Folder />}\n                                        expanded={expendedCategory}\n                                    >\n                                        <div>\n                                            {categories.map((category: TreeViews) => {\n                                                return <Category key={category.categoryId} category={category} />\n                                            })}\n                                        </div>\n                                    </TreeView>\n                                ) :\n                                    (<CircularProgress />)\n                                }\n                            </DivInputGroup>\n\n\n                            <DivInputGroup>\n                                <SpanInputLabel>태그</SpanInputLabel>\n                                <InputText type=\"text\" value={currentInputTag} onChange={(e) => { setCurrentInputTag(e.target.value) }} onKeyPress={(e) => { addTag(e) }} placeholder=\"태그 입력 후 엔터\" />\n                            </DivInputGroup>\n                            <DivTagGroup>\n                                {\n                                    isTagDuplicated ?\n                                        <div style={{ color: 'red' }}>\n                                            중복된 태그입니다.\n                                    </div> : null\n                                }\n\n                                {tags.map((data, i) =>\n                                    <SpanTag key={i}>{data}<SpanTimes onClick={() => { removeTag(data) }}>×</SpanTimes></SpanTag>\n                                )}\n                            </DivTagGroup>\n                            <DivInputGroup>\n                                <DropZone fileList={fileList} setFileListProp={setFileListProp} isPaused={isPaused} />\n                            </DivInputGroup>\n                            <DivTagGroup>\n                                {!isPaused ? (<Button size=\"large\" color=\"primary\"\n                                    onClick={submitFiles} variant=\"contained\"\n                                >업로드</Button>)\n                                    :\n                                    (<Button size=\"large\" color=\"primary\" variant=\"contained\"\n                                        onClick={handleResumeUpload}\n                                    >업로드 재개</Button>)}\n\n                            </DivTagGroup>\n\n                        </FormLogin>\n                    </DivBox>\n                </DivContainer>\n            </DivWrapper>\n\n            <Dialog\n                open={alertOpen}\n                onClose={handleAlertClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">{\"입력정보를 확인해주세요\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        (제목, 카테고리, 파일첨부는 필수요소 입니다.)\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleAlertClose} color=\"primary\">\n                        확인\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <Dialog\n                open={uploadOpen}\n                // onClose={handlerUploadClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">{\"업로드\"}</DialogTitle>\n                <DialogContent>\n                    <List className={classes.root}>\n                        {fileList.map((file, mapIndex) =>\n                            <ListItem alignItems=\"flex-start\">\n                                <ListItemText\n                                    primary={file.assetOriginName}\n                                    secondary={\n                                        <React.Fragment>\n                                            <Box display=\"flex\" alignItems=\"center\">\n                                                <Box width=\"100%\" mr={1}>\n                                                    <LinearProgress variant=\"determinate\" value={newProgresses[mapIndex]} />\n                                                </Box>\n                                                <Box minWidth={35}>\n                                                    <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(newProgresses[mapIndex])}%`}</Typography>\n                                                </Box>\n                                            </Box>\n                                        </React.Fragment>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n\n                    </List>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handlePauseUpload} color=\"primary\" variant=\"contained\">\n                        일시정지\n                    </Button>\n                    <Button onClick={handleCancelUpload} color=\"secondary\" variant=\"contained\">\n                        취소\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog\n                open={cancelOpen}\n                onClose={handleAlertClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">업로드를 취소합니까?</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        업로드를 취소하면 현재까지의 진행사항이 모두 삭제됩니다\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={cancelUpload} color=\"secondary\" variant=\"contained\">\n                        확인\n                    </Button>\n                    <Button onClick={handleCloseCancel} color=\"primary\" variant=\"contained\">\n                        취소\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n}\n\nexport default Upload;",["162","163"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/modify/index.tsx",[],["164","165"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/util/api.ts",[],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/upload/DropZone.tsx",["166","167"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/detail/Info.tsx",["168","169","170","171","172"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/MemberManager/members.tsx",["173","174","175","176","177","178","179","180"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/Categories.tsx",["181","182","183"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/MemberManager/Members.tsx",["184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/login/Login.tsx",["200","201","202","203","204","205"],"import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport axios from 'axios';\nimport styled from '@emotion/styled'\nimport member, { login } from '../../modules/member';\nimport { RootState } from '../../modules';\nimport { useHistory } from 'react-router';\nimport { Switch } from '@material-ui/core';\nimport api from \"../../util/api\";\n\n\nlet DivWrapper = styled.div`\nwidth:100%;\nmargin: 0 auto;\npadding: 0px;\nbox-sizing: border-box;\n`;\n\nlet DivLoginContainer = styled.div`\nwidth: 100%;\n  min-height: 100vh;\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  padding: 15px;\n  background: #ebeeef;\n`;\n\nlet DivLoginBox = styled.div`\nwidth: 670px;\nbackground: #fff;\nborder-radius: 10px;\noverflow: hidden;\nposition: relative;\nbox-shadow: 0 30px 60px 0 rgba(0, 0, 0, 0.3);\n`;\nlet DivLoginTitle = styled.div`\n&:first-child{width: 100%;\nposition: relative;\nz-index: 1;\ndisplay: -webkit-box;\ndisplay: -webkit-flex;\ndisplay: -moz-box;\ndisplay: -ms-flexbox;\ndisplay: flex;\nflex-wrap: wrap;\nflex-direction: column;\nalign-items: center;\n\nbackground-repeat: no-repeat;\nbackground-size: cover;\nbackground-position: center;\n\npadding: 70px 15px 74px 15px;\n\n&:before{\n    content: \"\";\n    display: block;\n    position: absolute;\n    z-index: -1;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    background-color: rgba(54,84,99,0.7);\n}    \n}\n`;\n\nlet SpanLoginTitle = styled.span`\nfont-family: Poppins-Bold;\nfont-size: 30px;\ncolor: #fff;\ntext-transform: uppercase;\nline-height: 1.2;\ntext-align: center;\n`;\n\nconst FormLogin = styled.form`\nwidth: 100%;\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  padding: 43px 88px 93px 190px;\n  box-sizing:border-box;\n`;\n\nconst DivLoginGroup = styled.div`\nwidth: 100%;\n  position: relative;\n  border-bottom: 1px solid #b2b2b2;\n  margin-bottom: 26px;\n`;\n\nconst SpanLoginLabel = styled.span`\nfont-family: Poppins-Regular;\n  font-size: 15px;\n  color: #808080;\n  line-height: 1.2;\n  text-align: right;\n  position: absolute;\n  top: 14px;\n  left: -105px;\n  width: 80px;\n`;\nconst InputLogin = styled.input`\nfont-family: Poppins-Regular;\n  font-size: 15px;\n  color: #555555;\n  line-height: 1.2;\n  height: 45px;\n  display: block;\n  width: 100%;\n  background: transparent;\n  padding: 0 5px;\n  outline:none;\n  border:none;\n`;\n\nconst SpanLoginFocus = styled.span`\n&:first-child{position: absolute;\n  display: block;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  pointer-events: none;\n  &:before{\n    content: \"\";\n    display: block;\n    position: absolute;\n    bottom: -1px;\n    left: 0;\n    width:0;\n    height: 2px;\n    transition: all 0.6s;\n    background: #57b846;\n  }\n  ${InputLogin}:focus + &:before{\n    width: 100%;\n  }\n}\n`;\n\nconst DivButtonWrapper = styled.div`\nwidth: 100%;\ndisplay: -webkit-box;\ndisplay: -webkit-flex;\ndisplay: -moz-box;\ndisplay: -ms-flexbox;\ndisplay: flex;\nflex-wrap: wrap;\n`;\n\nconst ButtonLogin = styled.button`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding: 0 20px;\nmin-width: 160px;\nheight: 50px;\nbackground-color: #57b846;\nborder-radius: 25px;\n\nfont-family: Poppins-Regular;\nfont-size: 16px;\ncolor: #fff;\n// line-height: 1.2;\n\ntransition: all 0.4s;\n&:hover{\n    background-color: #555555;\n    cursor:pointer;\n}&:active{\n    background-color: #222222;\n}\n`;\n\n\n//style end\nfunction parseJwt(token: string) {\n  var base64Url = token.split('.')[1];\n  var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n  var jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\n    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n  }).join(''));\n\n  return JSON.parse(jsonPayload);\n};\nfunction Login() {\n  const history = useHistory();\n  let [username, setUsername] = useState(\"\");\n  let [password, setPassword] = useState(\"\");\n  let [isLoginSuccess, setIsLoginSuccess] = useState(true);\n  const dispatch = useDispatch();\n  async function handleLoginButton(e: any) {\n    e.preventDefault();\n    try {\n      const response = await api.post(`/authenticate`,\n        { username: username, password: password },\n        {\n          headers: {\n            'Content-type': 'application/json',\n            'Access-Control-Allow-Origin': '*'\n          }\n        });\n      dispatch(login({ userId: parseJwt(response.data.token).sub ,userRole: parseJwt(response.data.token).userRole,token:response.data.token, isLogined: true }))\n      sessionStorage.setItem(\"current_user_token\", response.data.token);\n      history.push(\"/\");\n    } catch (err) {\n      setIsLoginSuccess(false)\n    }\n  }\n  \n  return (\n    <div>\n      <DivWrapper>\n        <DivLoginContainer>\n          <DivLoginBox>\n            <DivLoginTitle>\n              <SpanLoginTitle>로그인</SpanLoginTitle>\n            </DivLoginTitle>\n            <FormLogin onSubmit={handleLoginButton}>\n              <DivLoginGroup>\n                <SpanLoginLabel>아이디</SpanLoginLabel>\n                <InputLogin type=\"text\" className=\"logininput\" value={username} onChange={e => setUsername(e.target.value)} />\n                {/* <SpanLoginFocus></SpanLoginFocus>  */}\n              </DivLoginGroup>\n              <DivLoginGroup>\n                <SpanLoginLabel>비밀번호</SpanLoginLabel>\n                <InputLogin type=\"password\" className=\"logininput\" value={password} onChange={e => setPassword(e.target.value)} />\n                {/* <SpanLoginFocus></SpanLoginFocus>  */}\n              </DivLoginGroup>\n              {!isLoginSuccess ?\n                <div style={{ color: 'red' }}>\n                  로그인에 실패했습니다.\n                  </div> :\n                null\n              }\n              <DivButtonWrapper>\n                <ButtonLogin onClick={handleLoginButton}>로그인</ButtonLogin>\n              </DivButtonWrapper>\n            </FormLogin>\n          </DivLoginBox>\n        </DivLoginContainer>\n      </DivWrapper>\n    </div>\n  );\n}\n\nexport default Login;",["206","207"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/modules/fileList.ts",[],["208","209"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/commons/SideHeader.tsx",[],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/DropForHighOrder.tsx",[],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/index.tsx",["210","211"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/DropForLowOrder.tsx",[],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/index.tsx",[],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/index.tsx",[],["212","213"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/modify/ModInfo.tsx",["214","215","216","217","218","219","220"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/commons/SearchWindow.tsx",["221","222","223","224","225","226","227","228","229"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/main/Posts.tsx",["230","231","232","233"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/main/index.tsx",["234"],"import Posts from \"./Posts\"\nimport Sidebar from \"../commons/Sidebar\"\nimport { RouteComponentProps } from \"react-router-dom\"\n\ntype MatchParams = {\n    pageNum: string\n}\n\nconst Main = ({ match }: RouteComponentProps<MatchParams>) => {\n    const {pageNum} = match.params\n    return (\n        <div>\n                <Posts pageNum={pageNum}/>\n        </div>\n    )\n}\n\nexport default Main;",["235","236"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/detail/index.tsx",[],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/MemberManager/index.tsx",[],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/MemberManager/MembersTable.tsx",["237"],{"ruleId":"238","severity":1,"message":"239","line":5,"column":7,"nodeType":"240","messageId":"241","endLine":5,"endColumn":16},{"ruleId":"242","replacedBy":"243"},{"ruleId":"244","replacedBy":"245"},{"ruleId":"238","severity":1,"message":"246","line":35,"column":38,"nodeType":"240","messageId":"241","endLine":35,"endColumn":44},{"ruleId":"238","severity":1,"message":"247","line":35,"column":46,"nodeType":"240","messageId":"241","endLine":35,"endColumn":57},{"ruleId":"248","severity":1,"message":"249","line":181,"column":8,"nodeType":"250","endLine":181,"endColumn":10,"suggestions":"251"},{"ruleId":"252","severity":1,"message":"253","line":206,"column":47,"nodeType":"254","messageId":"255","endLine":206,"endColumn":49},{"ruleId":"252","severity":1,"message":"253","line":232,"column":47,"nodeType":"254","messageId":"255","endLine":232,"endColumn":49},{"ruleId":"242","replacedBy":"256"},{"ruleId":"244","replacedBy":"257"},{"ruleId":"242","replacedBy":"258"},{"ruleId":"244","replacedBy":"259"},{"ruleId":"238","severity":1,"message":"260","line":34,"column":30,"nodeType":"240","messageId":"241","endLine":34,"endColumn":47},{"ruleId":"238","severity":1,"message":"261","line":198,"column":12,"nodeType":"240","messageId":"241","endLine":198,"endColumn":22},{"ruleId":"252","severity":1,"message":"253","line":229,"column":47,"nodeType":"254","messageId":"255","endLine":229,"endColumn":49},{"ruleId":"238","severity":1,"message":"262","line":289,"column":23,"nodeType":"240","messageId":"241","endLine":289,"endColumn":31},{"ruleId":"248","severity":1,"message":"263","line":351,"column":8,"nodeType":"250","endLine":351,"endColumn":18,"suggestions":"264"},{"ruleId":"265","severity":1,"message":"266","line":386,"column":25,"nodeType":"254","messageId":"267","endLine":389,"endColumn":14},{"ruleId":"268","severity":1,"message":"269","line":414,"column":41,"nodeType":"270","messageId":"271","endLine":414,"endColumn":43},{"ruleId":"242","replacedBy":"272"},{"ruleId":"244","replacedBy":"273"},{"ruleId":"242","replacedBy":"274"},{"ruleId":"244","replacedBy":"275"},{"ruleId":"238","severity":1,"message":"276","line":12,"column":7,"nodeType":"240","messageId":"241","endLine":12,"endColumn":17},{"ruleId":"238","severity":1,"message":"277","line":109,"column":7,"nodeType":"240","messageId":"241","endLine":109,"endColumn":23},{"ruleId":"238","severity":1,"message":"278","line":87,"column":10,"nodeType":"240","messageId":"241","endLine":87,"endColumn":18},{"ruleId":"248","severity":1,"message":"279","line":126,"column":8,"nodeType":"250","endLine":126,"endColumn":18,"suggestions":"280"},{"ruleId":"268","severity":1,"message":"269","line":131,"column":36,"nodeType":"270","messageId":"271","endLine":131,"endColumn":38},{"ruleId":"268","severity":1,"message":"281","line":132,"column":44,"nodeType":"270","messageId":"271","endLine":132,"endColumn":46},{"ruleId":"238","severity":1,"message":"282","line":215,"column":11,"nodeType":"240","messageId":"241","endLine":215,"endColumn":35},{"ruleId":"238","severity":1,"message":"283","line":19,"column":8,"nodeType":"240","messageId":"241","endLine":19,"endColumn":13},{"ruleId":"238","severity":1,"message":"284","line":25,"column":6,"nodeType":"240","messageId":"241","endLine":25,"endColumn":17},{"ruleId":"285","severity":1,"message":"286","line":51,"column":42,"nodeType":"287","messageId":"288","endLine":51,"endColumn":43,"suggestions":"289"},{"ruleId":"285","severity":1,"message":"286","line":51,"column":75,"nodeType":"287","messageId":"288","endLine":51,"endColumn":76,"suggestions":"290"},{"ruleId":"285","severity":1,"message":"286","line":53,"column":44,"nodeType":"287","messageId":"288","endLine":53,"endColumn":45,"suggestions":"291"},{"ruleId":"285","severity":1,"message":"292","line":53,"column":46,"nodeType":"287","messageId":"288","endLine":53,"endColumn":47,"suggestions":"293"},{"ruleId":"248","severity":1,"message":"294","line":373,"column":7,"nodeType":"250","endLine":373,"endColumn":17,"suggestions":"295"},{"ruleId":"248","severity":1,"message":"294","line":376,"column":8,"nodeType":"250","endLine":376,"endColumn":17,"suggestions":"296"},{"ruleId":"248","severity":1,"message":"249","line":227,"column":8,"nodeType":"250","endLine":227,"endColumn":10,"suggestions":"297"},{"ruleId":"252","severity":1,"message":"253","line":233,"column":47,"nodeType":"254","messageId":"255","endLine":233,"endColumn":49},{"ruleId":"252","severity":1,"message":"253","line":259,"column":47,"nodeType":"254","messageId":"255","endLine":259,"endColumn":49},{"ruleId":"238","severity":1,"message":"298","line":2,"column":5,"nodeType":"240","messageId":"241","endLine":2,"endColumn":19},{"ruleId":"238","severity":1,"message":"299","line":2,"column":21,"nodeType":"240","messageId":"241","endLine":2,"endColumn":30},{"ruleId":"238","severity":1,"message":"300","line":2,"column":32,"nodeType":"240","messageId":"241","endLine":2,"endColumn":37},{"ruleId":"238","severity":1,"message":"301","line":2,"column":39,"nodeType":"240","messageId":"241","endLine":2,"endColumn":47},{"ruleId":"238","severity":1,"message":"302","line":2,"column":49,"nodeType":"240","messageId":"241","endLine":2,"endColumn":58},{"ruleId":"238","severity":1,"message":"303","line":2,"column":118,"nodeType":"240","messageId":"241","endLine":2,"endColumn":130},{"ruleId":"238","severity":1,"message":"304","line":2,"column":151,"nodeType":"240","messageId":"241","endLine":2,"endColumn":160},{"ruleId":"238","severity":1,"message":"305","line":16,"column":10,"nodeType":"240","messageId":"241","endLine":16,"endColumn":15},{"ruleId":"238","severity":1,"message":"283","line":19,"column":8,"nodeType":"240","messageId":"241","endLine":19,"endColumn":13},{"ruleId":"238","severity":1,"message":"284","line":27,"column":6,"nodeType":"240","messageId":"241","endLine":27,"endColumn":17},{"ruleId":"285","severity":1,"message":"286","line":31,"column":42,"nodeType":"287","messageId":"288","endLine":31,"endColumn":43,"suggestions":"306"},{"ruleId":"285","severity":1,"message":"286","line":31,"column":75,"nodeType":"287","messageId":"288","endLine":31,"endColumn":76,"suggestions":"307"},{"ruleId":"285","severity":1,"message":"286","line":33,"column":44,"nodeType":"287","messageId":"288","endLine":33,"endColumn":45,"suggestions":"308"},{"ruleId":"285","severity":1,"message":"292","line":33,"column":46,"nodeType":"287","messageId":"288","endLine":33,"endColumn":47,"suggestions":"309"},{"ruleId":"248","severity":1,"message":"294","line":356,"column":8,"nodeType":"250","endLine":356,"endColumn":32,"suggestions":"310"},{"ruleId":"248","severity":1,"message":"294","line":359,"column":8,"nodeType":"250","endLine":359,"endColumn":17,"suggestions":"311"},{"ruleId":"238","severity":1,"message":"312","line":2,"column":23,"nodeType":"240","messageId":"241","endLine":2,"endColumn":34},{"ruleId":"238","severity":1,"message":"283","line":3,"column":8,"nodeType":"240","messageId":"241","endLine":3,"endColumn":13},{"ruleId":"238","severity":1,"message":"313","line":5,"column":8,"nodeType":"240","messageId":"241","endLine":5,"endColumn":14},{"ruleId":"238","severity":1,"message":"314","line":6,"column":10,"nodeType":"240","messageId":"241","endLine":6,"endColumn":19},{"ruleId":"238","severity":1,"message":"315","line":8,"column":10,"nodeType":"240","messageId":"241","endLine":8,"endColumn":16},{"ruleId":"238","severity":1,"message":"316","line":129,"column":7,"nodeType":"240","messageId":"241","endLine":129,"endColumn":21},{"ruleId":"242","replacedBy":"317"},{"ruleId":"244","replacedBy":"318"},{"ruleId":"242","replacedBy":"319"},{"ruleId":"244","replacedBy":"320"},{"ruleId":"238","severity":1,"message":"321","line":8,"column":8,"nodeType":"240","messageId":"241","endLine":8,"endColumn":14},{"ruleId":"248","severity":1,"message":"322","line":31,"column":21,"nodeType":"323","endLine":31,"endColumn":65},{"ruleId":"242","replacedBy":"324"},{"ruleId":"244","replacedBy":"325"},{"ruleId":"238","severity":1,"message":"283","line":2,"column":8,"nodeType":"240","messageId":"241","endLine":2,"endColumn":13},{"ruleId":"238","severity":1,"message":"326","line":6,"column":10,"nodeType":"240","messageId":"241","endLine":6,"endColumn":20},{"ruleId":"238","severity":1,"message":"327","line":6,"column":22,"nodeType":"240","messageId":"241","endLine":6,"endColumn":34},{"ruleId":"238","severity":1,"message":"328","line":6,"column":36,"nodeType":"240","messageId":"241","endLine":6,"endColumn":43},{"ruleId":"238","severity":1,"message":"329","line":7,"column":36,"nodeType":"240","messageId":"241","endLine":7,"endColumn":42},{"ruleId":"252","severity":1,"message":"253","line":179,"column":47,"nodeType":"254","messageId":"255","endLine":179,"endColumn":49},{"ruleId":"238","severity":1,"message":"330","line":249,"column":11,"nodeType":"240","messageId":"241","endLine":249,"endColumn":26},{"ruleId":"238","severity":1,"message":"331","line":15,"column":22,"nodeType":"240","messageId":"241","endLine":15,"endColumn":36},{"ruleId":"238","severity":1,"message":"283","line":16,"column":8,"nodeType":"240","messageId":"241","endLine":16,"endColumn":13},{"ruleId":"238","severity":1,"message":"332","line":20,"column":10,"nodeType":"240","messageId":"241","endLine":20,"endColumn":14},{"ruleId":"238","severity":1,"message":"333","line":55,"column":6,"nodeType":"240","messageId":"241","endLine":55,"endColumn":10},{"ruleId":"268","severity":1,"message":"281","line":125,"column":108,"nodeType":"270","messageId":"271","endLine":125,"endColumn":110},{"ruleId":"268","severity":1,"message":"269","line":125,"column":118,"nodeType":"270","messageId":"271","endLine":125,"endColumn":120},{"ruleId":"268","severity":1,"message":"281","line":131,"column":112,"nodeType":"270","messageId":"271","endLine":131,"endColumn":114},{"ruleId":"268","severity":1,"message":"269","line":131,"column":122,"nodeType":"270","messageId":"271","endLine":131,"endColumn":124},{"ruleId":"268","severity":1,"message":"269","line":133,"column":94,"nodeType":"270","messageId":"271","endLine":133,"endColumn":96},{"ruleId":"238","severity":1,"message":"334","line":6,"column":3,"nodeType":"240","messageId":"241","endLine":6,"endColumn":14},{"ruleId":"238","severity":1,"message":"335","line":27,"column":45,"nodeType":"240","messageId":"241","endLine":27,"endColumn":51},{"ruleId":"248","severity":1,"message":"336","line":218,"column":6,"nodeType":"250","endLine":218,"endColumn":39,"suggestions":"337"},{"ruleId":"252","severity":1,"message":"253","line":239,"column":41,"nodeType":"254","messageId":"255","endLine":239,"endColumn":43},{"ruleId":"238","severity":1,"message":"338","line":2,"column":8,"nodeType":"240","messageId":"241","endLine":2,"endColumn":15},{"ruleId":"242","replacedBy":"339"},{"ruleId":"244","replacedBy":"340"},{"ruleId":"238","severity":1,"message":"341","line":18,"column":17,"nodeType":"240","messageId":"241","endLine":18,"endColumn":25},"@typescript-eslint/no-unused-vars","'CANCELADD' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["342"],"no-negated-in-lhs",["343"],"'useRef' is defined but never used.","'useCallback' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadCategories'. Either include it or remove the dependency array.","ArrayExpression",["344"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["342"],["343"],["342"],["343"],"'FormatBoldTwoTone' is defined but never used.","'progresses' is assigned a value but never used.","'response' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'uploadStart'. Either include it or remove the dependency array.",["345"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'pause'.","unsafeRefs","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["342"],["343"],["342"],["343"],"'PContainer' is assigned a value but never used.","'SpanFileErrorMsg' is assigned a value but never used.","'parseJwt' is defined but never used.","React Hook useEffect has a missing dependency: 'findParent'. Either include it or remove the dependency array.",["346"],"Expected '!==' and instead saw '!='.","'handleMultiDownloadAsZip' is assigned a value but never used.","'axios' is defined but never used.","'MatchParams' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["347","348"],["349","350"],["351","352"],"Unnecessary escape character: \\-.",["353","354"],"React Hook useEffect has a missing dependency: 'loadMembers'. Either include it or remove the dependency array.",["355"],["356"],["357"],"'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'Table' is defined but never used.","'TableRow' is defined but never used.","'TableBody' is defined but never used.","'createStyles' is defined but never used.","'TableCell' is defined but never used.","'amber' is defined but never used.",["358","359"],["360","361"],["362","363"],["364","365"],["366"],["367"],"'useSelector' is defined but never used.","'member' is defined but never used.","'RootState' is defined but never used.","'Switch' is defined but never used.","'SpanLoginFocus' is assigned a value but never used.",["342"],["343"],["342"],["343"],"'Header' is defined but never used.","Assignments to the 'token' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression",["342"],["343"],"'ExpandMore' is defined but never used.","'ChevronRight' is defined but never used.","'Comment' is defined but never used.","'colors' is defined but never used.","'handleAlertOpen' is assigned a value but never used.","'PaginationItem' is defined but never used.","'Link' is defined but never used.","'Page' is defined but never used.","'CardActions' is defined but never used.","'Search' is defined but never used.","React Hook useEffect has missing dependencies: 'loadContents' and 'search'. Either include them or remove the dependency array.",["368"],"'Sidebar' is defined but never used.",["342"],["343"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"369","fix":"370"},{"desc":"371","fix":"372"},{"desc":"373","fix":"374"},{"messageId":"375","fix":"376","desc":"377"},{"messageId":"378","fix":"379","desc":"380"},{"messageId":"375","fix":"381","desc":"377"},{"messageId":"378","fix":"382","desc":"380"},{"messageId":"375","fix":"383","desc":"377"},{"messageId":"378","fix":"384","desc":"380"},{"messageId":"375","fix":"385","desc":"377"},{"messageId":"378","fix":"386","desc":"380"},{"desc":"387","fix":"388"},{"desc":"389","fix":"390"},{"desc":"369","fix":"391"},{"messageId":"375","fix":"392","desc":"377"},{"messageId":"378","fix":"393","desc":"380"},{"messageId":"375","fix":"394","desc":"377"},{"messageId":"378","fix":"395","desc":"380"},{"messageId":"375","fix":"396","desc":"377"},{"messageId":"378","fix":"397","desc":"380"},{"messageId":"375","fix":"398","desc":"377"},{"messageId":"378","fix":"399","desc":"380"},{"desc":"400","fix":"401"},{"desc":"389","fix":"402"},{"desc":"403","fix":"404"},"Update the dependencies array to be: [loadCategories]",{"range":"405","text":"406"},"Update the dependencies array to be: [assetSeq, uploadStart]",{"range":"407","text":"408"},"Update the dependencies array to be: [assetSeq, findParent]",{"range":"409","text":"410"},"removeEscape",{"range":"411","text":"412"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"413","text":"414"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"415","text":"412"},{"range":"416","text":"414"},{"range":"417","text":"412"},{"range":"418","text":"414"},{"range":"419","text":"412"},{"range":"420","text":"414"},"Update the dependencies array to be: [isSearch, loadMembers]",{"range":"421","text":"422"},"Update the dependencies array to be: [loadMembers, pageNum]",{"range":"423","text":"424"},{"range":"425","text":"406"},{"range":"426","text":"412"},{"range":"427","text":"414"},{"range":"428","text":"412"},{"range":"429","text":"414"},{"range":"430","text":"412"},{"range":"431","text":"414"},{"range":"432","text":"412"},{"range":"433","text":"414"},"Update the dependencies array to be: [isSearch, orderBy, order, loadMembers]",{"range":"434","text":"435"},{"range":"436","text":"424"},"Update the dependencies array to be: [pageNum, isSearch, hasCondition, search, loadContents]",{"range":"437","text":"438"},[3757,3759],"[loadCategories]",[8912,8922],"[assetSeq, uploadStart]",[3340,3350],"[assetSeq, findParent]",[1376,1377],"",[1376,1376],"\\",[1409,1410],[1409,1409],[1534,1535],[1534,1534],[1536,1537],[1536,1536],[12886,12896],"[isSearch, loadMembers]",[12950,12959],"[loadMembers, pageNum]",[4846,4848],[971,972],[971,971],[1004,1005],[1004,1004],[1129,1130],[1129,1129],[1131,1132],[1131,1131],[12737,12761],"[isSearch, orderBy, order, loadMembers]",[12815,12824],[5091,5124],"[pageNum, isSearch, hasCondition, search, loadContents]"]