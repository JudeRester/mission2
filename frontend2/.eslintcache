[{"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/modules/arrayCategories.ts":"1","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/categories.tsx":"2","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/CategoryNode.tsx":"3","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/App.tsx":"4","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/modules/member.ts":"5","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/dropForHighOrder.tsx":"6","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/dropForLowOrder.tsx":"7","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/reportWebVitals.ts":"8","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/modules/dragNode.ts":"9","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/upload/Upload.tsx":"10","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/modify/index.tsx":"11","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/util/api.ts":"12","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/upload/DropZone.tsx":"13","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/detail/Info.tsx":"14","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/MemberManager/members.tsx":"15","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/Categories.tsx":"16","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/MemberManager/Members.tsx":"17","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/login/Login.tsx":"18","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/modules/fileList.ts":"19","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/commons/SideHeader.tsx":"20","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/DropForHighOrder.tsx":"21","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/index.tsx":"22","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/DropForLowOrder.tsx":"23","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/upload/TempDropZone.tsx":"24","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/upload/tempDropZone.tsx":"25","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/index.tsx":"26","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/upload/TempUpload.tsx":"27","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/index.tsx":"28","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/modify/ModInfo.tsx":"29","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/commons/SearchWindow.tsx":"30","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/main/Posts.tsx":"31","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/main/index.tsx":"32","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/detail/index.tsx":"33","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/MemberManager/index.tsx":"34"},{"size":1551,"mtime":1614751601613,"results":"35","hashOfConfig":"36"},{"size":16653,"mtime":1614760833486,"results":"37","hashOfConfig":"36"},{"size":12219,"mtime":1614833469795,"results":"38","hashOfConfig":"36"},{"size":998,"mtime":1614921835889,"results":"39","hashOfConfig":"36"},{"size":904,"mtime":1614238847852,"results":"40","hashOfConfig":"36"},{"size":2749,"mtime":1614760846682,"results":"41","hashOfConfig":"36"},{"size":2748,"mtime":1614760849253,"results":"42","hashOfConfig":"36"},{"size":425,"mtime":1612155094723,"results":"43","hashOfConfig":"36"},{"size":604,"mtime":1614738344089,"results":"44","hashOfConfig":"36"},{"size":23664,"mtime":1615273061431,"results":"45","hashOfConfig":"36"},{"size":388,"mtime":1613454456600,"results":"46","hashOfConfig":"36"},{"size":857,"mtime":1614248223279,"results":"47","hashOfConfig":"36"},{"size":6666,"mtime":1615273039174,"results":"48","hashOfConfig":"36"},{"size":16883,"mtime":1614830451474,"results":"49","hashOfConfig":"36"},{"size":32026,"mtime":1614760854155,"results":"50","hashOfConfig":"36"},{"size":16349,"mtime":1614833438721,"results":"51","hashOfConfig":"36"},{"size":32026,"mtime":1614760854155,"results":"52","hashOfConfig":"36"},{"size":6141,"mtime":1614247180295,"results":"53","hashOfConfig":"36"},{"size":1618,"mtime":1614909718694,"results":"54","hashOfConfig":"36"},{"size":15436,"mtime":1614821555946,"results":"55","hashOfConfig":"36"},{"size":2806,"mtime":1614824175253,"results":"56","hashOfConfig":"36"},{"size":2285,"mtime":1614822630623,"results":"57","hashOfConfig":"36"},{"size":2805,"mtime":1614824132431,"results":"58","hashOfConfig":"36"},{"size":6056,"mtime":1614909026056,"results":"59","hashOfConfig":"36"},{"size":6674,"mtime":1615271622465,"results":"60","hashOfConfig":"36"},{"size":500,"mtime":1612155094723,"results":"61","hashOfConfig":"36"},{"size":22281,"mtime":1615271336030,"results":"62","hashOfConfig":"36"},{"size":171,"mtime":1614760941592,"results":"63","hashOfConfig":"36"},{"size":15892,"mtime":1614241713096,"results":"64","hashOfConfig":"36"},{"size":6819,"mtime":1613534235297,"results":"65","hashOfConfig":"36"},{"size":6119,"mtime":1614248592921,"results":"66","hashOfConfig":"36"},{"size":382,"mtime":1613438388671,"results":"67","hashOfConfig":"36"},{"size":345,"mtime":1613432960743,"results":"68","hashOfConfig":"36"},{"size":158,"mtime":1614761045214,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},"b90rkt",{"filePath":"74","messages":"75","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"89"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"89"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"73"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"89"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"89"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/modules/arrayCategories.ts",["149"],"const SET = 'arrayCategories/SET' as const;\nconst RESET = 'arrayCategories/RESET' as const;\nconst MODIFY = 'arrayCategories/MODIFY' as const;\nconst ADD = 'arrayCategories/ADD' as const;\nconst CANCELADD = 'arrayCategories/CANCELADD' as const;\n\nexport const setArrayCategories = (array:CategoryInfo[])=>({type:SET, array})\nexport const resetArrayCategories = ()=>({type:RESET})\nexport const modifyCategory = ((node:number)=>({type:MODIFY, node}))\nexport const addCategory = ((node:CategoryInfo)=>({type:ADD,node}))\n\ntype ArrayCategoriesAction = \n    | ReturnType<typeof setArrayCategories>\n    | ReturnType<typeof resetArrayCategories>\n    | ReturnType<typeof modifyCategory>\n    | ReturnType<typeof addCategory>\n\ninterface CategoryInfo {\n    categoryId: number,\n    categoryName: string,\n    categoryOrder: number,\n    categoryParent: number,\n    possessions?: number,\n    newNode?: boolean,\n    modifying?: boolean,\n}\n\n\nconst initialState:CategoryInfo[]=[]\n\nfunction arrayCategories(\n    state=initialState,\n    action:ArrayCategoriesAction\n):CategoryInfo[]{\n    switch (action.type) {\n        case SET:\n            return action.array;\n        case RESET:\n            return initialState;\n        case MODIFY:\n            let tempMod = [...state];\n            tempMod[action.node].modifying = true;\n            return tempMod;\n        case ADD:\n            let tempAdd = [...state];\n            tempAdd=[...tempAdd,action.node];\n            return tempAdd;\n       \n        default:\n            return state;\n    }   \n}\n\nexport default arrayCategories",["150","151"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/categories.tsx",["152","153","154","155","156"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/CategoryNode.tsx",["157"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/App.tsx",["158"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/modules/member.ts",[],["159","160"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/dropForHighOrder.tsx",[],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/dropForLowOrder.tsx",[],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/reportWebVitals.ts",[],["161","162"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/modules/dragNode.ts",[],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/upload/Upload.tsx",["163","164","165","166","167","168","169","170","171"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/modify/index.tsx",[],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/util/api.ts",[],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/upload/DropZone.tsx",["172","173"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/detail/Info.tsx",["174","175","176","177","178","179","180","181"],"import {\n    CardContent,\n    CardMedia,\n    Divider,\n    Grid,\n    Collapse,\n    List,\n    ListItem,\n    ListItemText,\n    makeStyles,\n    GridListTileBar,\n    Table,\n    TableRow,\n    TableCell,\n    ListItemSecondaryAction,\n    IconButton,\n    Button,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogContentText,\n    DialogActions,\n    CircularProgress,\n} from \"@material-ui/core\"\nimport { StarBorder, ExpandLess, ExpandMore, Comment, GetApp } from \"@material-ui/icons\"\n// import { InboxIcon } from '@material-ui/icons/MoveToInbox';\nimport React, { useEffect, useState } from \"react\"\nimport Carousel from \"react-material-ui-carousel\"\nimport moment from 'moment';\nimport { useHistory } from \"react-router\";\nimport { saveAs } from 'file-saver';\nimport JSZip from \"jszip\";\nimport { promises } from \"fs\";\nimport fileDownload from \"js-file-download\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../modules\";\nimport api, { BASE_API_URL } from \"../../util/api\";\n\nconst useStyles = makeStyles(() =>\n({\n    primary: {\n        fontSize: '20px',\n        textAlign: 'center'\n    },\n    nested: {\n        paddingLeft: 4,\n    },\n}),\n);\n\ntype Asset = {\n    assetSeq: number,\n    assetOwner: string,\n    assetOwnerName: string,\n    assetChanger: string,\n    assetChangerName: string,\n    assetTitle: string,\n    assetCreateDate: Date,\n    assetUpdateDate: Date,\n    tags: string,\n    assetCategory: number,\n    assetCategoryName: string,\n    assetFiles: Array<AssetFile>,\n}\ntype AssetFile = {\n    assetSeq: number,\n    assetLocation: string,\n    assetOriginName: string,\n    assetSize: number,\n    assetType: string,\n}\n\ntype MatchParams = {\n    assetSeq: string\n}\n\ntype Category = {\n    categoryId: number,\n    categoryName: string,\n    categoryParent: number,\n    categoryOrder: number\n}\n\nfunction parseJwt(token: string) {\n    var base64Url = token.split('.')[1];\n    var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    var jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\n      return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join(''));\n  \n    return JSON.parse(jsonPayload);\n  };\n\nconst Info = (props: MatchParams) => {\n    const history = useHistory();\n    const assetSeq: string = props.assetSeq;\n    const classes = useStyles();\n    const [isOpen, setIsOpen] = useState(true);\n    const [assetInfo, setAssetInfo] = useState<Asset>();\n    const [parentCategory, setParentCategory] = useState<string>();\n    const [checked, setChecked] = useState<Array<string>>([]);\n    const [deleteOpen, setDeleteOpen] = useState<boolean>(false);\n    const [downloadOpen, setDownloadOpen] = useState<boolean>(false)\n    const [alertOpen, setAlertOpen] = useState<boolean>(false)\n    const [alertMessage, setAlertMessage] = useState<string>('')\n    const user=useSelector((state:RootState)=>state.member);\n    api.defaults.headers.common['Authorization'] = 'Bearer ' + user.token;\n    const handleClick = () => {\n        setIsOpen(!isOpen);\n    };\n\n\n\n    useEffect(() => {\n        api.get(`/asset/${assetSeq}`\n        ).then(result => {\n            setAssetInfo(result.data.result);\n            api.get(`/category/list`)\n                .then(response => {\n                    setParentCategory(findParent(result.data.result.assetCategory, response.data.result))\n                })\n        })\n    }, [assetSeq])\n\n    const findParent = (target: number, categories: Category[]) => {\n        let pStr = \"\";\n        categories.forEach(element => {\n            if (element.categoryId == target) {\n                if (element.categoryParent != 0) {\n                    pStr = findParent(element.categoryParent, categories) + '>' + element.categoryName\n                    return\n                } else {\n                    pStr = element.categoryName\n                    return\n                }\n            }\n        });\n        return pStr;\n    }\n\n    const handleToggle = (value: string) => () => {\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        setChecked(newChecked);\n    };\n\n    const goModify = () => {\n        history.push(`/modify/${assetSeq}`)\n    }\n\n    const handleDeleteOpen = () => {\n        setDeleteOpen(true)\n    }\n\n    const handleDeleteClose = () => {\n        setDeleteOpen(false)\n    }\n    const handleAlertOpen = () => {\n        setAlertOpen(true)\n    }\n\n    const handleAlertClose = () => {\n        setAlertOpen(false)\n    }\n\n    const handleDeleteConfirm = () => {\n        api.delete(`/asset/${assetSeq}`,\n            {\n                params: {\n                    assetOwner: assetInfo.assetOwner\n                }\n            }\n        )\n            .then(response => {\n                const data = response.data;\n                if(data.code === 403){\n                    setDeleteOpen(false)\n                    setAlertMessage(data.result)\n                    setAlertOpen(true)\n                }else{\n                    history.push(\"/\");\n                }\n            })\n    }\n\n    const handleSingleDownload = (fileLocation: string, fileOriginName: string) => () => {\n        api.get(`/download`, {\n            responseType: 'blob',\n            params:{\n                fileLocation\n            }\n        })\n            .then(response => {\n                fileDownload(response.data, fileOriginName);\n            })\n    }\n\n    const handleDownloadClose = () =>{\n        setDownloadOpen(false)\n    }\n\n    const handleMultiDownloadAsZip = () => {\n        const makeZip = new Promise(async (resolve, reject) => {\n            let zip = new JSZip();\n            setDownloadOpen(true)\n            \n            for (let i = 0; i < checked.length; i++) {\n                let fileInfo = checked[i].split(',')\n                await api.get(`${fileInfo[0]}`,\n                    {\n                        responseType: 'blob',\n                        // onDownloadProgress:ProgressEvent=>{\n                        //     const percentage=Math.round(\n                        //         ProgressEvent.loaded*100/ProgressEvent.total\n                        //     )\n                        //     setProgress(percentage);\n                        //     setWholeProgress(progress/checked.length)\n                        // }\n                    })\n                    .then(response => {\n                        zip.file(fileInfo[1],response.data);\n                    })\n            }\n            resolve(zip)\n        });\n        makeZip.then((value:any)=>{\n            value.generateAsync({ type: \"blob\" })\n            .then(function (content:any) {\n                // see FileSaver.js\n                saveAs(content, assetInfo.assetTitle + \".zip\");\n                setDownloadOpen(false)\n            })\n        })\n    }\n    return (\n        <div style={{ marginTop: 20, padding: 30 }}>\n            {assetInfo &&\n                <Grid container spacing={2}>\n                    <Grid item xs={8}>\n                        <Carousel\n                            autoPlay={false}\n                            animation={\"slide\"}\n                            indicators={true}\n                            navButtonsAlwaysVisible={true}\n                        >\n                            {assetInfo && assetInfo.assetFiles.map((item, i) => (\n                                <Grid item>\n                                    <CardContent>\n                                        <CardMedia>\n                                            {!item.assetType ?\n                                                <div>\n                                                    <img src={BASE_API_URL.substring(0,BASE_API_URL.lastIndexOf('/api'))+\"/images/unsupportedFile.png\"} alt=\"\" />\n                                                    <GridListTileBar title={\"미리보기가 지원되지 않는 형식\"} />\n                                                </div>\n                                                :\n                                                item.assetType.includes(\"image\") ?\n                                                    <img style={{ maxWidth: '600px',maxHeight:'600px' }} src={BASE_API_URL.substring(0,BASE_API_URL.lastIndexOf('/api'))+item.assetLocation.substring(item.assetLocation.lastIndexOf(\"/uploadedImages\"))} alt=\"\" />\n                                                    : item.assetType.includes(\"video\") ?\n                                                        <video style={{ maxWidth: '600px',maxHeight:'600px' }} controls src={BASE_API_URL.substring(0,BASE_API_URL.lastIndexOf('/api'))+item.assetLocation.substring(item.assetLocation.lastIndexOf(\"/uploadedImages\"))} />\n                                                        :\n                                                        item.assetType.includes(\"audio\") ?\n                                                            <audio controls src={BASE_API_URL.substring(0,BASE_API_URL.lastIndexOf('/api'))+item.assetLocation.substring(item.assetLocation.lastIndexOf(\"/uploadedImages\"))} />\n                                                            : <div>\n                                                                <img src={BASE_API_URL.substring(0,BASE_API_URL.lastIndexOf('/api'))+\"/images/unsupportedFile.png\"} alt=\"\" />\n                                                                <GridListTileBar title={\"미리보기가 지원되지 않는 형식\"} />\n                                                            </div>\n                                            }\n\n                                        </CardMedia>\n                                    </CardContent>\n                                </Grid>\n                            ))}\n                        </Carousel>\n                    </Grid>\n                    <Divider orientation=\"vertical\" flexItem />\n                    <Grid item xs={3}>\n                        <h1>{assetInfo.assetTitle}</h1>\n                        <Table aria-label=\"simple table\">\n                            <TableRow>\n                                <TableCell align=\"right\" style={{ color: \"grey\" }}>등록일 : {moment(assetInfo.assetCreateDate).format('YYYY-MM-DD HH:mm:ss')}\n                                    {assetInfo.assetCreateDate !== assetInfo.assetUpdateDate ? <><br />수정일 : {moment(assetInfo.assetUpdateDate).format('YYYY-MM-DD HH:mm:ss')}</> : null}</TableCell>\n\n                            </TableRow>\n                            <TableRow>\n                                <TableCell>작성자 : {assetInfo.assetOwnerName}{assetInfo.assetChanger && <><br />최종 수정자 : {assetInfo.assetChangerName}</>}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell>\n                                    카테고리 : {parentCategory}\n                                </TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell>\n                                    태그 : {assetInfo.tags}\n                                </TableCell>\n                            </TableRow>\n                        </Table>\n                        <Button onClick={goModify} color=\"primary\">수정</Button>\n                        {(user.userRole===\"ROLE_ADMIN\" || user.userId === assetInfo.assetOwner) && <Button onClick={handleDeleteOpen} color=\"secondary\">삭제</Button>}\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Divider />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <ListItem button onClick={handleClick}>\n                            <ListItemText primary=\"파일 리스트\" classes={{ primary: classes.primary }} />\n                            {isOpen ? <ExpandLess /> : <ExpandMore />}\n                        </ListItem>\n                        <Collapse in={isOpen} timeout=\"auto\" unmountOnExit>\n                            <List component=\"div\" disablePadding>\n                                {/* <ListItem key=\"download\" role=\"selected-download\" style={{ height: 42, textAlign: 'center' }}>\n                                    <ListItemText>\n                                        <Button endIcon={<GetApp />} size=\"large\" onClick={handleMultiDownloadAsZip}>선택파일 다운로드</Button>\n                                    </ListItemText>\n                                </ListItem> */}\n                                {assetInfo.assetFiles.map((file, i) => {\n                                    const labelId = `checkbox-list-label-${i}`;\n                                    const fileLocation = file.assetLocation.substring(file.assetLocation.lastIndexOf(\"/uploadedImages\"));\n                                    return (\n                                        <ListItem key={i} role={undefined} dense button onClick={handleToggle(`${fileLocation},${file.assetOriginName}`)}>\n                                            {/* <ListItemIcon>\n                                                <Checkbox\n                                                    edge=\"start\"\n                                                    checked={checked.indexOf(`${fileLocation},${file.assetOriginName}`) !== -1}\n                                                    tabIndex={-1}\n                                                    disableRipple\n                                                    inputProps={{ 'aria-labelledby': labelId }}\n                                                /> \n                                            </ListItemIcon> */}\n                                            <ListItemText id={labelId} primary={`${file.assetOriginName}`} />\n                                            <ListItemSecondaryAction>\n                                                <IconButton edge=\"end\" aria-label=\"comments\" onClick={handleSingleDownload(file.assetLocation, file.assetOriginName)}>\n                                                    <GetApp />\n                                                </IconButton>\n                                            </ListItemSecondaryAction>\n                                        </ListItem>\n                                    );\n                                })}\n                            </List>\n                        </Collapse>\n                    </Grid>\n                </Grid>\n\n            }\n            <Dialog\n                open={deleteOpen}\n                onClose={handleDeleteClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">{\"삭제하시겠습니까?\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        삭제된 게시글은 복구되지 않습니다.\n                     </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleDeleteConfirm} color=\"secondary\">\n                        확인\n                    </Button>\n                    <Button onClick={handleDeleteClose} color=\"primary\">\n                        취소\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog\n                open={downloadOpen}\n                onClose={handleDownloadClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">{\"다운로드를 준비중입니다.\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\" style={{textAlign:'center'}}>\n                         <CircularProgress />\n                     </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleDownloadClose} color=\"secondary\">\n                        확인\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog\n                open={alertOpen}\n                onClose={handleAlertOpen}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">{alertMessage}</DialogTitle>\n               \n                <DialogActions>\n                    <Button onClick={handleAlertClose} color=\"secondary\">\n                        확인\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\nexport default Info","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/MemberManager/members.tsx",["182","183","184","185","186","187","188","189"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/Categories.tsx",["190","191","192","193","194","195","196","197"],"import api from \"../../../util/api\";\n\nimport {\n    Card,\n    CardHeader,\n    Paper,\n    makeStyles,\n    CardContent,\n    Grid,\n    ListItem,\n    List,\n    CircularProgress,\n    fade,\n    Table,\n    TableHead,\n    TableRow,\n    TableCell,\n    Typography,\n    Button,\n    withStyles,\n    Theme,\n    Tooltip,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogContentText,\n    DialogActions,\n} from \"@material-ui/core\";\nimport {\n    amber,\n    red\n} from \"@material-ui/core/colors\";\n\nimport arrayToTree from \"array-to-tree\";\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport { TreeItem, TreeView } from \"@material-ui/lab\";\nimport { ChevronRight, ExpandMore, Folder, FolderOpen, Remove, SubdirectoryArrowRight } from \"@material-ui/icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../../../modules\";\nimport CategoryNode from \"./CategoryNode\";\nimport {\n    setArrayCategories,\n    modifyCategory,\n    addCategory,\n} from \"../../../modules/arrayCategories\";\n\nconst ModifyButton = withStyles((theme: Theme) => ({\n    root: {\n        color: theme.palette.getContrastText(amber[500]),\n        backgroundColor: amber[500],\n        '&:hover': {\n            backgroundColor: amber[700],\n        },\n        '&:disabled': {\n            backgroundColor: \"#757575\"\n        }\n\n    },\n}))(Button);\nconst DeleteButton = withStyles((theme: Theme) => ({\n    root: {\n        color: theme.palette.getContrastText(red[900]),\n        backgroundColor: red[900],\n        '&:hover': {\n            backgroundColor: red[700],\n        },\n        '&:disabled': {\n            backgroundColor: \"#757575\"\n        },\n        marginLeft: 5\n    },\n}))(Button);\n\nconst useStyles = makeStyles(() => ({\n    addButton: {\n        margin: \"auto\",\n    },\n    ul: {\n        justifyContent: 'center',\n        padding: 10,\n    },\n    dialogPaper: {\n        width: \"400px\",\n    },\n    dialogTextField: {\n        width: \"100%\",\n        height: \"90px\"\n    },\n    root: {\n        padding: '2px 4px',\n        alignItems: 'center',\n        // display:'flex',\n        width: \"100%\",\n    },\n    input: {\n        flex: 1,\n        width: 250\n    },\n    iconButton: {\n        padding: 10,\n    },\n    divider: {\n        height: 28,\n        margin: 4,\n    },\n    formControl: {\n        margin: 1,\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: 2,\n    },\n    elevation4: {\n        boxShadow: \"inset 0px 2px 4px -1px rgb(0 0 0 / 20%), inset 0px 4px 5px 0px rgb(0 0 0 / 14%), inset 0px 1px 10px 0px rgb(0 0 0 / 12%) !important\"\n    },\n    paperRoot: {\n        padding: 10,\n        width: '100%',\n        minHeight: '500px',\n        overflow: \"scroll\"\n    },\n    paperInfo: {\n        margin: 10,\n        padding: 10,\n        width: '100%',\n        minHeight: '230px',\n        overflow: \"scroll\"\n    },\n    tooltip: {\n        fontSize: 15,\n        textAlign: \"center\"\n    }\n}))\n\ninterface TreeViews {\n    children?: TreeViews[];\n    categoryName: string;\n    categoryId: string;\n}\n\n\ninterface CategoryInfo {\n    categoryId: number,\n    categoryName: string,\n    categoryOrder: number,\n    categoryParent: number,\n    possessions?: number,\n    newNode?: boolean,\n    modifying?: boolean,\n}\nconst useTreeStyles = makeStyles({\n    root: {\n        height: 240,\n        flexGrow: 1,\n        // maxWidth: 400,\n        display: 'contents',\n        \".dragOver\": {\n            backgroundColor: \"red\",\n        }\n    },\n    label: {\n        textAlign: 'left'\n    },\n    group: {\n        marginLeft: 7,\n        paddingLeft: 18,\n        borderLeft: `1px dashed ${fade('#000000', 0.4)}`,\n    },\n    iconContainer: {\n        \"& svg\": {\n            marginLeft: 10\n        }\n    }\n});\n\n\n\nconst Categories = () => {\n\n    /**\n     * ? store\n     */\n    const arrayCategories = useSelector((state: RootState) => state.arrayCategories)\n    const dispatch = useDispatch()\n    const user = useSelector((state: RootState) => state.member)\n    const draggedNode = useSelector((state: RootState) => state.dragNode)\n\n    api.defaults.headers.common['Authorization'] = 'Bearer ' + user.token;\n\n    /**\n     * ? state\n     */\n\n    const [treeCategories, setTreeCategories] = useState([]);\n    const [selectedCategory, setSelectedCategory] = useState<string>('');\n    const [expendedCategory, setExpendedCategory] = useState<Array<string>>();\n    const [selectedCategoryInfo, setSelectedCategoryInfo] = useState<CategoryInfo>();\n    const [deleteOpen, setDeleteOpen] = useState<boolean>(false)\n\n    /**\n     * ? style\n     */\n\n    const treeClasses = useTreeStyles();\n    const classes = useStyles();\n\n    /**\n     * ? functions\n     */\n\n    const loadCategories = async () => {\n        const response = await api.get('/category/list')\n        const array = response.data.result\n        dispatch(setArrayCategories(array))\n    }\n\n    useEffect(() => {\n        loadCategories()\n    }, [])\n\n\n    useEffect(() => {\n        let tempArray: Array<string> = [];\n        async function getParents(array: Array<TreeViews>) {\n            await array.map((node: TreeViews) => {\n                if (node.children) {\n                    tempArray.push(node.categoryId + '');\n                    getParents(node.children);\n                }\n            });\n        };\n        getParents(treeCategories);\n        setExpendedCategory([...tempArray, \"0\"])\n    }, [treeCategories])\n\n    useEffect(() => {\n        setTreeCategories(arrayToTree(arrayCategories, { parentProperty: 'categoryParent', customID: 'categoryId' }))\n        // handleTreeLabelClick(\"0\")\n    }, [arrayCategories])\n    const handleToggle = (event: any, nodeIds: string[]) => {\n        event.preventDefault()\n    };\n    const handleNodeSelect = (event: any, nodeId: React.SetStateAction<string>) => {\n        event.stopPropagation();\n        setSelectedCategory(nodeId)\n    };\n\n    const hasChild = () => {\n        let tempArray: Array<string> = [];\n        async function getParents(array: Array<TreeViews>) {\n            await array.map((node: TreeViews) => {\n                if (node.children) {\n                    tempArray.push(node.categoryId + '');\n                    getParents(node.children);\n                }\n            });\n        }\n        getParents(treeCategories);\n        return tempArray.findIndex((e: string) => e === `${selectedCategoryInfo.categoryId}`)\n    }\n\n    const handleAddCategory = async () => {\n        const order = await getLastOrder(selectedCategory)\n        const newNode: CategoryInfo = {\n            categoryId: new Date().getTime(),\n            categoryName: '',\n            categoryOrder: order,\n            categoryParent: Number(selectedCategory),\n            possessions: 0,\n            newNode: true,\n        }\n        dispatch(addCategory(newNode))\n    }\n\n    const handleModifyCategory = () => {\n        const targetIndex = arrayCategories.findIndex((e: CategoryInfo) => e.categoryId + '' === selectedCategory);\n        dispatch(modifyCategory(targetIndex))\n    }\n\n    function getLastOrder(nodeId: string) {\n        let count = 0\n        for (let i = 0; i < arrayCategories.length; i++) {\n            if (arrayCategories[i].categoryParent + '' === nodeId)\n                count++\n        }\n        return count\n    }\n    const handleTreeLabelClick = async (nodeId: string) => {\n        const response = await api.get(`/category/${nodeId}`)\n        setSelectedCategoryInfo(response.data.result)\n    }\n\n    const handleTreeIconClick = (nodeId: string) => {\n        const targetIndex = expendedCategory.findIndex((e: string) => e === nodeId);\n        targetIndex === -1 ?\n            setExpendedCategory(pre => {\n                let temp: string[] = [...pre];\n                temp = [...temp, nodeId]\n                return temp\n            })\n            : setExpendedCategory(pre => {\n                let temp: string[] = [...pre];\n                temp.splice(targetIndex, 1)\n                return temp;\n            })\n    }\n\n    const deleteButtonClick = () => {\n        setDeleteOpen(true)\n    }\n\n    const handleDeleteClose = () => {\n        setDeleteOpen(false)\n    }\n    const handleDeleteConfirm = () => {\n        api.delete(`/category/${selectedCategoryInfo.categoryId}`)\n            .then(response => {\n                setSelectedCategory(null)\n                setDeleteOpen(false)\n                loadCategories()\n                handleTreeLabelClick(\"0\")\n            })\n    }\n\n\n    const onDragOver = (e: React.DragEvent) => {\n        e.preventDefault();\n    }\n\n    const onDrop = async (e: React.DragEvent, categoryId: string) => {\n        e.stopPropagation()\n        if (draggedNode.includes(String(categoryId))) {\n            //드랍 불가능 액션\n        } else {\n            const node = arrayCategories[arrayCategories.findIndex((element) => element.categoryId === Number(draggedNode[0]))]\n            node.categoryParent = Number(categoryId)\n            await api.put(`category/order`, node)\n            loadCategories()\n        }\n    }\n\n    const setTestCategory = (target: Array<string>) => {\n        setExpendedCategory(target);\n    }\n\n    return (\n        <>\n            <Paper style={{ maxWidth: 1024, margin: \"auto\" }}>\n                <Card>\n                    <CardHeader\n                        title=\"카테고리 관리\"\n                    />\n                    <CardContent>\n\n                        <Grid item>\n\n                            <Table>\n                                <TableHead>\n                                    <TableRow style={{ height: \"50px\" }}>\n                                        {selectedCategoryInfo ?\n                                            <>\n                                                <TableCell>\n                                                    카테고리 내 게시글 수 : {selectedCategoryInfo.possessions}\n                                                </TableCell>\n                                                <TableCell align=\"right\" style={{ padding: 0 }}>\n                                                    <Button variant=\"contained\" color=\"primary\" style={{ marginRight: 5 }} onClick={handleAddCategory}>추가</Button>\n                                                    {selectedCategoryInfo.categoryId ?\n                                                        <>\n                                                            <ModifyButton onClick={handleModifyCategory}>수정</ModifyButton>\n                                                            {selectedCategoryInfo.possessions || hasChild() !== -1 ?\n                                                                <Tooltip classes={{ tooltip: classes.tooltip }} title=\"하위 카테고리나 게시물이 있는 카테고리는 삭제할 수 없습니다\" arrow >\n                                                                    <span>\n                                                                        <DeleteButton disabled={true}>삭제</DeleteButton>\n                                                                    </span>\n                                                                </Tooltip>\n                                                                :\n                                                                <DeleteButton onClick={deleteButtonClick} disabled={false}>삭제</DeleteButton>\n                                                            }\n                                                        </>\n                                                        :\n                                                        null\n                                                    }\n                                                </TableCell>\n                                            </>\n                                            :\n                                            <TableCell colSpan={2} align=\"center\"\n                                            //  style={{ textAlign: \"center\" }}\n                                            >\n                                                <Typography variant={\"h6\"}>카테고리를 선택해 주세요</Typography>\n                                            </TableCell>\n                                        }\n                                    </TableRow>\n                                </TableHead>\n                            </Table>\n                            <List>\n                                <ListItem key={1}>\n                                    <Paper elevation={4} classes={{ elevation4: classes.elevation4, root: classes.paperRoot }}>\n                                        {treeCategories && expendedCategory ? (\n                                            <TreeView\n                                                onNodeToggle={handleToggle}\n                                                onNodeSelect={handleNodeSelect}\n                                                className={classes.root}\n                                                defaultCollapseIcon={<FolderOpen />}\n                                                defaultExpandIcon={<Folder />}\n                                                expanded={expendedCategory}\n                                                defaultSelected=\"0\"\n                                            >\n                                                <TreeItem\n                                                    key=\"0\"\n                                                    nodeId=\"0\"\n                                                    label=\"전체 보기\"\n                                                    onDragOver={onDragOver}\n                                                    onDrop={(e) => { onDrop(e, \"0\") }}\n                                                    onIconClick={() => handleTreeIconClick(\"0\")}\n                                                    classes={{ label: treeClasses.label, group: treeClasses.group, iconContainer: treeClasses.iconContainer }}\n                                                    onLabelClick={() => handleTreeLabelClick(\"0\")}\n                                                    endIcon={<Remove />}>\n                                                    {treeCategories.map((category: TreeViews) => {\n                                                        return <CategoryNode\n                                                            key={category.categoryName}\n                                                            category={category}\n                                                            setExpendedCategoryList={setTestCategory}\n                                                            expendedCategoryList={expendedCategory}\n                                                            selectedInfo={setSelectedCategoryInfo} />\n                                                    })}\n                                                </TreeItem>\n                                            </TreeView>\n                                        ) :\n                                            (<CircularProgress />)\n                                        }\n                                    </Paper>\n                                </ListItem>\n                            </List>\n                        </Grid>\n                    </CardContent>\n                </Card>\n            </Paper>\n\n            <Dialog\n                open={deleteOpen}\n                onClose={handleDeleteClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">{\"카테고리 삭제\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        {selectedCategoryInfo &&\n                            `${selectedCategoryInfo.categoryName} 카테고리를 삭제하시겠습니까?`}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <DeleteButton onClick={handleDeleteConfirm}>\n                        삭제\n                    </DeleteButton>\n                    <Button onClick={handleDeleteClose} color=\"primary\" autoFocus>\n                        취소\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n\n}\nexport default Categories\n","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/MemberManager/Members.tsx",["198","199","200","201","202","203","204","205"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/login/Login.tsx",["206","207","208","209","210","211"],"import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport axios from 'axios';\nimport styled from '@emotion/styled'\nimport member, { login } from '../../modules/member';\nimport { RootState } from '../../modules';\nimport { useHistory } from 'react-router';\nimport { Switch } from '@material-ui/core';\nimport api from \"../../util/api\";\n\n\nlet DivWrapper = styled.div`\nwidth:100%;\nmargin: 0 auto;\npadding: 0px;\nbox-sizing: border-box;\n`;\n\nlet DivLoginContainer = styled.div`\nwidth: 100%;\n  min-height: 100vh;\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  padding: 15px;\n  background: #ebeeef;\n`;\n\nlet DivLoginBox = styled.div`\nwidth: 670px;\nbackground: #fff;\nborder-radius: 10px;\noverflow: hidden;\nposition: relative;\nbox-shadow: 0 30px 60px 0 rgba(0, 0, 0, 0.3);\n`;\nlet DivLoginTitle = styled.div`\n&:first-child{width: 100%;\nposition: relative;\nz-index: 1;\ndisplay: -webkit-box;\ndisplay: -webkit-flex;\ndisplay: -moz-box;\ndisplay: -ms-flexbox;\ndisplay: flex;\nflex-wrap: wrap;\nflex-direction: column;\nalign-items: center;\n\nbackground-repeat: no-repeat;\nbackground-size: cover;\nbackground-position: center;\n\npadding: 70px 15px 74px 15px;\n\n&:before{\n    content: \"\";\n    display: block;\n    position: absolute;\n    z-index: -1;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    background-color: rgba(54,84,99,0.7);\n}    \n}\n`;\n\nlet SpanLoginTitle = styled.span`\nfont-family: Poppins-Bold;\nfont-size: 30px;\ncolor: #fff;\ntext-transform: uppercase;\nline-height: 1.2;\ntext-align: center;\n`;\n\nconst FormLogin = styled.form`\nwidth: 100%;\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  padding: 43px 88px 93px 190px;\n  box-sizing:border-box;\n`;\n\nconst DivLoginGroup = styled.div`\nwidth: 100%;\n  position: relative;\n  border-bottom: 1px solid #b2b2b2;\n  margin-bottom: 26px;\n`;\n\nconst SpanLoginLabel = styled.span`\nfont-family: Poppins-Regular;\n  font-size: 15px;\n  color: #808080;\n  line-height: 1.2;\n  text-align: right;\n  position: absolute;\n  top: 14px;\n  left: -105px;\n  width: 80px;\n`;\nconst InputLogin = styled.input`\nfont-family: Poppins-Regular;\n  font-size: 15px;\n  color: #555555;\n  line-height: 1.2;\n  height: 45px;\n  display: block;\n  width: 100%;\n  background: transparent;\n  padding: 0 5px;\n  outline:none;\n  border:none;\n`;\n\nconst SpanLoginFocus = styled.span`\n&:first-child{position: absolute;\n  display: block;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  pointer-events: none;\n  &:before{\n    content: \"\";\n    display: block;\n    position: absolute;\n    bottom: -1px;\n    left: 0;\n    width:0;\n    height: 2px;\n    transition: all 0.6s;\n    background: #57b846;\n  }\n  ${InputLogin}:focus + &:before{\n    width: 100%;\n  }\n}\n`;\n\nconst DivButtonWrapper = styled.div`\nwidth: 100%;\ndisplay: -webkit-box;\ndisplay: -webkit-flex;\ndisplay: -moz-box;\ndisplay: -ms-flexbox;\ndisplay: flex;\nflex-wrap: wrap;\n`;\n\nconst ButtonLogin = styled.button`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding: 0 20px;\nmin-width: 160px;\nheight: 50px;\nbackground-color: #57b846;\nborder-radius: 25px;\n\nfont-family: Poppins-Regular;\nfont-size: 16px;\ncolor: #fff;\n// line-height: 1.2;\n\ntransition: all 0.4s;\n&:hover{\n    background-color: #555555;\n    cursor:pointer;\n}&:active{\n    background-color: #222222;\n}\n`;\n\n\n//style end\nfunction parseJwt(token: string) {\n  var base64Url = token.split('.')[1];\n  var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n  var jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\n    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n  }).join(''));\n\n  return JSON.parse(jsonPayload);\n};\nfunction Login() {\n  const history = useHistory();\n  let [username, setUsername] = useState(\"\");\n  let [password, setPassword] = useState(\"\");\n  let [isLoginSuccess, setIsLoginSuccess] = useState(true);\n  const dispatch = useDispatch();\n  async function handleLoginButton(e: any) {\n    e.preventDefault();\n    try {\n      const response = await api.post(`/authenticate`,\n        { username: username, password: password },\n        {\n          headers: {\n            'Content-type': 'application/json',\n            'Access-Control-Allow-Origin': '*'\n          }\n        });\n      dispatch(login({ userId: parseJwt(response.data.token).sub ,userRole: parseJwt(response.data.token).userRole,token:response.data.token, isLogined: true }))\n      sessionStorage.setItem(\"current_user_token\", response.data.token);\n      history.push(\"/\");\n    } catch (err) {\n      setIsLoginSuccess(false)\n    }\n  }\n  \n  return (\n    <div>\n      <DivWrapper>\n        <DivLoginContainer>\n          <DivLoginBox>\n            <DivLoginTitle>\n              <SpanLoginTitle>로그인</SpanLoginTitle>\n            </DivLoginTitle>\n            <FormLogin onSubmit={handleLoginButton}>\n              <DivLoginGroup>\n                <SpanLoginLabel>아이디</SpanLoginLabel>\n                <InputLogin type=\"text\" className=\"logininput\" value={username} onChange={e => setUsername(e.target.value)} />\n                {/* <SpanLoginFocus></SpanLoginFocus>  */}\n              </DivLoginGroup>\n              <DivLoginGroup>\n                <SpanLoginLabel>비밀번호</SpanLoginLabel>\n                <InputLogin type=\"password\" className=\"logininput\" value={password} onChange={e => setPassword(e.target.value)} />\n                {/* <SpanLoginFocus></SpanLoginFocus>  */}\n              </DivLoginGroup>\n              {!isLoginSuccess ?\n                <div style={{ color: 'red' }}>\n                  로그인에 실패했습니다.\n                  </div> :\n                null\n              }\n              <DivButtonWrapper>\n                <ButtonLogin onClick={handleLoginButton}>로그인</ButtonLogin>\n              </DivButtonWrapper>\n            </FormLogin>\n          </DivLoginBox>\n        </DivLoginContainer>\n      </DivWrapper>\n    </div>\n  );\n}\n\nexport default Login;","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/modules/fileList.ts",[],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/commons/SideHeader.tsx",["212","213","214","215"],"import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport {\n  Button,\n  Checkbox,\n  CircularProgress,\n  Fade,\n  InputBase,\n  Menu,\n  MenuItem,\n  Paper\n} from '@material-ui/core';\nimport SearchWindow from './SearchWindow';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout } from '../../modules/member';\nimport { RootState } from '../../modules';\nimport arrayToTree from 'array-to-tree';\nimport { TreeItem, TreeView } from '@material-ui/lab';\nimport { Clear, Search } from '@material-ui/icons';\nimport api from '../../util/api';\n\nconst drawerWidth = 450;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n      justifyContent: 'flex-end',\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      marginLeft: -drawerWidth,\n    },\n    contentShift: {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    },\n\n    linkButton: {\n      color: 'white',\n    },\n  }),\n);\n\nconst useStylesForSearch = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: '2px 4px',\n      display: 'flex',\n      alignItems: 'center',\n      width: 400,\n    },\n    input: {\n      marginLeft: theme.spacing(1),\n      flex: 1,\n    },\n    iconButton: {\n      padding: 10,\n    },\n    divider: {\n      height: 28,\n      margin: 4,\n    },\n  }),\n);\n\nexport default function SideHeader(props: any) {\n\n  type Asset = {\n    assetSeq: number,\n    assetOwner: string,\n    assetOwnerName: string,\n    assetTitle: string,\n    assetCreateDate: Date,\n    assetUpdateDate: Date,\n    locations: string,\n    assetFiles: Array<AssetFile>,\n    tags: string,\n    locationArray: Array<string>,\n    assetCategory: number,\n    assetCategoryName: string\n  }\n\n  type Page = {\n    startPage: number,\n    endPage: number,\n    prev: false,\n    next: false,\n    total: number\n  }\n\n  type AssetFile = {\n    assetLocation: string,\n    assetOriginName: string,\n    assetSeq: number,\n    assetSize: number,\n    assetType: string,\n  }\n\n  const user = useSelector((state: RootState) => state.member)\n  api.defaults.headers.common['Authorization'] = 'Bearer ' + user.token;\n  const useTreeStyles = makeStyles({\n    root: {\n      height: 240,\n      flexGrow: 1,\n      maxWidth: 400,\n      display: 'contents',\n    },\n    label: {\n      textAlign: 'left'\n    },\n  });\n  const treeClasses = useTreeStyles();\n  const classes = useStyles();\n  const searchClasses = useStylesForSearch();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n  let [categoriesHavingChild, setCategoriesHavingChild] = useState<Array<string>>();\n  let [categories, setCategories] = useState([]);\n  let [selectedCategory, setSelectedCategory] = useState<string>();\n  let [tags, setTags] = useState<Array<Tags>>();\n  const [checkedTags, setCheckedTags] = React.useState([]);\n  const [keyword, setKeyword] = useState<string>('');\n  const [crt, setCrt] = useState({ pageNum: 1, amount: 10 })\n  const [isSearch, setIsSearch] = useState<boolean>(false)\n  const [contents, setContents] = useState<Array<Asset>>([]);\n  const [pageNum, setPageNum] = useState<number>(1);\n  const [pageInfo, setPageInfo] = useState<Page>();\n  const [searchWindowOpen, setSearchWindowOpen] = useState<boolean>(false)\n  const [adminMenuAnchorEl, setAdminMenuAnchorEl] = React.useState<null | HTMLElement>(null);\n  const adminMenuOpen = Boolean(adminMenuAnchorEl);\n\n  const handleAdminMenuClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAdminMenuAnchorEl(event.currentTarget);\n  };\n\n  const handleAdminMenuClose = () => {\n    setAdminMenuAnchorEl(null);\n  };\n\n  const handleCheck = (value: string) => () => {\n    const currentIndex = checkedTags.indexOf(value);\n    const newChecked = [...checkedTags];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setCheckedTags(newChecked);\n  };\n\n  useEffect(() => {\n    search()\n  }, [pageNum])\n\n  useEffect(() => {\n\n    api.get(`/category/list`)\n      .then(response => {\n        setCategories(arrayToTree(response.data.result, { parentProperty: 'categoryParent', customID: 'categoryId' }))\n      })\n    api.get(`/tag/list`)\n      .then(response => {\n        setTags(response.data.result)\n      })\n  }, [user])\n\n  useEffect(() => {\n    let tempArray: Array<string> = [];\n    async function getParents(array: Array<TreeViews>) {\n      await array.map((node: TreeViews) => {\n        if (node.children) {\n          tempArray.push(node.categoryId + '');\n          getParents(node.children);\n        }\n      });\n      setCategoriesHavingChild(tempArray)\n    };\n    getParents(categories);\n  }, [categories])\n\n  useEffect(() => {\n    window.onpopstate = (event: any) => {\n      if (isSearch) {\n        setSearchWindowOpen(true)\n      }\n    }\n  })\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const searchInputKeyPress = (e: React.KeyboardEvent<HTMLDivElement>) => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      setIsSearch(true);\n      setPageNum(pre => { return 1 })\n      search()\n    }\n  }\n  const handlerSearchButtonClick = () => {\n    setIsSearch(true);\n    setPageNum(pre => { return 1 })\n    search()\n  }\n  const search = () => {\n    if (isSearch) {\n      let categoryList: Array<string> = [];\n      api.get(`/category/list`)\n        .then(response => {\n          if (selectedCategory)\n            categoryList = (findChild(parseStringToNumber(selectedCategory), response.data.result).split('>'));\n          api.get(`/search?${setData()}`)\n            .then(response => {\n              setContents(response.data.result)\n              setSearchWindowOpen(true)\n              setPageInfo(response.data.reference)\n            })\n        })\n      const setData = () => {\n        let data: string = ''\n        if (categoryList) {\n          categoryList.forEach((element: any) => {\n            data += `category=${element}&`\n          })\n        }\n        if (checkedTags) {\n          checkedTags.forEach((element: any) => {\n            data += `tag=${element}&`\n          })\n        }\n        if (keyword)\n          data += `keyword=${keyword}&`\n        data += `pageNum=${pageNum}`\n        return data\n      }\n    }\n  }\n  const parseStringToNumber = (target: string) => {\n    let parser: number = +target\n    return parser\n  }\n  const findChild = (target: number, categories: CategoryInfo[]) => {\n    let pStr = \"\" + target;\n    categories.forEach(element => {\n      if (element.categoryParent === target) {\n        pStr += '>' + findChild(element.categoryId, categories)\n      }\n    });\n    // pStr+=target;\n    return pStr;\n  }\n  type CategoryInfo = {\n    categoryId: number,\n    categoryName: string,\n    categoryParent: number,\n    categoryOrder: number\n  }\n  type Tags = {\n    assetSeq: number,\n    assetTag: string,\n    count: number\n  }\n\n  interface TreeViews {\n    children?: TreeViews[];\n    categoryName: string;\n    categoryId: string;\n  }\n  interface CategoryProps {\n    category: TreeViews\n  }\n\n  const renderTrees = (nodes: TreeViews) => (\n    <TreeItem key={nodes.categoryId} nodeId={nodes.categoryId + ''} label={nodes.categoryName} classes={{ label: treeClasses.label }}>\n      {Array.isArray(nodes.children) ? nodes.children.map((node) => renderTrees(node)) : null}\n    </TreeItem>\n  );\n\n  const Category = ({ category }: CategoryProps) => {\n    useEffect(() => {\n\n    }, [category]);\n    return renderTrees(category);\n  }\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleToggle = (event: any, nodeIds: string[]) => {\n    event.preventDefault()\n  };\n  const handleNodeSelect = (event: any, nodeId: React.SetStateAction<string>) => {\n    if (nodeId === selectedCategory) {\n      setSelectedCategory('')\n    } else\n      setSelectedCategory(nodeId)\n  };\n\n  const handleSearchReset = () => {\n    setIsSearch(false)\n    setSearchWindowOpen(false)\n    setContents([])\n    handleNodeSelect(null, selectedCategory)\n    setSelectedCategory('')\n    setCheckedTags([])\n  }\n\n  const dispatch = useDispatch()\n  const logoutHandler = () => {\n    handleSearchReset()\n    dispatch(logout());\n    sessionStorage.setItem(\"current_user_token\", '');\n  }\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <Search />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Malgn\n          </Typography>\n          <Typography style={{ marginLeft: \"auto\" }}>\n            <Link to=\"/\"><Button onClick={handleSearchReset} classes={{ text: classes.linkButton }}>Home</Button></Link>\n            <Link to=\"/upload\"><Button onClick={handleSearchReset} classes={{ text: classes.linkButton }}>파일 업로드</Button></Link>\n            {user ? user.userRole === \"ROLE_ADMIN\" && <>\n              <Button aria-controls=\"fade-menu\" aria-haspopup=\"true\" classes={{ text: classes.linkButton }} onClick={handleAdminMenuClick}>\n                관리자 메뉴\n              </Button>\n              <Menu\n                id=\"fade-menu\"\n                anchorEl={adminMenuAnchorEl}\n                keepMounted\n                open={adminMenuOpen}\n                onClose={handleAdminMenuClose}\n                TransitionComponent={Fade}\n              >\n                <MenuItem onClick={handleAdminMenuClose}><Link to=\"/admin/member\" onClick={handleSearchReset}>회원 관리</Link></MenuItem>\n                <MenuItem onClick={handleAdminMenuClose}><Link to=\"/admin/category\" onClick={handleSearchReset}>카테고리 관리</Link></MenuItem>\n              </Menu></> : null}\n            <Link to=\"/\"><Button onClick={logoutHandler} classes={{ text: classes.linkButton }}>로그아웃</Button></Link>\n          </Typography>\n\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <Typography align='left' variant='h5'>검색</Typography>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <ListItem key={0}>\n            <Paper component=\"form\" className={searchClasses.root}>\n              <IconButton onClick={handlerSearchButtonClick} className={searchClasses.iconButton} aria-label=\"search\">\n                <Search />\n              </IconButton>\n              <InputBase\n                className={searchClasses.input}\n                placeholder=\"검색어 입력\"\n                onKeyPress={(e) => { searchInputKeyPress(e) }}\n                onChange={(e) => { setKeyword(e.target.value) }}\n              />\n              {isSearch &&\n                <IconButton onClick={handleSearchReset} aria-label=\"search\">\n                  <Clear />\n                </IconButton>}\n            </Paper>\n          </ListItem>\n        </List>\n        <Divider />\n        <List>\n          <ListItem key={1}>\n            {categories.length > 0 ? (\n              <TreeView\n                onNodeToggle={handleToggle}\n                onNodeSelect={handleNodeSelect}\n                className={classes.root}\n                // defaultCollapseIcon={<ExpandMore />}\n                // defaultExpandIcon={<ChevronRight />}\n                expanded={categoriesHavingChild}\n              >\n                <div>\n                  {categories.map((category: TreeViews) => {\n                    return <Category key={category.categoryId} category={category} />\n                  })}\n                </div>\n              </TreeView>\n            ) :\n              (<CircularProgress />)\n            }\n          </ListItem>\n        </List>\n        <Divider />\n        <List style={{ overflow: 'auto' }}>\n          {tags && tags.length > 0 ?\n            tags.map((item, i) => {\n              return (\n                <ListItem key={item.assetTag} role={undefined} dense button onClick={handleCheck(item.assetTag)}>\n                  <ListItemIcon>\n                    <Checkbox\n                      edge=\"start\"\n                      checked={checkedTags.indexOf(item.assetTag) !== -1}\n                      tabIndex={-1}\n                      disableRipple\n                    />\n                  </ListItemIcon>\n                  <ListItemText id={item.assetTag} primary={`${item.assetTag}(${item.count})`} />\n                </ListItem>\n              )\n            }) : (<CircularProgress />)}\n        </List>\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        {!searchWindowOpen ? props.children : (\n          <SearchWindow contents={contents} setSearchWindowOpen={setSearchWindowOpen} setPageNum={setPageNum} pageNum={pageNum} pageInfo={pageInfo} />\n        )}\n      </main>\n    </div>\n  );\n}\n","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/DropForHighOrder.tsx",[],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/index.tsx",["216","217","218","219","220"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/DropForLowOrder.tsx",[],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/upload/TempDropZone.tsx",["221","222","223"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/upload/tempDropZone.tsx",["224","225"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/index.tsx",[],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/upload/TempUpload.tsx",["226","227","228","229","230","231","232","233"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/index.tsx",[],["234","235"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/modify/ModInfo.tsx",["236","237","238","239","240","241","242"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/commons/SearchWindow.tsx",["243","244","245","246","247","248","249","250","251"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/main/Posts.tsx",["252","253","254","255","256","257","258","259","260","261","262","263","264","265","266"],"import {\n  Grid,\n  Typography,\n  Card,\n  CardActions,\n  CardContent,\n  Button,\n  GridList,\n  GridListTile,\n  makeStyles,\n  GridListTileBar,\n  Paper,\n  Divider,\n  ButtonBase,\n  CircularProgress,\n\n} from '@material-ui/core'\nimport { OverridableComponent } from '@material-ui/core/OverridableComponent';\n\nimport { Pagination, PaginationItem, PaginationItemTypeMap } from '@material-ui/lab';\nimport axios from 'axios';\nimport moment from 'moment';\nimport React, { MutableRefObject, useEffect, useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { RootState } from '../../modules';\nimport api, { BASE_API_URL } from '../../util/api';\n\n\nconst useStyles = makeStyles(() => ({\n  gridList: {\n    width: 400,\n    height: 400,\n  },\n  imageCountLessEqualTwo: {\n    height: '100%!important'\n  },\n  imageCountOverTwo: {\n    height: '50%!important'\n  },\n  ul: {\n    justifyContent: 'center',\n    padding: 10,\n\n  }\n}))\n\ntype Asset = {\n  assetSeq: number,\n  assetOwner: string,\n  assetOwnerName: string,\n  assetTitle: string,\n  assetCreateDate: Date,\n  assetUpdateDate: Date,\n  locations: string,\n  assetFiles: Array<AssetFile>,\n  tags: string,\n  locationArray: Array<string>,\n  assetCategory: number,\n  assetCategoryName: string\n}\n\ntype Page = {\n  startPage: number,\n  endPage: number,\n  prev: false,\n  next: false,\n  total: number\n}\n\ntype AssetFile = {\n  assetLocation: string,\n  assetOriginName: string,\n  assetSeq: number,\n  assetSize: number,\n  assetType: string,\n}\n\ntype MatchParams = {\n  pageNum: string\n}\n\n\n\nconst Posts = (props: MatchParams) => {\n\n  const [contents, setContents] = useState<Array<Asset>>([]);\n  const [pageNum, setPageNum] = useState<number>(1);\n  const [pageInfo, setPageInfo] = useState<Page>();\n  const history = useHistory();\n  const user = useSelector((state:RootState)=>state.member)\n  api.defaults.headers.common['Authorization'] = 'Bearer ' + user.token;\n  const toAssetDetail = (assetSeq: number) => {\n    history.push('/detail/' + assetSeq)\n  }\n\n\n  const classes = useStyles();\n  async function loadContents() {\n    const response = await api.get(`/list/${pageNum}`)\n    const list: Array<Asset> = response.data.result\n    setPageInfo(response.data.reference)\n    setContents(list)\n  };\n  useEffect(() => {\n    loadContents();\n  }, [pageNum]);\n\n  return (\n    <div style={{\n      // marginTop: 20, \n      padding: 30\n    }}>\n      <Grid container spacing={3} justify=\"center\">\n        {contents ? contents.map(post => (\n          <Grid item key={post.assetSeq}>\n            <Card>\n              <GridList className={classes.gridList}>\n                {\n                  post.assetFiles.map((assetFile, i) => {\n                    let type = assetFile.assetType\n                    let location = assetFile.assetLocation\n                    let imgUrl=BASE_API_URL.substring(0,BASE_API_URL.lastIndexOf('/api'));\n                    if (!type) {\n                      imgUrl += '/images/unsupportedFile.png'\n                    } else if (type.includes('image')) {\n                      imgUrl += `/uploadedImages/thumb${location.substring(location.lastIndexOf(\"/uploadedImages\") + 15)}`\n                    } else if (type.includes('video')) {\n                      imgUrl += '/images/videoFile.png'\n                    } else if (type.includes('audio')) {\n                      imgUrl += '/images/audioFile.png'\n                    } else {\n                      imgUrl += '/images/unsupportedFile.png'\n                    }\n                    return (\n                      (post.locationArray.length < 3) ?\n                        <GridListTile key={i} cols={(post.locationArray.length % 2 != 0 && i == 0) ? 2 : 1} classes={{ root: classes.imageCountLessEqualTwo }}>\n                          <img src={imgUrl} alt=\"\" />\n\n                        </GridListTile>\n                        :\n                        i <= 3 ?\n                          <GridListTile key={i} cols={(post.locationArray.length % 2 != 0 && i == 0 && post.locationArray.length <= 3) ? 2 : 1} classes={{ root: classes.imageCountOverTwo }}>\n                            <img src={imgUrl} alt=\"\" />\n                            {(post.locationArray.length > 4 && i == 3) ?\n                              <Link to={\"/detail/\" + assetFile.assetSeq} >\n                                <GridListTileBar title={post.locationArray.length - (i + 1) + '개 더보기'} classes={{ root: classes.imageCountLessEqualTwo }} />\n                              </Link>\n\n                              : null}\n                          </GridListTile> :\n                          null\n                    )\n                  })\n                }\n              </GridList>\n\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  {post.assetTitle}\n                </Typography>\n\n                <Typography align='right' component=\"p\" style={{ color: 'grey' }}>{moment(post.assetCreateDate).format('YYYY-MM-DD HH:mm:ss')}</Typography>\n                <Typography align='left' component=\"p\">카테고리 : {post.assetCategoryName}</Typography>\n                <Typography align='left' component=\"p\">작성자 : {post.assetOwnerName}</Typography>\n                <Typography align='left' component=\"p\">태그 : {post.tags}</Typography>\n              </CardContent>\n              <CardActions>\n                <Button size=\"small\" color=\"primary\" onClick={() => { toAssetDetail(post.assetSeq) }}>\n                  상세보기\n                </Button>\n              </CardActions>\n            </Card>\n          </Grid>\n        ))\n          : (<CircularProgress />)}\n      </Grid>\n      <Grid>\n        {pageInfo && <Pagination classes={{ ul: classes.ul }}\n          hideNextButton={!pageInfo.next}\n          hidePrevButton={!pageInfo.prev}\n          count={pageInfo.endPage}\n          page={pageNum}\n          onChange={(e: React.ChangeEvent<unknown>, value: number) => { setPageNum(value) }}\n          shape=\"rounded\" />}\n      </Grid>\n    </div>\n  )\n}\n\nexport default Posts;","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/main/index.tsx",["267"],"import Posts from \"./Posts\"\nimport Sidebar from \"../commons/Sidebar\"\nimport { RouteComponentProps } from \"react-router-dom\"\n\ntype MatchParams = {\n    pageNum: string\n}\n\nconst Main = ({ match }: RouteComponentProps<MatchParams>) => {\n    const {pageNum} = match.params\n    return (\n        <div>\n                <Posts pageNum={pageNum}/>\n        </div>\n    )\n}\n\nexport default Main;","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/detail/index.tsx",[],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/MemberManager/index.tsx",[],{"ruleId":"268","severity":1,"message":"269","line":5,"column":7,"nodeType":"270","messageId":"271","endLine":5,"endColumn":16},{"ruleId":"272","replacedBy":"273"},{"ruleId":"274","replacedBy":"275"},{"ruleId":"268","severity":1,"message":"276","line":35,"column":38,"nodeType":"270","messageId":"271","endLine":35,"endColumn":44},{"ruleId":"268","severity":1,"message":"277","line":35,"column":46,"nodeType":"270","messageId":"271","endLine":35,"endColumn":57},{"ruleId":"278","severity":1,"message":"279","line":181,"column":8,"nodeType":"280","endLine":181,"endColumn":10,"suggestions":"281"},{"ruleId":"282","severity":1,"message":"283","line":206,"column":47,"nodeType":"284","messageId":"285","endLine":206,"endColumn":49},{"ruleId":"282","severity":1,"message":"283","line":232,"column":47,"nodeType":"284","messageId":"285","endLine":232,"endColumn":49},{"ruleId":"268","severity":1,"message":"286","line":11,"column":18,"nodeType":"270","messageId":"271","endLine":11,"endColumn":40},{"ruleId":"268","severity":1,"message":"287","line":20,"column":9,"nodeType":"270","messageId":"271","endLine":20,"endColumn":17},{"ruleId":"272","replacedBy":"288"},{"ruleId":"274","replacedBy":"289"},{"ruleId":"272","replacedBy":"290"},{"ruleId":"274","replacedBy":"291"},{"ruleId":"268","severity":1,"message":"292","line":34,"column":30,"nodeType":"270","messageId":"271","endLine":34,"endColumn":47},{"ruleId":"268","severity":1,"message":"293","line":36,"column":8,"nodeType":"270","messageId":"271","endLine":36,"endColumn":20},{"ruleId":"268","severity":1,"message":"294","line":38,"column":10,"nodeType":"270","messageId":"271","endLine":38,"endColumn":41},{"ruleId":"268","severity":1,"message":"295","line":200,"column":12,"nodeType":"270","messageId":"271","endLine":200,"endColumn":22},{"ruleId":"282","severity":1,"message":"283","line":231,"column":47,"nodeType":"284","messageId":"285","endLine":231,"endColumn":49},{"ruleId":"268","severity":1,"message":"296","line":291,"column":23,"nodeType":"270","messageId":"271","endLine":291,"endColumn":31},{"ruleId":"278","severity":1,"message":"297","line":353,"column":8,"nodeType":"280","endLine":353,"endColumn":18,"suggestions":"298"},{"ruleId":"299","severity":1,"message":"300","line":388,"column":25,"nodeType":"284","messageId":"301","endLine":391,"endColumn":14},{"ruleId":"302","severity":1,"message":"303","line":416,"column":41,"nodeType":"304","messageId":"305","endLine":416,"endColumn":43},{"ruleId":"268","severity":1,"message":"306","line":12,"column":7,"nodeType":"270","messageId":"271","endLine":12,"endColumn":17},{"ruleId":"268","severity":1,"message":"307","line":109,"column":7,"nodeType":"270","messageId":"271","endLine":109,"endColumn":23},{"ruleId":"268","severity":1,"message":"308","line":25,"column":10,"nodeType":"270","messageId":"271","endLine":25,"endColumn":20},{"ruleId":"268","severity":1,"message":"309","line":25,"column":46,"nodeType":"270","messageId":"271","endLine":25,"endColumn":53},{"ruleId":"268","severity":1,"message":"310","line":33,"column":10,"nodeType":"270","messageId":"271","endLine":33,"endColumn":18},{"ruleId":"268","severity":1,"message":"311","line":84,"column":10,"nodeType":"270","messageId":"271","endLine":84,"endColumn":18},{"ruleId":"278","severity":1,"message":"312","line":123,"column":8,"nodeType":"280","endLine":123,"endColumn":18,"suggestions":"313"},{"ruleId":"302","severity":1,"message":"303","line":128,"column":36,"nodeType":"304","messageId":"305","endLine":128,"endColumn":38},{"ruleId":"302","severity":1,"message":"314","line":129,"column":44,"nodeType":"304","messageId":"305","endLine":129,"endColumn":46},{"ruleId":"268","severity":1,"message":"315","line":208,"column":11,"nodeType":"270","messageId":"271","endLine":208,"endColumn":35},{"ruleId":"268","severity":1,"message":"316","line":19,"column":8,"nodeType":"270","messageId":"271","endLine":19,"endColumn":13},{"ruleId":"268","severity":1,"message":"317","line":25,"column":6,"nodeType":"270","messageId":"271","endLine":25,"endColumn":17},{"ruleId":"318","severity":1,"message":"319","line":51,"column":42,"nodeType":"320","messageId":"321","endLine":51,"endColumn":43,"suggestions":"322"},{"ruleId":"318","severity":1,"message":"319","line":51,"column":75,"nodeType":"320","messageId":"321","endLine":51,"endColumn":76,"suggestions":"323"},{"ruleId":"318","severity":1,"message":"319","line":53,"column":44,"nodeType":"320","messageId":"321","endLine":53,"endColumn":45,"suggestions":"324"},{"ruleId":"318","severity":1,"message":"325","line":53,"column":46,"nodeType":"320","messageId":"321","endLine":53,"endColumn":47,"suggestions":"326"},{"ruleId":"278","severity":1,"message":"327","line":373,"column":7,"nodeType":"280","endLine":373,"endColumn":17,"suggestions":"328"},{"ruleId":"278","severity":1,"message":"327","line":376,"column":8,"nodeType":"280","endLine":376,"endColumn":17,"suggestions":"329"},{"ruleId":"268","severity":1,"message":"276","line":35,"column":38,"nodeType":"270","messageId":"271","endLine":35,"endColumn":44},{"ruleId":"268","severity":1,"message":"277","line":35,"column":46,"nodeType":"270","messageId":"271","endLine":35,"endColumn":57},{"ruleId":"268","severity":1,"message":"330","line":37,"column":10,"nodeType":"270","messageId":"271","endLine":37,"endColumn":22},{"ruleId":"268","severity":1,"message":"331","line":37,"column":24,"nodeType":"270","messageId":"271","endLine":37,"endColumn":34},{"ruleId":"268","severity":1,"message":"286","line":37,"column":64,"nodeType":"270","messageId":"271","endLine":37,"endColumn":86},{"ruleId":"278","severity":1,"message":"279","line":219,"column":8,"nodeType":"280","endLine":219,"endColumn":10,"suggestions":"332"},{"ruleId":"282","severity":1,"message":"283","line":225,"column":47,"nodeType":"284","messageId":"285","endLine":225,"endColumn":49},{"ruleId":"282","severity":1,"message":"283","line":251,"column":47,"nodeType":"284","messageId":"285","endLine":251,"endColumn":49},{"ruleId":"268","severity":1,"message":"316","line":19,"column":8,"nodeType":"270","messageId":"271","endLine":19,"endColumn":13},{"ruleId":"268","severity":1,"message":"317","line":25,"column":6,"nodeType":"270","messageId":"271","endLine":25,"endColumn":17},{"ruleId":"318","severity":1,"message":"319","line":51,"column":42,"nodeType":"320","messageId":"321","endLine":51,"endColumn":43,"suggestions":"333"},{"ruleId":"318","severity":1,"message":"319","line":51,"column":75,"nodeType":"320","messageId":"321","endLine":51,"endColumn":76,"suggestions":"334"},{"ruleId":"318","severity":1,"message":"319","line":53,"column":44,"nodeType":"320","messageId":"321","endLine":53,"endColumn":45,"suggestions":"335"},{"ruleId":"318","severity":1,"message":"325","line":53,"column":46,"nodeType":"320","messageId":"321","endLine":53,"endColumn":47,"suggestions":"336"},{"ruleId":"278","severity":1,"message":"327","line":373,"column":7,"nodeType":"280","endLine":373,"endColumn":17,"suggestions":"337"},{"ruleId":"278","severity":1,"message":"327","line":376,"column":8,"nodeType":"280","endLine":376,"endColumn":17,"suggestions":"338"},{"ruleId":"268","severity":1,"message":"339","line":2,"column":23,"nodeType":"270","messageId":"271","endLine":2,"endColumn":34},{"ruleId":"268","severity":1,"message":"316","line":3,"column":8,"nodeType":"270","messageId":"271","endLine":3,"endColumn":13},{"ruleId":"268","severity":1,"message":"340","line":5,"column":8,"nodeType":"270","messageId":"271","endLine":5,"endColumn":14},{"ruleId":"268","severity":1,"message":"341","line":6,"column":10,"nodeType":"270","messageId":"271","endLine":6,"endColumn":19},{"ruleId":"268","severity":1,"message":"342","line":8,"column":10,"nodeType":"270","messageId":"271","endLine":8,"endColumn":16},{"ruleId":"268","severity":1,"message":"343","line":129,"column":7,"nodeType":"270","messageId":"271","endLine":129,"endColumn":21},{"ruleId":"268","severity":1,"message":"344","line":181,"column":10,"nodeType":"270","messageId":"271","endLine":181,"endColumn":13},{"ruleId":"268","severity":1,"message":"345","line":181,"column":15,"nodeType":"270","messageId":"271","endLine":181,"endColumn":21},{"ruleId":"278","severity":1,"message":"346","line":213,"column":6,"nodeType":"280","endLine":213,"endColumn":15,"suggestions":"347"},{"ruleId":"282","severity":1,"message":"283","line":230,"column":41,"nodeType":"284","messageId":"285","endLine":230,"endColumn":43},{"ruleId":"268","severity":1,"message":"348","line":1,"column":28,"nodeType":"270","messageId":"271","endLine":1,"endColumn":36},{"ruleId":"268","severity":1,"message":"349","line":3,"column":19,"nodeType":"270","messageId":"271","endLine":3,"endColumn":27},{"ruleId":"268","severity":1,"message":"350","line":8,"column":8,"nodeType":"270","messageId":"271","endLine":8,"endColumn":14},{"ruleId":"268","severity":1,"message":"351","line":12,"column":8,"nodeType":"270","messageId":"271","endLine":12,"endColumn":14},{"ruleId":"278","severity":1,"message":"352","line":32,"column":21,"nodeType":"353","endLine":32,"endColumn":65},{"ruleId":"268","severity":1,"message":"306","line":12,"column":7,"nodeType":"270","messageId":"271","endLine":12,"endColumn":17},{"ruleId":"268","severity":1,"message":"307","line":109,"column":7,"nodeType":"270","messageId":"271","endLine":109,"endColumn":23},{"ruleId":"268","severity":1,"message":"354","line":131,"column":11,"nodeType":"270","messageId":"271","endLine":131,"endColumn":27},{"ruleId":"268","severity":1,"message":"306","line":12,"column":7,"nodeType":"270","messageId":"271","endLine":12,"endColumn":17},{"ruleId":"268","severity":1,"message":"307","line":109,"column":7,"nodeType":"270","messageId":"271","endLine":109,"endColumn":23},{"ruleId":"268","severity":1,"message":"292","line":34,"column":30,"nodeType":"270","messageId":"271","endLine":34,"endColumn":47},{"ruleId":"268","severity":1,"message":"294","line":38,"column":10,"nodeType":"270","messageId":"271","endLine":38,"endColumn":41},{"ruleId":"268","severity":1,"message":"295","line":199,"column":12,"nodeType":"270","messageId":"271","endLine":199,"endColumn":22},{"ruleId":"282","severity":1,"message":"283","line":229,"column":47,"nodeType":"284","messageId":"285","endLine":229,"endColumn":49},{"ruleId":"268","severity":1,"message":"296","line":289,"column":23,"nodeType":"270","messageId":"271","endLine":289,"endColumn":31},{"ruleId":"278","severity":1,"message":"297","line":341,"column":8,"nodeType":"280","endLine":341,"endColumn":18,"suggestions":"355"},{"ruleId":"299","severity":1,"message":"300","line":376,"column":25,"nodeType":"284","messageId":"301","endLine":379,"endColumn":14},{"ruleId":"302","severity":1,"message":"303","line":404,"column":41,"nodeType":"304","messageId":"305","endLine":404,"endColumn":43},{"ruleId":"272","replacedBy":"356"},{"ruleId":"274","replacedBy":"357"},{"ruleId":"268","severity":1,"message":"316","line":2,"column":8,"nodeType":"270","messageId":"271","endLine":2,"endColumn":13},{"ruleId":"268","severity":1,"message":"331","line":6,"column":10,"nodeType":"270","messageId":"271","endLine":6,"endColumn":20},{"ruleId":"268","severity":1,"message":"330","line":6,"column":22,"nodeType":"270","messageId":"271","endLine":6,"endColumn":34},{"ruleId":"268","severity":1,"message":"309","line":6,"column":36,"nodeType":"270","messageId":"271","endLine":6,"endColumn":43},{"ruleId":"268","severity":1,"message":"358","line":7,"column":36,"nodeType":"270","messageId":"271","endLine":7,"endColumn":42},{"ruleId":"282","severity":1,"message":"283","line":179,"column":47,"nodeType":"284","messageId":"285","endLine":179,"endColumn":49},{"ruleId":"268","severity":1,"message":"359","line":244,"column":11,"nodeType":"270","messageId":"271","endLine":244,"endColumn":26},{"ruleId":"268","severity":1,"message":"360","line":15,"column":22,"nodeType":"270","messageId":"271","endLine":15,"endColumn":36},{"ruleId":"268","severity":1,"message":"316","line":16,"column":8,"nodeType":"270","messageId":"271","endLine":16,"endColumn":13},{"ruleId":"268","severity":1,"message":"361","line":20,"column":10,"nodeType":"270","messageId":"271","endLine":20,"endColumn":14},{"ruleId":"268","severity":1,"message":"362","line":55,"column":6,"nodeType":"270","messageId":"271","endLine":55,"endColumn":10},{"ruleId":"302","severity":1,"message":"314","line":125,"column":108,"nodeType":"304","messageId":"305","endLine":125,"endColumn":110},{"ruleId":"302","severity":1,"message":"303","line":125,"column":118,"nodeType":"304","messageId":"305","endLine":125,"endColumn":120},{"ruleId":"302","severity":1,"message":"314","line":131,"column":112,"nodeType":"304","messageId":"305","endLine":131,"endColumn":114},{"ruleId":"302","severity":1,"message":"303","line":131,"column":122,"nodeType":"304","messageId":"305","endLine":131,"endColumn":124},{"ruleId":"302","severity":1,"message":"303","line":133,"column":94,"nodeType":"304","messageId":"305","endLine":133,"endColumn":96},{"ruleId":"268","severity":1,"message":"363","line":12,"column":3,"nodeType":"270","messageId":"271","endLine":12,"endColumn":8},{"ruleId":"268","severity":1,"message":"364","line":13,"column":3,"nodeType":"270","messageId":"271","endLine":13,"endColumn":10},{"ruleId":"268","severity":1,"message":"365","line":14,"column":3,"nodeType":"270","messageId":"271","endLine":14,"endColumn":13},{"ruleId":"268","severity":1,"message":"366","line":18,"column":10,"nodeType":"270","messageId":"271","endLine":18,"endColumn":30},{"ruleId":"268","severity":1,"message":"360","line":20,"column":22,"nodeType":"270","messageId":"271","endLine":20,"endColumn":36},{"ruleId":"268","severity":1,"message":"367","line":20,"column":38,"nodeType":"270","messageId":"271","endLine":20,"endColumn":59},{"ruleId":"268","severity":1,"message":"316","line":21,"column":8,"nodeType":"270","messageId":"271","endLine":21,"endColumn":13},{"ruleId":"268","severity":1,"message":"368","line":23,"column":17,"nodeType":"270","messageId":"271","endLine":23,"endColumn":33},{"ruleId":"268","severity":1,"message":"276","line":23,"column":46,"nodeType":"270","messageId":"271","endLine":23,"endColumn":52},{"ruleId":"278","severity":1,"message":"369","line":108,"column":6,"nodeType":"280","endLine":108,"endColumn":15,"suggestions":"370"},{"ruleId":"302","severity":1,"message":"314","line":138,"column":84,"nodeType":"304","messageId":"305","endLine":138,"endColumn":86},{"ruleId":"302","severity":1,"message":"303","line":138,"column":94,"nodeType":"304","messageId":"305","endLine":138,"endColumn":96},{"ruleId":"302","severity":1,"message":"314","line":144,"column":86,"nodeType":"304","messageId":"305","endLine":144,"endColumn":88},{"ruleId":"302","severity":1,"message":"303","line":144,"column":96,"nodeType":"304","messageId":"305","endLine":144,"endColumn":98},{"ruleId":"302","severity":1,"message":"303","line":146,"column":66,"nodeType":"304","messageId":"305","endLine":146,"endColumn":68},{"ruleId":"268","severity":1,"message":"371","line":2,"column":8,"nodeType":"270","messageId":"271","endLine":2,"endColumn":15},"@typescript-eslint/no-unused-vars","'CANCELADD' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["372"],"no-negated-in-lhs",["373"],"'useRef' is defined but never used.","'useCallback' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadCategories'. Either include it or remove the dependency array.","ArrayExpression",["374"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'SubdirectoryArrowRight' is defined but never used.","'devTools' is assigned a value but never used.",["372"],["373"],["372"],["373"],"'FormatBoldTwoTone' is defined but never used.","'TempDropZone' is defined but never used.","'SSL_OP_SSLEAY_080_CLIENT_DH_BUG' is defined but never used.","'progresses' is assigned a value but never used.","'response' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'uploadStart'. Either include it or remove the dependency array.",["375"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'pause'.","unsafeRefs","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'PContainer' is assigned a value but never used.","'SpanFileErrorMsg' is assigned a value but never used.","'StarBorder' is defined but never used.","'Comment' is defined but never used.","'promises' is defined but never used.","'parseJwt' is defined but never used.","React Hook useEffect has a missing dependency: 'findParent'. Either include it or remove the dependency array.",["376"],"Expected '!==' and instead saw '!='.","'handleMultiDownloadAsZip' is assigned a value but never used.","'axios' is defined but never used.","'MatchParams' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["377","378"],["379","380"],["381","382"],"Unnecessary escape character: \\-.",["383","384"],"React Hook useEffect has a missing dependency: 'loadMembers'. Either include it or remove the dependency array.",["385"],["386"],"'ChevronRight' is defined but never used.","'ExpandMore' is defined but never used.",["387"],["388","389"],["390","391"],["392","393"],["394","395"],["396"],["397"],"'useSelector' is defined but never used.","'member' is defined but never used.","'RootState' is defined but never used.","'Switch' is defined but never used.","'SpanLoginFocus' is assigned a value but never used.","'crt' is assigned a value but never used.","'setCrt' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'search'. Either include it or remove the dependency array.",["398"],"'useState' is defined but never used.","'Provider' is defined but never used.","'Header' is defined but never used.","'Drawer' is defined but never used.","Assignments to the 'token' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'fileList' is assigned a value but never used.",["399"],["372"],["373"],"'colors' is defined but never used.","'handleAlertOpen' is assigned a value but never used.","'PaginationItem' is defined but never used.","'Link' is defined but never used.","'Page' is defined but never used.","'Paper' is defined but never used.","'Divider' is defined but never used.","'ButtonBase' is defined but never used.","'OverridableComponent' is defined but never used.","'PaginationItemTypeMap' is defined but never used.","'MutableRefObject' is defined but never used.","React Hook useEffect has a missing dependency: 'loadContents'. Either include it or remove the dependency array.",["400"],"'Sidebar' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"401","fix":"402"},{"desc":"403","fix":"404"},{"desc":"405","fix":"406"},{"messageId":"407","fix":"408","desc":"409"},{"messageId":"410","fix":"411","desc":"412"},{"messageId":"407","fix":"413","desc":"409"},{"messageId":"410","fix":"414","desc":"412"},{"messageId":"407","fix":"415","desc":"409"},{"messageId":"410","fix":"416","desc":"412"},{"messageId":"407","fix":"417","desc":"409"},{"messageId":"410","fix":"418","desc":"412"},{"desc":"419","fix":"420"},{"desc":"421","fix":"422"},{"desc":"401","fix":"423"},{"messageId":"407","fix":"424","desc":"409"},{"messageId":"410","fix":"425","desc":"412"},{"messageId":"407","fix":"426","desc":"409"},{"messageId":"410","fix":"427","desc":"412"},{"messageId":"407","fix":"428","desc":"409"},{"messageId":"410","fix":"429","desc":"412"},{"messageId":"407","fix":"430","desc":"409"},{"messageId":"410","fix":"431","desc":"412"},{"desc":"419","fix":"432"},{"desc":"421","fix":"433"},{"desc":"434","fix":"435"},{"desc":"403","fix":"436"},{"desc":"437","fix":"438"},"Update the dependencies array to be: [loadCategories]",{"range":"439","text":"440"},"Update the dependencies array to be: [assetSeq, uploadStart]",{"range":"441","text":"442"},"Update the dependencies array to be: [assetSeq, findParent]",{"range":"443","text":"444"},"removeEscape",{"range":"445","text":"446"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"447","text":"448"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"449","text":"446"},{"range":"450","text":"448"},{"range":"451","text":"446"},{"range":"452","text":"448"},{"range":"453","text":"446"},{"range":"454","text":"448"},"Update the dependencies array to be: [isSearch, loadMembers]",{"range":"455","text":"456"},"Update the dependencies array to be: [loadMembers, pageNum]",{"range":"457","text":"458"},{"range":"459","text":"440"},{"range":"460","text":"446"},{"range":"461","text":"448"},{"range":"462","text":"446"},{"range":"463","text":"448"},{"range":"464","text":"446"},{"range":"465","text":"448"},{"range":"466","text":"446"},{"range":"467","text":"448"},{"range":"468","text":"456"},{"range":"469","text":"458"},"Update the dependencies array to be: [pageNum, search]",{"range":"470","text":"471"},{"range":"472","text":"442"},"Update the dependencies array to be: [loadContents, pageNum]",{"range":"473","text":"474"},[3757,3759],"[loadCategories]",[9065,9075],"[assetSeq, uploadStart]",[3376,3386],"[assetSeq, findParent]",[1376,1377],"",[1376,1376],"\\",[1409,1410],[1409,1409],[1534,1535],[1534,1534],[1536,1537],[1536,1536],[12886,12896],"[isSearch, loadMembers]",[12950,12959],"[loadMembers, pageNum]",[4887,4889],[1376,1377],[1376,1376],[1409,1410],[1409,1409],[1534,1535],[1534,1534],[1536,1537],[1536,1536],[12886,12896],[12950,12959],[6013,6022],"[pageNum, search]",[8693,8703],[2366,2375],"[loadContents, pageNum]"]