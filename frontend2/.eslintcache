[{"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/modules/arrayCategories.ts":"1","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/categories.tsx":"2","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/CategoryNode.tsx":"3","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/App.tsx":"4","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/modules/member.ts":"5","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/dropForHighOrder.tsx":"6","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/dropForLowOrder.tsx":"7","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/reportWebVitals.ts":"8","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/modules/dragNode.ts":"9","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/upload/Upload.tsx":"10","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/modify/index.tsx":"11","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/util/api.ts":"12","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/upload/DropZone.tsx":"13","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/detail/Info.tsx":"14","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/MemberManager/members.tsx":"15","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/Categories.tsx":"16","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/MemberManager/Members.tsx":"17","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/login/Login.tsx":"18","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/modules/fileList.ts":"19","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/commons/SideHeader.tsx":"20","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/DropForHighOrder.tsx":"21","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/index.tsx":"22","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/DropForLowOrder.tsx":"23","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/index.tsx":"24","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/index.tsx":"25","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/modify/ModInfo.tsx":"26","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/commons/SearchWindow.tsx":"27","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/main/Posts.tsx":"28","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/main/index.tsx":"29","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/detail/index.tsx":"30","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/MemberManager/index.tsx":"31","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/MemberManager/MembersTable.tsx":"32"},{"size":1551,"mtime":1614751601613,"results":"33","hashOfConfig":"34"},{"size":16653,"mtime":1614760833486,"results":"35","hashOfConfig":"34"},{"size":12219,"mtime":1614833469795,"results":"36","hashOfConfig":"34"},{"size":898,"mtime":1614921847600,"results":"37","hashOfConfig":"34"},{"size":904,"mtime":1614238847852,"results":"38","hashOfConfig":"34"},{"size":2749,"mtime":1614760846682,"results":"39","hashOfConfig":"34"},{"size":2748,"mtime":1614760849253,"results":"40","hashOfConfig":"34"},{"size":425,"mtime":1612155094723,"results":"41","hashOfConfig":"34"},{"size":604,"mtime":1614738344089,"results":"42","hashOfConfig":"34"},{"size":23541,"mtime":1615279173655,"results":"43","hashOfConfig":"34"},{"size":388,"mtime":1613454456600,"results":"44","hashOfConfig":"34"},{"size":857,"mtime":1614248223279,"results":"45","hashOfConfig":"34"},{"size":6666,"mtime":1615273039174,"results":"46","hashOfConfig":"34"},{"size":16884,"mtime":1615365611905,"results":"47","hashOfConfig":"34"},{"size":32026,"mtime":1614760854155,"results":"48","hashOfConfig":"34"},{"size":16349,"mtime":1614833438721,"results":"49","hashOfConfig":"34"},{"size":29851,"mtime":1615538670304,"results":"50","hashOfConfig":"34"},{"size":6141,"mtime":1614247180295,"results":"51","hashOfConfig":"34"},{"size":1424,"mtime":1614911864415,"results":"52","hashOfConfig":"34"},{"size":3634,"mtime":1615525022004,"results":"53","hashOfConfig":"34"},{"size":2806,"mtime":1614824175253,"results":"54","hashOfConfig":"34"},{"size":2240,"mtime":1615363106232,"results":"55","hashOfConfig":"34"},{"size":2805,"mtime":1614824132431,"results":"56","hashOfConfig":"34"},{"size":500,"mtime":1612155094723,"results":"57","hashOfConfig":"34"},{"size":171,"mtime":1614760941592,"results":"58","hashOfConfig":"34"},{"size":15892,"mtime":1614241713096,"results":"59","hashOfConfig":"34"},{"size":6819,"mtime":1613534235297,"results":"60","hashOfConfig":"34"},{"size":23615,"mtime":1615528713279,"results":"61","hashOfConfig":"34"},{"size":382,"mtime":1613438388671,"results":"62","hashOfConfig":"34"},{"size":345,"mtime":1613432960743,"results":"63","hashOfConfig":"34"},{"size":158,"mtime":1614761045214,"results":"64","hashOfConfig":"34"},{"size":6071,"mtime":1615535978642,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},"b90rkt",{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"107"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/modules/arrayCategories.ts",["144"],"const SET = 'arrayCategories/SET' as const;\nconst RESET = 'arrayCategories/RESET' as const;\nconst MODIFY = 'arrayCategories/MODIFY' as const;\nconst ADD = 'arrayCategories/ADD' as const;\nconst CANCELADD = 'arrayCategories/CANCELADD' as const;\n\nexport const setArrayCategories = (array:CategoryInfo[])=>({type:SET, array})\nexport const resetArrayCategories = ()=>({type:RESET})\nexport const modifyCategory = ((node:number)=>({type:MODIFY, node}))\nexport const addCategory = ((node:CategoryInfo)=>({type:ADD,node}))\n\ntype ArrayCategoriesAction = \n    | ReturnType<typeof setArrayCategories>\n    | ReturnType<typeof resetArrayCategories>\n    | ReturnType<typeof modifyCategory>\n    | ReturnType<typeof addCategory>\n\ninterface CategoryInfo {\n    categoryId: number,\n    categoryName: string,\n    categoryOrder: number,\n    categoryParent: number,\n    possessions?: number,\n    newNode?: boolean,\n    modifying?: boolean,\n}\n\n\nconst initialState:CategoryInfo[]=[]\n\nfunction arrayCategories(\n    state=initialState,\n    action:ArrayCategoriesAction\n):CategoryInfo[]{\n    switch (action.type) {\n        case SET:\n            return action.array;\n        case RESET:\n            return initialState;\n        case MODIFY:\n            let tempMod = [...state];\n            tempMod[action.node].modifying = true;\n            return tempMod;\n        case ADD:\n            let tempAdd = [...state];\n            tempAdd=[...tempAdd,action.node];\n            return tempAdd;\n       \n        default:\n            return state;\n    }   \n}\n\nexport default arrayCategories",["145","146"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/categories.tsx",["147","148","149","150","151"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/CategoryNode.tsx",["152"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/App.tsx",[],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/modules/member.ts",[],["153","154"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/dropForHighOrder.tsx",[],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/dropForLowOrder.tsx",[],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/reportWebVitals.ts",[],["155","156"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/modules/dragNode.ts",[],["157","158"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/upload/Upload.tsx",["159","160","161","162","163","164","165"],"import React,\n{\n    useState,\n    FormEvent,\n    useEffect,\n} from 'react';\nimport styled from '@emotion/styled';\nimport { useHistory } from 'react-router';\nimport arrayToTree from 'array-to-tree';\nimport {\n    Box,\n    Button,\n    CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    fade,\n    LinearProgress,\n    List,\n    ListItem,\n    ListItemText,\n    makeStyles,\n    Typography\n}\n    from '@material-ui/core';\nimport { TreeItem, TreeView } from '@material-ui/lab';\nimport {\n    useSelector\n} from 'react-redux';\nimport { RootState } from '../../modules';\nimport api from '../../util/api';\nimport { Folder, FolderOpen, FormatBoldTwoTone, Remove } from '@material-ui/icons';\n// import TempDropZone from './TempDropZone';\nimport { UploadFileInfo } from '../../util/types';\nimport DropZone from './DropZone';\n//style \n\nlet DivWrapper = styled.div`\nwidth:100%;\nmargin: 0 auto;\npadding: 0px;\njustify-content: center;\nalign-items: center;\nbox-sizing: border-box;\n`;\n\nlet DivContainer = styled.div`\nwidth: 100%;\nmin-height: 100vh;\ndisplay:block;\n//flex-wrap: wrap;\nmargin-right: auto;\nmargin-left: auto;\npadding-left: 15px;\npadding-right: 15px;\npadding-top: 15px;\n// justify-content: center;\n// align-items: center;\n// padding: 15px;\nbackground: #ebeeef;\n`;\n\nlet DivTitleContainer = styled.div`\n// width:100%;\ndisplay:flex;\nmargin-bottom: 20px;\nborder-bottom: 1px solid #eaeaea;\n`;\n\nlet DivBox = styled.div`\nmax-width: 80%;\n// min-width: 670px;\nmargin: auto;\nbackground: #fff;\n// padding:10px;\n// overflow: hidden;\nposition: relative;\npadding: 20px;\nborder-radius: 3px;\nbox-shadow: rgba(0, 0, 0, 0.1) 0px 1px 2px;\n`;\n\nconst DivInputGroup = styled.div`\nwidth: 100%;\nposition: relative;\nborder-bottom: 1px solid #b2b2b2;\nmargin-bottom: 26px;\n`;\n\nconst DivTagGroup = styled.div`\nwidth:100%;\nposition:relative;\nmargin-bottom:26px;\ndisplay:block;\n`;\n\nconst SpanInputLabel = styled.span`\nfont-family: Poppins-Regular;\nfont-size: 15px;\ncolor: #808080;\nline-height: 1.2;\ntext-align: right;\nposition: absolute;\ntop: 14px;\nleft: -105px;\nwidth: 80px;\n`;\nconst InputText = styled.input`\nfont-family: Poppins-Regular;\nfont-size: 15px;\ncolor: #555555;\nline-height: 1.2;\nheight: 45px;\ndisplay: block;\nwidth: 100%;\nbackground: transparent;\npadding: 0 5px;\noutline:none;\nborder:none;\n`;\nconst FormLogin = styled.form`\nwidth: 100%;\ndisplay: flex;\nflex-wrap: wrap;\njustify-content: space-between;\npadding: 43px 88px 93px 150px;\n`;\n\nconst SpanTag = styled.span`\ndisplay:inline-block;\nbackground:#4abdff;\nmargin-right:5px;\nmargin-top:2px;\nmargin-bottom:2px;\npadding:5px 7px 5px 7px;\nborder-radius:4px;\ncolor:#fff;\n`;\n\nconst SpanTimes = styled.span`\nmargin: 3px;\nmargin-left 5px;\nfont-weight: bolder;\ncolor:#fff;\n&:hover{\n    cursor:pointer;\n    color:#cccccc;\n}\n&:active{\n    color:#7a7a7a;\n}\n`;\n\n//style end\n/**\n * * types & interfaces \n */\ninterface TreeViews {\n    children?: TreeViews[];\n    categoryName: string;\n    categoryId: string;\n}\ninterface CategoryProps {\n    category: TreeViews\n}\n\nconst Upload = () => {\n    /**\n     * ? store\n     */\n    const history = useHistory()\n    const user = useSelector((state: RootState) => state.member)\n    // const fileList = useSelector((state:RootState)=>state.fileList)\n    /**\n     * ? api\n     */\n    api.defaults.headers.common['Authorization'] = 'Bearer ' + user.token;\n\n    /**\n     * ? state\n     */\n    const [fileList, setFileList] = useState<Array<UploadFileInfo>>([]);\n\n    const [title, setTitle] = useState<string>();\n    const [currentInputTag, setCurrentInputTag] = useState<string>('');\n    const [tags, setTags] = useState<Array<string>>([]);\n    const [selectedCategory, setSelectedCategory] = useState<string>();\n    const [assetSeq, setAssetSeq] = useState<number>();\n    const [isPaused, setIsPaused] = useState<boolean>(false);\n\n    const [categories, setCategories] = useState([]);\n    const [expendedCategory, setExpendedCategory] = useState<Array<string>>();\n    const [isTagDuplicated, setIsTagDuplicated] = useState<boolean>(false);\n    const [alertOpen, setAlertOpen] = useState<boolean>(false);\n    const [uploadOpen, setUploadOpen] = useState<boolean>(false);\n    const [progresses, setProgresses] = useState<Array<number>>([0]);\n    const [newProgresses, setNewProgresses] = useState<Array<number>>([0]);\n    const [cancelOpen, setCancelOpen] = useState<boolean>(false);\n    /**\n     * ? variable\n     */\n    const CHUNK_SIZE: number = 1024 * 1024 * 10;//10MB\n\n    /**\n     * ? functions\n     */\n    useEffect(() => {\n        api.defaults.headers.common['Authorization'] = 'Bearer ' + user.token;\n        api.get(`/category/list`)\n            .then(response => {\n                setCategories(arrayToTree(response.data.result, { parentProperty: 'categoryParent', customID: 'categoryId' }))\n            })\n    }, [user])\n\n    useEffect(() => {\n        setProgresses(pre => {\n            return new Array(fileList.length).fill(0)\n        })\n        setNewProgresses(pre => {\n            return new Array(fileList.length).fill(0)\n        })\n    }, [fileList])\n\n    useEffect(() => {\n        let tempArray: Array<string> = [];\n        async function getParents(array: Array<TreeViews>) {\n            await array.map((node: TreeViews) => {\n                if (node.children) {\n                    tempArray.push(node.categoryId + '');\n                    getParents(node.children);\n                }\n            });\n            setExpendedCategory(tempArray)\n        };\n        getParents(categories);\n    }, [categories])\n\n    const renderTrees = (nodes: TreeViews) => (\n        <TreeItem\n            endIcon={<Remove />}\n            key={nodes.categoryId}\n            nodeId={nodes.categoryId + ''}\n            label={nodes.categoryName}\n            classes={{ label: classes.label, group: classes.group, iconContainer: classes.iconContainer }}>\n            {Array.isArray(nodes.children) ? nodes.children.map((node) => renderTrees(node)) : null}\n        </TreeItem>\n    );\n    const Category = ({ category }: CategoryProps) => {\n        useEffect(() => {\n        }, [category]);\n        return renderTrees(category);\n    }\n    const handleToggle = (event: any, nodeIds: string[]) => {\n        event.preventDefault()\n    };\n    const handleNodeSelect = (event: any, nodeId: React.SetStateAction<string>) => {\n        setSelectedCategory(nodeId)\n    };\n    const handleAlertOpen = () => {\n        setAlertOpen(true)\n    }\n    const handleAlertClose = () => {\n        setAlertOpen(false)\n    }\n    const handleUploadOpen = () => {\n        setUploadOpen(true);\n    }\n    const handleUploadClose = () => {\n        setUploadOpen(false);\n    }\n    const handlePauseUpload = () => {\n        handleUploadClose()\n        setIsPaused(pre => {\n            let temp = true;\n            return temp;\n        })\n    }\n\n    const handleResumeUpload = async () => {\n        setIsPaused(pre => {\n            let temp = false;\n            return temp;\n        })\n        if (fileList.length !== 0 && title && selectedCategory) {\n            let data = { assetTitle: title, assetCategory: selectedCategory, assetSeq: assetSeq }\n            try {\n                const response = await api.put(`/asset/${assetSeq}`,\n                    data,\n                    {\n                        headers: {\n                            'Content-type': 'application/json',\n                        }\n                    });\n                await resumeUpload()\n                uploadStart()\n            }\n            catch (err) {\n                console.log(err);\n            }\n        } else {\n            handleAlertOpen();\n        }\n    }\n\n    const handleCancelUpload = () => {\n        //업로드 취소 확인창 띄우기\n        handlePauseUpload()\n        setCancelOpen(true)\n    }\n    const handleCloseCancel = ()=>{\n        setCancelOpen(false)\n        handleResumeUpload()\n    }\n\n    const cancelUpload = async () =>{\n        await api.delete(`/asset/${assetSeq}?assetOwner=${user.userId}`)\n        history.replace('/')\n    }\n    /**\n     * * 파일 업로드\n     */\n    const submitFiles = async (e: FormEvent) => {\n\n        e.preventDefault();\n        if (fileList.length !== 0 && title && selectedCategory) {\n            let data = { assetTitle: title, assetCategory: selectedCategory }\n            try {\n                const response = await api.post(`/asset`,\n                    data,\n                    {\n                        headers: {\n                            'Content-type': 'application/json',\n                        }\n                    });\n                setAssetSeq(pre => {\n                    const tempAssetSeq = response.data.result.assetSeq;\n                    return tempAssetSeq;\n                });\n            }\n            catch (err) {\n                console.log(err);\n            }\n        } else {\n            handleAlertOpen();\n        }\n    }\n    useEffect(() => {\n        assetSeq && uploadStart()\n    }, [assetSeq])\n    const uploadStart = async () => {\n        handleUploadOpen();\n        console.log(fileList, isPaused)\n        for (let i = 0; i < fileList.length; i++) {\n            let pause = isPaused;\n            setIsPaused(pre => {\n                pause = pre;\n                return pre;\n            })\n            fileList[i].isUploadComplete && setProgresses(pre => {\n                pre[i] = 100\n                return pre;\n            })\n            !fileList[i].isUploadComplete && !pause && await fileUpload(fileList[i]);\n            setIsPaused(pre => {\n                pause = pre\n                return pre;\n            });\n            !pause && fileList.length === i + 1 && fileUploadComplete()\n        }\n\n    }\n    const fileUpload = async (file: UploadFileInfo) => {\n        const targetFile = { ...file }\n        let pause = isPaused;\n        const response = await api.get(`/createLocation/${assetSeq}`)\n        file.assetLocation=response.data.result\n        targetFile.assetLocation = response.data.result\n        targetFile.assetSeq = assetSeq\n        const chunks = fileToChunks(targetFile.file)\n        const targetIndex = fileList.findIndex((e: UploadFileInfo) => e.assetOriginName === targetFile.assetOriginName);\n        for (let i = targetFile.currentChunk; i < chunks.length; i++) {\n            const targetFileWithNoFile = { ...targetFile }\n            delete targetFileWithNoFile.file\n            setIsPaused(pre => {\n                pause = pre;\n                return pre;\n            });\n            if (!pause) {\n                try {\n                    const response = await api.post(`/file`,\n                        chunks[i],\n                        {\n                            params: {\n                                assetLargeFile: targetFileWithNoFile,\n                            },\n                            headers: {\n                                \"Content-Type\": 'multipart/form-data'\n                            }\n                        })\n                    response.data.code === 200 && targetFile.currentChunk++\n                    setProgresses(pre => {\n                        pre[targetIndex] = Math.round(100 / chunks.length * targetFile.currentChunk);\n                        setNewProgresses([...pre])\n                        return pre\n                    })\n                } catch (err) {\n                    console.log(err);\n                }\n            } else {\n                break;\n            }\n            if (targetFile.currentChunk == targetFile.totalChunk - 1) {\n                targetFile.isUploadComplete = 1\n                setFileList(pre => {\n                    let tempList = [...pre]\n                    tempList[targetIndex] = targetFile\n                    return tempList;\n                })\n            }\n        }\n    }\n    const fileUploadComplete = async () => {\n        try {\n            await api.post(`/complete`,\n                { assetSeq: assetSeq, tags: tags.toString() },\n                {\n                    headers: {\n                        'Content-type': 'application/json',\n                    }\n                })\n            setFileList([]);\n            history.replace('/')\n        } catch (err) {\n            console.log(err)\n        }\n    }\n    // 파일을 청크로 나누는 함수\n    const fileToChunks = (target: File) => {\n        let chunks = [];\n        let chunkIndex = 0; // 파일 자를 시작 위치\n        const CHUNK_COUNT = Math.ceil(target.size / CHUNK_SIZE);//청크갯수\n        for (let i = 1; i <= CHUNK_COUNT; i++) {\n            if (i === CHUNK_COUNT)\n                chunks.push(target.slice(chunkIndex))\n            else\n                chunks.push(target.slice(chunkIndex, chunkIndex + CHUNK_SIZE))\n            chunkIndex += CHUNK_SIZE;\n        }\n        return chunks\n    }\n    /**\n     * * 업로드 재개\n     */\n    const resumeUpload = async () => {\n        const response = await api.get(`/uploaded/${assetSeq}`)\n        const uploadedList: UploadFileInfo[] = response.data.result\n        const tempFileList = [...fileList]\n        for (let i = 0; i < tempFileList.length; i++) {\n            for (let j = 0; j < uploadedList.length; j++) {\n                if (tempFileList[i].assetUuidName === uploadedList[j].assetUuidName) {\n                    let tempF = tempFileList[i]\n                    let tempU = uploadedList[j]\n                    tempF.isUploadComplete = tempU.isUploadComplete\n                    tempF.currentChunk = tempU.currentChunk + 1\n                    tempF.uploadedSize = tempU.uploadedSize\n                    break;\n                }\n            }\n        }\n        setFileList([...tempFileList])\n        console.log(fileList, tempFileList)\n    }\n\n    const addTag = (e: React.KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === \"Enter\" || e.key === \"Tab\") {\n            e.preventDefault();\n            let inputTag = currentInputTag.trim();\n            if (inputTag !== \"\") {\n                if (tags.filter(tag => tag === inputTag).length <= 0) {\n                    setIsTagDuplicated(false);\n                    let tmp: Array<string> = [...tags].concat(currentInputTag);\n                    setTags(tmp);\n                } else {\n                    setIsTagDuplicated(true)\n                }\n            }\n            setCurrentInputTag('');\n        }\n    }\n\n    const removeTag = (targetTag: string) => {\n        const targetTagIndex = tags.findIndex(e => e === targetTag);\n        tags.splice(targetTagIndex, 1);\n        setTags([...tags]);\n    }\n\n\n    const useStyles = makeStyles({\n        root: {\n            height: 240,\n            flexGrow: 1,\n            maxWidth: 400,\n            display: 'contents',\n        },\n        label: {\n            textAlign: 'left'\n        },\n        group: {\n            marginLeft: 7,\n            paddingLeft: 18,\n            borderLeft: `1px dashed ${fade('#000000', 0.4)}`,\n        },\n        iconContainer: {\n            \"& svg\": {\n                marginLeft: 10\n            }\n        }\n    });\n\n    function setFileListProp(action: string, payload: any) {\n        switch (action) {\n            case \"set\":\n                setFileList(payload)\n                break;\n            case \"add\":\n                setFileList(pre => {\n                    let tempFileList = [...pre];\n                    tempFileList = tempFileList.concat(payload)\n                    return tempFileList;\n                })\n                break;\n            case \"delete\":\n                setFileList(pre => {\n                    let tempFileList = [...pre];\n                    tempFileList.splice(payload, 1);\n                    return tempFileList;\n                })\n                break;\n            default:\n                setFileList([])\n                break;\n        }\n    }\n\n    const classes = useStyles();\n    return (\n        <>\n\n            <DivWrapper>\n                <DivContainer>\n                    <DivBox>\n                        <DivTitleContainer>\n                            <h2 className=\"h3 mb-2 text-gray-800\">업로드</h2>\n                        </DivTitleContainer>\n                        <FormLogin\n                        // onSubmit={submitFiles}\n                        >\n                            <DivInputGroup>\n                                <SpanInputLabel>제목</SpanInputLabel>\n                                <InputText type=\"text\" value={title} onChange={(e) => { setTitle(e.target.value) }} className=\"logininput\" />\n                            </DivInputGroup>\n\n                            <DivInputGroup>\n                                <SpanInputLabel>카테고리</SpanInputLabel>\n                                {categories.length > 0 ? (\n                                    <TreeView\n                                        onNodeToggle={handleToggle}\n                                        onNodeSelect={handleNodeSelect}\n                                        className={classes.root}\n                                        defaultCollapseIcon={<FolderOpen />}\n                                        defaultExpandIcon={<Folder />}\n                                        expanded={expendedCategory}\n                                    >\n                                        <div>\n                                            {categories.map((category: TreeViews) => {\n                                                return <Category key={category.categoryId} category={category} />\n                                            })}\n                                        </div>\n                                    </TreeView>\n                                ) :\n                                    (<CircularProgress />)\n                                }\n                            </DivInputGroup>\n\n\n                            <DivInputGroup>\n                                <SpanInputLabel>태그</SpanInputLabel>\n                                <InputText type=\"text\" value={currentInputTag} onChange={(e) => { setCurrentInputTag(e.target.value) }} onKeyPress={(e) => { addTag(e) }} placeholder=\"태그 입력 후 엔터\" />\n                            </DivInputGroup>\n                            <DivTagGroup>\n                                {\n                                    isTagDuplicated ?\n                                        <div style={{ color: 'red' }}>\n                                            중복된 태그입니다.\n                                    </div> : null\n                                }\n\n                                {tags.map((data, i) =>\n                                    <SpanTag key={i}>{data}<SpanTimes onClick={() => { removeTag(data) }}>×</SpanTimes></SpanTag>\n                                )}\n                            </DivTagGroup>\n                            <DivInputGroup>\n                                <DropZone fileList={fileList} setFileListProp={setFileListProp} isPaused={isPaused} />\n                            </DivInputGroup>\n                            <DivTagGroup>\n                                {!isPaused ? (<Button size=\"large\" color=\"primary\"\n                                    onClick={submitFiles} variant=\"contained\"\n                                >업로드</Button>)\n                                    :\n                                    (<Button size=\"large\" color=\"primary\" variant=\"contained\"\n                                        onClick={handleResumeUpload}\n                                    >업로드 재개</Button>)}\n\n                            </DivTagGroup>\n\n                        </FormLogin>\n                    </DivBox>\n                </DivContainer>\n            </DivWrapper>\n\n            <Dialog\n                open={alertOpen}\n                onClose={handleAlertClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">{\"입력정보를 확인해주세요\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        (제목, 카테고리, 파일첨부는 필수요소 입니다.)\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleAlertClose} color=\"primary\">\n                        확인\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <Dialog\n                open={uploadOpen}\n                // onClose={handlerUploadClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">{\"업로드\"}</DialogTitle>\n                <DialogContent>\n                    <List className={classes.root}>\n                        {fileList.map((file, mapIndex) =>\n                            <ListItem alignItems=\"flex-start\">\n                                <ListItemText\n                                    primary={file.assetOriginName}\n                                    secondary={\n                                        <React.Fragment>\n                                            <Box display=\"flex\" alignItems=\"center\">\n                                                <Box width=\"100%\" mr={1}>\n                                                    <LinearProgress variant=\"determinate\" value={newProgresses[mapIndex]} />\n                                                </Box>\n                                                <Box minWidth={35}>\n                                                    <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(newProgresses[mapIndex])}%`}</Typography>\n                                                </Box>\n                                            </Box>\n                                        </React.Fragment>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n\n                    </List>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handlePauseUpload} color=\"primary\" variant=\"contained\">\n                        일시정지\n                    </Button>\n                    <Button onClick={handleCancelUpload} color=\"secondary\" variant=\"contained\">\n                        취소\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog\n                open={cancelOpen}\n                onClose={handleAlertClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">업로드를 취소합니까?</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        업로드를 취소하면 현재까지의 진행사항이 모두 삭제됩니다\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={cancelUpload} color=\"secondary\" variant=\"contained\">\n                        확인\n                    </Button>\n                    <Button onClick={handleCloseCancel} color=\"primary\" variant=\"contained\">\n                        취소\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n}\n\nexport default Upload;",["166","167"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/modify/index.tsx",[],["168","169"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/util/api.ts",[],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/upload/DropZone.tsx",["170","171"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/detail/Info.tsx",["172","173","174","175","176","177","178"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/MemberManager/members.tsx",["179","180","181","182","183","184","185","186"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/Categories.tsx",["187","188","189","190","191","192","193","194"],"import api from \"../../../util/api\";\n\nimport {\n    Card,\n    CardHeader,\n    Paper,\n    makeStyles,\n    CardContent,\n    Grid,\n    ListItem,\n    List,\n    CircularProgress,\n    fade,\n    Table,\n    TableHead,\n    TableRow,\n    TableCell,\n    Typography,\n    Button,\n    withStyles,\n    Theme,\n    Tooltip,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogContentText,\n    DialogActions,\n} from \"@material-ui/core\";\nimport {\n    amber,\n    red\n} from \"@material-ui/core/colors\";\n\nimport arrayToTree from \"array-to-tree\";\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport { TreeItem, TreeView } from \"@material-ui/lab\";\nimport { ChevronRight, ExpandMore, Folder, FolderOpen, Remove, SubdirectoryArrowRight } from \"@material-ui/icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../../../modules\";\nimport CategoryNode from \"./CategoryNode\";\nimport {\n    setArrayCategories,\n    modifyCategory,\n    addCategory,\n} from \"../../../modules/arrayCategories\";\n\nconst ModifyButton = withStyles((theme: Theme) => ({\n    root: {\n        color: theme.palette.getContrastText(amber[500]),\n        backgroundColor: amber[500],\n        '&:hover': {\n            backgroundColor: amber[700],\n        },\n        '&:disabled': {\n            backgroundColor: \"#757575\"\n        }\n\n    },\n}))(Button);\nconst DeleteButton = withStyles((theme: Theme) => ({\n    root: {\n        color: theme.palette.getContrastText(red[900]),\n        backgroundColor: red[900],\n        '&:hover': {\n            backgroundColor: red[700],\n        },\n        '&:disabled': {\n            backgroundColor: \"#757575\"\n        },\n        marginLeft: 5\n    },\n}))(Button);\n\nconst useStyles = makeStyles(() => ({\n    addButton: {\n        margin: \"auto\",\n    },\n    ul: {\n        justifyContent: 'center',\n        padding: 10,\n    },\n    dialogPaper: {\n        width: \"400px\",\n    },\n    dialogTextField: {\n        width: \"100%\",\n        height: \"90px\"\n    },\n    root: {\n        padding: '2px 4px',\n        alignItems: 'center',\n        // display:'flex',\n        width: \"100%\",\n    },\n    input: {\n        flex: 1,\n        width: 250\n    },\n    iconButton: {\n        padding: 10,\n    },\n    divider: {\n        height: 28,\n        margin: 4,\n    },\n    formControl: {\n        margin: 1,\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: 2,\n    },\n    elevation4: {\n        boxShadow: \"inset 0px 2px 4px -1px rgb(0 0 0 / 20%), inset 0px 4px 5px 0px rgb(0 0 0 / 14%), inset 0px 1px 10px 0px rgb(0 0 0 / 12%) !important\"\n    },\n    paperRoot: {\n        padding: 10,\n        width: '100%',\n        minHeight: '500px',\n        overflow: \"scroll\"\n    },\n    paperInfo: {\n        margin: 10,\n        padding: 10,\n        width: '100%',\n        minHeight: '230px',\n        overflow: \"scroll\"\n    },\n    tooltip: {\n        fontSize: 15,\n        textAlign: \"center\"\n    }\n}))\n\ninterface TreeViews {\n    children?: TreeViews[];\n    categoryName: string;\n    categoryId: string;\n}\n\n\ninterface CategoryInfo {\n    categoryId: number,\n    categoryName: string,\n    categoryOrder: number,\n    categoryParent: number,\n    possessions?: number,\n    newNode?: boolean,\n    modifying?: boolean,\n}\nconst useTreeStyles = makeStyles({\n    root: {\n        height: 240,\n        flexGrow: 1,\n        // maxWidth: 400,\n        display: 'contents',\n        \".dragOver\": {\n            backgroundColor: \"red\",\n        }\n    },\n    label: {\n        textAlign: 'left'\n    },\n    group: {\n        marginLeft: 7,\n        paddingLeft: 18,\n        borderLeft: `1px dashed ${fade('#000000', 0.4)}`,\n    },\n    iconContainer: {\n        \"& svg\": {\n            marginLeft: 10\n        }\n    }\n});\n\n\n\nconst Categories = () => {\n\n    /**\n     * ? store\n     */\n    const arrayCategories = useSelector((state: RootState) => state.arrayCategories)\n    const dispatch = useDispatch()\n    const user = useSelector((state: RootState) => state.member)\n    const draggedNode = useSelector((state: RootState) => state.dragNode)\n\n    api.defaults.headers.common['Authorization'] = 'Bearer ' + user.token;\n\n    /**\n     * ? state\n     */\n\n    const [treeCategories, setTreeCategories] = useState([]);\n    const [selectedCategory, setSelectedCategory] = useState<string>('');\n    const [expendedCategory, setExpendedCategory] = useState<Array<string>>();\n    const [selectedCategoryInfo, setSelectedCategoryInfo] = useState<CategoryInfo>();\n    const [deleteOpen, setDeleteOpen] = useState<boolean>(false)\n\n    /**\n     * ? style\n     */\n\n    const treeClasses = useTreeStyles();\n    const classes = useStyles();\n\n    /**\n     * ? functions\n     */\n\n    const loadCategories = async () => {\n        const response = await api.get('/category/list')\n        const array = response.data.result\n        dispatch(setArrayCategories(array))\n    }\n\n    useEffect(() => {\n        loadCategories()\n    }, [])\n\n\n    useEffect(() => {\n        let tempArray: Array<string> = [];\n        async function getParents(array: Array<TreeViews>) {\n            await array.map((node: TreeViews) => {\n                if (node.children) {\n                    tempArray.push(node.categoryId + '');\n                    getParents(node.children);\n                }\n            });\n        };\n        getParents(treeCategories);\n        setExpendedCategory([...tempArray, \"0\"])\n    }, [treeCategories])\n\n    useEffect(() => {\n        setTreeCategories(arrayToTree(arrayCategories, { parentProperty: 'categoryParent', customID: 'categoryId' }))\n        // handleTreeLabelClick(\"0\")\n    }, [arrayCategories])\n    const handleToggle = (event: any, nodeIds: string[]) => {\n        event.preventDefault()\n    };\n    const handleNodeSelect = (event: any, nodeId: React.SetStateAction<string>) => {\n        event.stopPropagation();\n        setSelectedCategory(nodeId)\n    };\n\n    const hasChild = () => {\n        let tempArray: Array<string> = [];\n        async function getParents(array: Array<TreeViews>) {\n            await array.map((node: TreeViews) => {\n                if (node.children) {\n                    tempArray.push(node.categoryId + '');\n                    getParents(node.children);\n                }\n            });\n        }\n        getParents(treeCategories);\n        return tempArray.findIndex((e: string) => e === `${selectedCategoryInfo.categoryId}`)\n    }\n\n    const handleAddCategory = async () => {\n        const order = await getLastOrder(selectedCategory)\n        const newNode: CategoryInfo = {\n            categoryId: new Date().getTime(),\n            categoryName: '',\n            categoryOrder: order,\n            categoryParent: Number(selectedCategory),\n            possessions: 0,\n            newNode: true,\n        }\n        dispatch(addCategory(newNode))\n    }\n\n    const handleModifyCategory = () => {\n        const targetIndex = arrayCategories.findIndex((e: CategoryInfo) => e.categoryId + '' === selectedCategory);\n        dispatch(modifyCategory(targetIndex))\n    }\n\n    function getLastOrder(nodeId: string) {\n        let count = 0\n        for (let i = 0; i < arrayCategories.length; i++) {\n            if (arrayCategories[i].categoryParent + '' === nodeId)\n                count++\n        }\n        return count\n    }\n    const handleTreeLabelClick = async (nodeId: string) => {\n        const response = await api.get(`/category/${nodeId}`)\n        setSelectedCategoryInfo(response.data.result)\n    }\n\n    const handleTreeIconClick = (nodeId: string) => {\n        const targetIndex = expendedCategory.findIndex((e: string) => e === nodeId);\n        targetIndex === -1 ?\n            setExpendedCategory(pre => {\n                let temp: string[] = [...pre];\n                temp = [...temp, nodeId]\n                return temp\n            })\n            : setExpendedCategory(pre => {\n                let temp: string[] = [...pre];\n                temp.splice(targetIndex, 1)\n                return temp;\n            })\n    }\n\n    const deleteButtonClick = () => {\n        setDeleteOpen(true)\n    }\n\n    const handleDeleteClose = () => {\n        setDeleteOpen(false)\n    }\n    const handleDeleteConfirm = () => {\n        api.delete(`/category/${selectedCategoryInfo.categoryId}`)\n            .then(response => {\n                setSelectedCategory(null)\n                setDeleteOpen(false)\n                loadCategories()\n                handleTreeLabelClick(\"0\")\n            })\n    }\n\n\n    const onDragOver = (e: React.DragEvent) => {\n        e.preventDefault();\n    }\n\n    const onDrop = async (e: React.DragEvent, categoryId: string) => {\n        e.stopPropagation()\n        if (draggedNode.includes(String(categoryId))) {\n            //드랍 불가능 액션\n        } else {\n            const node = arrayCategories[arrayCategories.findIndex((element) => element.categoryId === Number(draggedNode[0]))]\n            node.categoryParent = Number(categoryId)\n            await api.put(`category/order`, node)\n            loadCategories()\n        }\n    }\n\n    const setTestCategory = (target: Array<string>) => {\n        setExpendedCategory(target);\n    }\n\n    return (\n        <>\n            <Paper style={{ maxWidth: 1024, margin: \"auto\" }}>\n                <Card>\n                    <CardHeader\n                        title=\"카테고리 관리\"\n                    />\n                    <CardContent>\n\n                        <Grid item>\n\n                            <Table>\n                                <TableHead>\n                                    <TableRow style={{ height: \"50px\" }}>\n                                        {selectedCategoryInfo ?\n                                            <>\n                                                <TableCell>\n                                                    카테고리 내 게시글 수 : {selectedCategoryInfo.possessions}\n                                                </TableCell>\n                                                <TableCell align=\"right\" style={{ padding: 0 }}>\n                                                    <Button variant=\"contained\" color=\"primary\" style={{ marginRight: 5 }} onClick={handleAddCategory}>추가</Button>\n                                                    {selectedCategoryInfo.categoryId ?\n                                                        <>\n                                                            <ModifyButton onClick={handleModifyCategory}>수정</ModifyButton>\n                                                            {selectedCategoryInfo.possessions || hasChild() !== -1 ?\n                                                                <Tooltip classes={{ tooltip: classes.tooltip }} title=\"하위 카테고리나 게시물이 있는 카테고리는 삭제할 수 없습니다\" arrow >\n                                                                    <span>\n                                                                        <DeleteButton disabled={true}>삭제</DeleteButton>\n                                                                    </span>\n                                                                </Tooltip>\n                                                                :\n                                                                <DeleteButton onClick={deleteButtonClick} disabled={false}>삭제</DeleteButton>\n                                                            }\n                                                        </>\n                                                        :\n                                                        null\n                                                    }\n                                                </TableCell>\n                                            </>\n                                            :\n                                            <TableCell colSpan={2} align=\"center\"\n                                            //  style={{ textAlign: \"center\" }}\n                                            >\n                                                <Typography variant={\"h6\"}>카테고리를 선택해 주세요</Typography>\n                                            </TableCell>\n                                        }\n                                    </TableRow>\n                                </TableHead>\n                            </Table>\n                            <List>\n                                <ListItem key={1}>\n                                    <Paper elevation={4} classes={{ elevation4: classes.elevation4, root: classes.paperRoot }}>\n                                        {treeCategories && expendedCategory ? (\n                                            <TreeView\n                                                onNodeToggle={handleToggle}\n                                                onNodeSelect={handleNodeSelect}\n                                                className={classes.root}\n                                                defaultCollapseIcon={<FolderOpen />}\n                                                defaultExpandIcon={<Folder />}\n                                                expanded={expendedCategory}\n                                                defaultSelected=\"0\"\n                                            >\n                                                <TreeItem\n                                                    key=\"0\"\n                                                    nodeId=\"0\"\n                                                    label=\"전체 보기\"\n                                                    onDragOver={onDragOver}\n                                                    onDrop={(e) => { onDrop(e, \"0\") }}\n                                                    onIconClick={() => handleTreeIconClick(\"0\")}\n                                                    classes={{ label: treeClasses.label, group: treeClasses.group, iconContainer: treeClasses.iconContainer }}\n                                                    onLabelClick={() => handleTreeLabelClick(\"0\")}\n                                                    endIcon={<Remove />}>\n                                                    {treeCategories.map((category: TreeViews) => {\n                                                        return <CategoryNode\n                                                            key={category.categoryName}\n                                                            category={category}\n                                                            setExpendedCategoryList={setTestCategory}\n                                                            expendedCategoryList={expendedCategory}\n                                                            selectedInfo={setSelectedCategoryInfo} />\n                                                    })}\n                                                </TreeItem>\n                                            </TreeView>\n                                        ) :\n                                            (<CircularProgress />)\n                                        }\n                                    </Paper>\n                                </ListItem>\n                            </List>\n                        </Grid>\n                    </CardContent>\n                </Card>\n            </Paper>\n\n            <Dialog\n                open={deleteOpen}\n                onClose={handleDeleteClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">{\"카테고리 삭제\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        {selectedCategoryInfo &&\n                            `${selectedCategoryInfo.categoryName} 카테고리를 삭제하시겠습니까?`}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <DeleteButton onClick={handleDeleteConfirm}>\n                        삭제\n                    </DeleteButton>\n                    <Button onClick={handleDeleteClose} color=\"primary\" autoFocus>\n                        취소\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n\n}\nexport default Categories\n",["195","196"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/MemberManager/Members.tsx",["197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/login/Login.tsx",["213","214","215","216","217","218"],"import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport axios from 'axios';\nimport styled from '@emotion/styled'\nimport member, { login } from '../../modules/member';\nimport { RootState } from '../../modules';\nimport { useHistory } from 'react-router';\nimport { Switch } from '@material-ui/core';\nimport api from \"../../util/api\";\n\n\nlet DivWrapper = styled.div`\nwidth:100%;\nmargin: 0 auto;\npadding: 0px;\nbox-sizing: border-box;\n`;\n\nlet DivLoginContainer = styled.div`\nwidth: 100%;\n  min-height: 100vh;\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  padding: 15px;\n  background: #ebeeef;\n`;\n\nlet DivLoginBox = styled.div`\nwidth: 670px;\nbackground: #fff;\nborder-radius: 10px;\noverflow: hidden;\nposition: relative;\nbox-shadow: 0 30px 60px 0 rgba(0, 0, 0, 0.3);\n`;\nlet DivLoginTitle = styled.div`\n&:first-child{width: 100%;\nposition: relative;\nz-index: 1;\ndisplay: -webkit-box;\ndisplay: -webkit-flex;\ndisplay: -moz-box;\ndisplay: -ms-flexbox;\ndisplay: flex;\nflex-wrap: wrap;\nflex-direction: column;\nalign-items: center;\n\nbackground-repeat: no-repeat;\nbackground-size: cover;\nbackground-position: center;\n\npadding: 70px 15px 74px 15px;\n\n&:before{\n    content: \"\";\n    display: block;\n    position: absolute;\n    z-index: -1;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    background-color: rgba(54,84,99,0.7);\n}    \n}\n`;\n\nlet SpanLoginTitle = styled.span`\nfont-family: Poppins-Bold;\nfont-size: 30px;\ncolor: #fff;\ntext-transform: uppercase;\nline-height: 1.2;\ntext-align: center;\n`;\n\nconst FormLogin = styled.form`\nwidth: 100%;\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  padding: 43px 88px 93px 190px;\n  box-sizing:border-box;\n`;\n\nconst DivLoginGroup = styled.div`\nwidth: 100%;\n  position: relative;\n  border-bottom: 1px solid #b2b2b2;\n  margin-bottom: 26px;\n`;\n\nconst SpanLoginLabel = styled.span`\nfont-family: Poppins-Regular;\n  font-size: 15px;\n  color: #808080;\n  line-height: 1.2;\n  text-align: right;\n  position: absolute;\n  top: 14px;\n  left: -105px;\n  width: 80px;\n`;\nconst InputLogin = styled.input`\nfont-family: Poppins-Regular;\n  font-size: 15px;\n  color: #555555;\n  line-height: 1.2;\n  height: 45px;\n  display: block;\n  width: 100%;\n  background: transparent;\n  padding: 0 5px;\n  outline:none;\n  border:none;\n`;\n\nconst SpanLoginFocus = styled.span`\n&:first-child{position: absolute;\n  display: block;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  pointer-events: none;\n  &:before{\n    content: \"\";\n    display: block;\n    position: absolute;\n    bottom: -1px;\n    left: 0;\n    width:0;\n    height: 2px;\n    transition: all 0.6s;\n    background: #57b846;\n  }\n  ${InputLogin}:focus + &:before{\n    width: 100%;\n  }\n}\n`;\n\nconst DivButtonWrapper = styled.div`\nwidth: 100%;\ndisplay: -webkit-box;\ndisplay: -webkit-flex;\ndisplay: -moz-box;\ndisplay: -ms-flexbox;\ndisplay: flex;\nflex-wrap: wrap;\n`;\n\nconst ButtonLogin = styled.button`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding: 0 20px;\nmin-width: 160px;\nheight: 50px;\nbackground-color: #57b846;\nborder-radius: 25px;\n\nfont-family: Poppins-Regular;\nfont-size: 16px;\ncolor: #fff;\n// line-height: 1.2;\n\ntransition: all 0.4s;\n&:hover{\n    background-color: #555555;\n    cursor:pointer;\n}&:active{\n    background-color: #222222;\n}\n`;\n\n\n//style end\nfunction parseJwt(token: string) {\n  var base64Url = token.split('.')[1];\n  var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n  var jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\n    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n  }).join(''));\n\n  return JSON.parse(jsonPayload);\n};\nfunction Login() {\n  const history = useHistory();\n  let [username, setUsername] = useState(\"\");\n  let [password, setPassword] = useState(\"\");\n  let [isLoginSuccess, setIsLoginSuccess] = useState(true);\n  const dispatch = useDispatch();\n  async function handleLoginButton(e: any) {\n    e.preventDefault();\n    try {\n      const response = await api.post(`/authenticate`,\n        { username: username, password: password },\n        {\n          headers: {\n            'Content-type': 'application/json',\n            'Access-Control-Allow-Origin': '*'\n          }\n        });\n      dispatch(login({ userId: parseJwt(response.data.token).sub ,userRole: parseJwt(response.data.token).userRole,token:response.data.token, isLogined: true }))\n      sessionStorage.setItem(\"current_user_token\", response.data.token);\n      history.push(\"/\");\n    } catch (err) {\n      setIsLoginSuccess(false)\n    }\n  }\n  \n  return (\n    <div>\n      <DivWrapper>\n        <DivLoginContainer>\n          <DivLoginBox>\n            <DivLoginTitle>\n              <SpanLoginTitle>로그인</SpanLoginTitle>\n            </DivLoginTitle>\n            <FormLogin onSubmit={handleLoginButton}>\n              <DivLoginGroup>\n                <SpanLoginLabel>아이디</SpanLoginLabel>\n                <InputLogin type=\"text\" className=\"logininput\" value={username} onChange={e => setUsername(e.target.value)} />\n                {/* <SpanLoginFocus></SpanLoginFocus>  */}\n              </DivLoginGroup>\n              <DivLoginGroup>\n                <SpanLoginLabel>비밀번호</SpanLoginLabel>\n                <InputLogin type=\"password\" className=\"logininput\" value={password} onChange={e => setPassword(e.target.value)} />\n                {/* <SpanLoginFocus></SpanLoginFocus>  */}\n              </DivLoginGroup>\n              {!isLoginSuccess ?\n                <div style={{ color: 'red' }}>\n                  로그인에 실패했습니다.\n                  </div> :\n                null\n              }\n              <DivButtonWrapper>\n                <ButtonLogin onClick={handleLoginButton}>로그인</ButtonLogin>\n              </DivButtonWrapper>\n            </FormLogin>\n          </DivLoginBox>\n        </DivLoginContainer>\n      </DivWrapper>\n    </div>\n  );\n}\n\nexport default Login;",["219","220"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/modules/fileList.ts",[],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/commons/SideHeader.tsx",[],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/DropForHighOrder.tsx",[],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/index.tsx",["221","222"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/DropForLowOrder.tsx",[],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/index.tsx",[],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/CategoryManager/index.tsx",[],["223","224"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/modify/ModInfo.tsx",["225","226","227","228","229","230","231"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/commons/SearchWindow.tsx",["232","233","234","235","236","237","238","239","240"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/main/Posts.tsx",["241","242","243","244"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/main/index.tsx",["245"],"import Posts from \"./Posts\"\nimport Sidebar from \"../commons/Sidebar\"\nimport { RouteComponentProps } from \"react-router-dom\"\n\ntype MatchParams = {\n    pageNum: string\n}\n\nconst Main = ({ match }: RouteComponentProps<MatchParams>) => {\n    const {pageNum} = match.params\n    return (\n        <div>\n                <Posts pageNum={pageNum}/>\n        </div>\n    )\n}\n\nexport default Main;","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/detail/index.tsx",[],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/MemberManager/index.tsx",[],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/admin/MemberManager/MembersTable.tsx",["246"],{"ruleId":"247","severity":1,"message":"248","line":5,"column":7,"nodeType":"249","messageId":"250","endLine":5,"endColumn":16},{"ruleId":"251","replacedBy":"252"},{"ruleId":"253","replacedBy":"254"},{"ruleId":"247","severity":1,"message":"255","line":35,"column":38,"nodeType":"249","messageId":"250","endLine":35,"endColumn":44},{"ruleId":"247","severity":1,"message":"256","line":35,"column":46,"nodeType":"249","messageId":"250","endLine":35,"endColumn":57},{"ruleId":"257","severity":1,"message":"258","line":181,"column":8,"nodeType":"259","endLine":181,"endColumn":10,"suggestions":"260"},{"ruleId":"261","severity":1,"message":"262","line":206,"column":47,"nodeType":"263","messageId":"264","endLine":206,"endColumn":49},{"ruleId":"261","severity":1,"message":"262","line":232,"column":47,"nodeType":"263","messageId":"264","endLine":232,"endColumn":49},{"ruleId":"247","severity":1,"message":"265","line":11,"column":18,"nodeType":"249","messageId":"250","endLine":11,"endColumn":40},{"ruleId":"251","replacedBy":"266"},{"ruleId":"253","replacedBy":"267"},{"ruleId":"251","replacedBy":"268"},{"ruleId":"253","replacedBy":"269"},{"ruleId":"251","replacedBy":"270"},{"ruleId":"253","replacedBy":"271"},{"ruleId":"247","severity":1,"message":"272","line":34,"column":30,"nodeType":"249","messageId":"250","endLine":34,"endColumn":47},{"ruleId":"247","severity":1,"message":"273","line":198,"column":12,"nodeType":"249","messageId":"250","endLine":198,"endColumn":22},{"ruleId":"261","severity":1,"message":"262","line":229,"column":47,"nodeType":"263","messageId":"264","endLine":229,"endColumn":49},{"ruleId":"247","severity":1,"message":"274","line":289,"column":23,"nodeType":"249","messageId":"250","endLine":289,"endColumn":31},{"ruleId":"257","severity":1,"message":"275","line":351,"column":8,"nodeType":"259","endLine":351,"endColumn":18,"suggestions":"276"},{"ruleId":"277","severity":1,"message":"278","line":386,"column":25,"nodeType":"263","messageId":"279","endLine":389,"endColumn":14},{"ruleId":"280","severity":1,"message":"281","line":414,"column":41,"nodeType":"282","messageId":"283","endLine":414,"endColumn":43},{"ruleId":"251","replacedBy":"284"},{"ruleId":"253","replacedBy":"285"},{"ruleId":"251","replacedBy":"286"},{"ruleId":"253","replacedBy":"287"},{"ruleId":"247","severity":1,"message":"288","line":12,"column":7,"nodeType":"249","messageId":"250","endLine":12,"endColumn":17},{"ruleId":"247","severity":1,"message":"289","line":109,"column":7,"nodeType":"249","messageId":"250","endLine":109,"endColumn":23},{"ruleId":"247","severity":1,"message":"290","line":25,"column":10,"nodeType":"249","messageId":"250","endLine":25,"endColumn":20},{"ruleId":"247","severity":1,"message":"291","line":25,"column":46,"nodeType":"249","messageId":"250","endLine":25,"endColumn":53},{"ruleId":"247","severity":1,"message":"292","line":83,"column":10,"nodeType":"249","messageId":"250","endLine":83,"endColumn":18},{"ruleId":"257","severity":1,"message":"293","line":122,"column":8,"nodeType":"259","endLine":122,"endColumn":18,"suggestions":"294"},{"ruleId":"280","severity":1,"message":"281","line":127,"column":36,"nodeType":"282","messageId":"283","endLine":127,"endColumn":38},{"ruleId":"280","severity":1,"message":"295","line":128,"column":44,"nodeType":"282","messageId":"283","endLine":128,"endColumn":46},{"ruleId":"247","severity":1,"message":"296","line":207,"column":11,"nodeType":"249","messageId":"250","endLine":207,"endColumn":35},{"ruleId":"247","severity":1,"message":"297","line":19,"column":8,"nodeType":"249","messageId":"250","endLine":19,"endColumn":13},{"ruleId":"247","severity":1,"message":"298","line":25,"column":6,"nodeType":"249","messageId":"250","endLine":25,"endColumn":17},{"ruleId":"299","severity":1,"message":"300","line":51,"column":42,"nodeType":"301","messageId":"302","endLine":51,"endColumn":43,"suggestions":"303"},{"ruleId":"299","severity":1,"message":"300","line":51,"column":75,"nodeType":"301","messageId":"302","endLine":51,"endColumn":76,"suggestions":"304"},{"ruleId":"299","severity":1,"message":"300","line":53,"column":44,"nodeType":"301","messageId":"302","endLine":53,"endColumn":45,"suggestions":"305"},{"ruleId":"299","severity":1,"message":"306","line":53,"column":46,"nodeType":"301","messageId":"302","endLine":53,"endColumn":47,"suggestions":"307"},{"ruleId":"257","severity":1,"message":"308","line":373,"column":7,"nodeType":"259","endLine":373,"endColumn":17,"suggestions":"309"},{"ruleId":"257","severity":1,"message":"308","line":376,"column":8,"nodeType":"259","endLine":376,"endColumn":17,"suggestions":"310"},{"ruleId":"247","severity":1,"message":"255","line":35,"column":38,"nodeType":"249","messageId":"250","endLine":35,"endColumn":44},{"ruleId":"247","severity":1,"message":"256","line":35,"column":46,"nodeType":"249","messageId":"250","endLine":35,"endColumn":57},{"ruleId":"247","severity":1,"message":"311","line":37,"column":10,"nodeType":"249","messageId":"250","endLine":37,"endColumn":22},{"ruleId":"247","severity":1,"message":"312","line":37,"column":24,"nodeType":"249","messageId":"250","endLine":37,"endColumn":34},{"ruleId":"247","severity":1,"message":"265","line":37,"column":64,"nodeType":"249","messageId":"250","endLine":37,"endColumn":86},{"ruleId":"257","severity":1,"message":"258","line":219,"column":8,"nodeType":"259","endLine":219,"endColumn":10,"suggestions":"313"},{"ruleId":"261","severity":1,"message":"262","line":225,"column":47,"nodeType":"263","messageId":"264","endLine":225,"endColumn":49},{"ruleId":"261","severity":1,"message":"262","line":251,"column":47,"nodeType":"263","messageId":"264","endLine":251,"endColumn":49},{"ruleId":"251","replacedBy":"314"},{"ruleId":"253","replacedBy":"315"},{"ruleId":"247","severity":1,"message":"316","line":2,"column":5,"nodeType":"249","messageId":"250","endLine":2,"endColumn":19},{"ruleId":"247","severity":1,"message":"317","line":2,"column":21,"nodeType":"249","messageId":"250","endLine":2,"endColumn":30},{"ruleId":"247","severity":1,"message":"318","line":2,"column":32,"nodeType":"249","messageId":"250","endLine":2,"endColumn":37},{"ruleId":"247","severity":1,"message":"319","line":2,"column":39,"nodeType":"249","messageId":"250","endLine":2,"endColumn":47},{"ruleId":"247","severity":1,"message":"320","line":2,"column":49,"nodeType":"249","messageId":"250","endLine":2,"endColumn":58},{"ruleId":"247","severity":1,"message":"321","line":2,"column":118,"nodeType":"249","messageId":"250","endLine":2,"endColumn":130},{"ruleId":"247","severity":1,"message":"322","line":2,"column":151,"nodeType":"249","messageId":"250","endLine":2,"endColumn":160},{"ruleId":"247","severity":1,"message":"323","line":16,"column":10,"nodeType":"249","messageId":"250","endLine":16,"endColumn":15},{"ruleId":"247","severity":1,"message":"297","line":19,"column":8,"nodeType":"249","messageId":"250","endLine":19,"endColumn":13},{"ruleId":"247","severity":1,"message":"298","line":27,"column":6,"nodeType":"249","messageId":"250","endLine":27,"endColumn":17},{"ruleId":"299","severity":1,"message":"300","line":31,"column":42,"nodeType":"301","messageId":"302","endLine":31,"endColumn":43,"suggestions":"324"},{"ruleId":"299","severity":1,"message":"300","line":31,"column":75,"nodeType":"301","messageId":"302","endLine":31,"endColumn":76,"suggestions":"325"},{"ruleId":"299","severity":1,"message":"300","line":33,"column":44,"nodeType":"301","messageId":"302","endLine":33,"endColumn":45,"suggestions":"326"},{"ruleId":"299","severity":1,"message":"306","line":33,"column":46,"nodeType":"301","messageId":"302","endLine":33,"endColumn":47,"suggestions":"327"},{"ruleId":"257","severity":1,"message":"308","line":356,"column":8,"nodeType":"259","endLine":356,"endColumn":32,"suggestions":"328"},{"ruleId":"257","severity":1,"message":"308","line":359,"column":8,"nodeType":"259","endLine":359,"endColumn":17,"suggestions":"329"},{"ruleId":"247","severity":1,"message":"330","line":2,"column":23,"nodeType":"249","messageId":"250","endLine":2,"endColumn":34},{"ruleId":"247","severity":1,"message":"297","line":3,"column":8,"nodeType":"249","messageId":"250","endLine":3,"endColumn":13},{"ruleId":"247","severity":1,"message":"331","line":5,"column":8,"nodeType":"249","messageId":"250","endLine":5,"endColumn":14},{"ruleId":"247","severity":1,"message":"332","line":6,"column":10,"nodeType":"249","messageId":"250","endLine":6,"endColumn":19},{"ruleId":"247","severity":1,"message":"333","line":8,"column":10,"nodeType":"249","messageId":"250","endLine":8,"endColumn":16},{"ruleId":"247","severity":1,"message":"334","line":129,"column":7,"nodeType":"249","messageId":"250","endLine":129,"endColumn":21},{"ruleId":"251","replacedBy":"335"},{"ruleId":"253","replacedBy":"336"},{"ruleId":"247","severity":1,"message":"337","line":8,"column":8,"nodeType":"249","messageId":"250","endLine":8,"endColumn":14},{"ruleId":"257","severity":1,"message":"338","line":31,"column":21,"nodeType":"339","endLine":31,"endColumn":65},{"ruleId":"251","replacedBy":"340"},{"ruleId":"253","replacedBy":"341"},{"ruleId":"247","severity":1,"message":"297","line":2,"column":8,"nodeType":"249","messageId":"250","endLine":2,"endColumn":13},{"ruleId":"247","severity":1,"message":"312","line":6,"column":10,"nodeType":"249","messageId":"250","endLine":6,"endColumn":20},{"ruleId":"247","severity":1,"message":"311","line":6,"column":22,"nodeType":"249","messageId":"250","endLine":6,"endColumn":34},{"ruleId":"247","severity":1,"message":"291","line":6,"column":36,"nodeType":"249","messageId":"250","endLine":6,"endColumn":43},{"ruleId":"247","severity":1,"message":"342","line":7,"column":36,"nodeType":"249","messageId":"250","endLine":7,"endColumn":42},{"ruleId":"261","severity":1,"message":"262","line":179,"column":47,"nodeType":"263","messageId":"264","endLine":179,"endColumn":49},{"ruleId":"247","severity":1,"message":"343","line":244,"column":11,"nodeType":"249","messageId":"250","endLine":244,"endColumn":26},{"ruleId":"247","severity":1,"message":"344","line":15,"column":22,"nodeType":"249","messageId":"250","endLine":15,"endColumn":36},{"ruleId":"247","severity":1,"message":"297","line":16,"column":8,"nodeType":"249","messageId":"250","endLine":16,"endColumn":13},{"ruleId":"247","severity":1,"message":"345","line":20,"column":10,"nodeType":"249","messageId":"250","endLine":20,"endColumn":14},{"ruleId":"247","severity":1,"message":"346","line":55,"column":6,"nodeType":"249","messageId":"250","endLine":55,"endColumn":10},{"ruleId":"280","severity":1,"message":"295","line":125,"column":108,"nodeType":"282","messageId":"283","endLine":125,"endColumn":110},{"ruleId":"280","severity":1,"message":"281","line":125,"column":118,"nodeType":"282","messageId":"283","endLine":125,"endColumn":120},{"ruleId":"280","severity":1,"message":"295","line":131,"column":112,"nodeType":"282","messageId":"283","endLine":131,"endColumn":114},{"ruleId":"280","severity":1,"message":"281","line":131,"column":122,"nodeType":"282","messageId":"283","endLine":131,"endColumn":124},{"ruleId":"280","severity":1,"message":"281","line":133,"column":94,"nodeType":"282","messageId":"283","endLine":133,"endColumn":96},{"ruleId":"247","severity":1,"message":"347","line":6,"column":3,"nodeType":"249","messageId":"250","endLine":6,"endColumn":14},{"ruleId":"247","severity":1,"message":"348","line":27,"column":45,"nodeType":"249","messageId":"250","endLine":27,"endColumn":51},{"ruleId":"257","severity":1,"message":"349","line":218,"column":6,"nodeType":"259","endLine":218,"endColumn":39,"suggestions":"350"},{"ruleId":"261","severity":1,"message":"262","line":239,"column":41,"nodeType":"263","messageId":"264","endLine":239,"endColumn":43},{"ruleId":"247","severity":1,"message":"351","line":2,"column":8,"nodeType":"249","messageId":"250","endLine":2,"endColumn":15},{"ruleId":"247","severity":1,"message":"352","line":18,"column":17,"nodeType":"249","messageId":"250","endLine":18,"endColumn":25},"@typescript-eslint/no-unused-vars","'CANCELADD' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["353"],"no-negated-in-lhs",["354"],"'useRef' is defined but never used.","'useCallback' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadCategories'. Either include it or remove the dependency array.","ArrayExpression",["355"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'SubdirectoryArrowRight' is defined but never used.",["353"],["354"],["353"],["354"],["353"],["354"],"'FormatBoldTwoTone' is defined but never used.","'progresses' is assigned a value but never used.","'response' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'uploadStart'. Either include it or remove the dependency array.",["356"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'pause'.","unsafeRefs","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["353"],["354"],["353"],["354"],"'PContainer' is assigned a value but never used.","'SpanFileErrorMsg' is assigned a value but never used.","'StarBorder' is defined but never used.","'Comment' is defined but never used.","'parseJwt' is defined but never used.","React Hook useEffect has a missing dependency: 'findParent'. Either include it or remove the dependency array.",["357"],"Expected '!==' and instead saw '!='.","'handleMultiDownloadAsZip' is assigned a value but never used.","'axios' is defined but never used.","'MatchParams' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["358","359"],["360","361"],["362","363"],"Unnecessary escape character: \\-.",["364","365"],"React Hook useEffect has a missing dependency: 'loadMembers'. Either include it or remove the dependency array.",["366"],["367"],"'ChevronRight' is defined but never used.","'ExpandMore' is defined but never used.",["368"],["353"],["354"],"'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'Table' is defined but never used.","'TableRow' is defined but never used.","'TableBody' is defined but never used.","'createStyles' is defined but never used.","'TableCell' is defined but never used.","'amber' is defined but never used.",["369","370"],["371","372"],["373","374"],["375","376"],["377"],["378"],"'useSelector' is defined but never used.","'member' is defined but never used.","'RootState' is defined but never used.","'Switch' is defined but never used.","'SpanLoginFocus' is assigned a value but never used.",["353"],["354"],"'Header' is defined but never used.","Assignments to the 'token' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression",["353"],["354"],"'colors' is defined but never used.","'handleAlertOpen' is assigned a value but never used.","'PaginationItem' is defined but never used.","'Link' is defined but never used.","'Page' is defined but never used.","'CardActions' is defined but never used.","'Search' is defined but never used.","React Hook useEffect has missing dependencies: 'loadContents' and 'search'. Either include them or remove the dependency array.",["379"],"'Sidebar' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"380","fix":"381"},{"desc":"382","fix":"383"},{"desc":"384","fix":"385"},{"messageId":"386","fix":"387","desc":"388"},{"messageId":"389","fix":"390","desc":"391"},{"messageId":"386","fix":"392","desc":"388"},{"messageId":"389","fix":"393","desc":"391"},{"messageId":"386","fix":"394","desc":"388"},{"messageId":"389","fix":"395","desc":"391"},{"messageId":"386","fix":"396","desc":"388"},{"messageId":"389","fix":"397","desc":"391"},{"desc":"398","fix":"399"},{"desc":"400","fix":"401"},{"desc":"380","fix":"402"},{"messageId":"386","fix":"403","desc":"388"},{"messageId":"389","fix":"404","desc":"391"},{"messageId":"386","fix":"405","desc":"388"},{"messageId":"389","fix":"406","desc":"391"},{"messageId":"386","fix":"407","desc":"388"},{"messageId":"389","fix":"408","desc":"391"},{"messageId":"386","fix":"409","desc":"388"},{"messageId":"389","fix":"410","desc":"391"},{"desc":"411","fix":"412"},{"desc":"400","fix":"413"},{"desc":"414","fix":"415"},"Update the dependencies array to be: [loadCategories]",{"range":"416","text":"417"},"Update the dependencies array to be: [assetSeq, uploadStart]",{"range":"418","text":"419"},"Update the dependencies array to be: [assetSeq, findParent]",{"range":"420","text":"421"},"removeEscape",{"range":"422","text":"423"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"424","text":"425"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"426","text":"423"},{"range":"427","text":"425"},{"range":"428","text":"423"},{"range":"429","text":"425"},{"range":"430","text":"423"},{"range":"431","text":"425"},"Update the dependencies array to be: [isSearch, loadMembers]",{"range":"432","text":"433"},"Update the dependencies array to be: [loadMembers, pageNum]",{"range":"434","text":"435"},{"range":"436","text":"417"},{"range":"437","text":"423"},{"range":"438","text":"425"},{"range":"439","text":"423"},{"range":"440","text":"425"},{"range":"441","text":"423"},{"range":"442","text":"425"},{"range":"443","text":"423"},{"range":"444","text":"425"},"Update the dependencies array to be: [isSearch, orderBy, order, loadMembers]",{"range":"445","text":"446"},{"range":"447","text":"435"},"Update the dependencies array to be: [pageNum, isSearch, hasCondition, search, loadContents]",{"range":"448","text":"449"},[3757,3759],"[loadCategories]",[8912,8922],"[assetSeq, uploadStart]",[3345,3355],"[assetSeq, findParent]",[1376,1377],"",[1376,1376],"\\",[1409,1410],[1409,1409],[1534,1535],[1534,1534],[1536,1537],[1536,1536],[12886,12896],"[isSearch, loadMembers]",[12950,12959],"[loadMembers, pageNum]",[4887,4889],[971,972],[971,971],[1004,1005],[1004,1004],[1129,1130],[1129,1129],[1131,1132],[1131,1131],[12737,12761],"[isSearch, orderBy, order, loadMembers]",[12815,12824],[5091,5124],"[pageNum, isSearch, hasCondition, search, loadContents]"]