[{"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/reportWebVitals.ts":"1","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/commons/Header.tsx":"2","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/detail/Info.tsx":"3","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/index.tsx":"4","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/upload/Upload.tsx":"5","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/modules/fileList.ts":"6","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/App.tsx":"7","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/index.tsx":"8","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/modify/ModInfo.tsx":"9","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/login/Login.tsx":"10","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/modify/index.tsx":"11","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/modules/member.ts":"12"},{"size":425,"mtime":1612155094723,"results":"13","hashOfConfig":"14"},{"size":1605,"mtime":1612505804544,"results":"15","hashOfConfig":"14"},{"size":15215,"mtime":1613383347373,"results":"16","hashOfConfig":"14"},{"size":500,"mtime":1612155094723,"results":"17","hashOfConfig":"14"},{"size":15109,"mtime":1613347339104,"results":"18","hashOfConfig":"14"},{"size":1018,"mtime":1612316348756,"results":"19","hashOfConfig":"14"},{"size":711,"mtime":1612402205486,"results":"20","hashOfConfig":"14"},{"size":1252,"mtime":1612759973715,"results":"21","hashOfConfig":"14"},{"size":15901,"mtime":1613371780673,"results":"22","hashOfConfig":"14"},{"size":5579,"mtime":1612920924654,"results":"23","hashOfConfig":"14"},{"size":474,"mtime":1613350145526,"results":"24","hashOfConfig":"14"},{"size":830,"mtime":1612239814673,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"b90rkt",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/reportWebVitals.ts",[],["53","54"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/commons/Header.tsx",[],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/detail/Info.tsx",["55","56","57","58","59","60","61","62","63"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/index.tsx",[],["64","65"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/upload/Upload.tsx",["66","67","68","69","70","71","72"],"import React, { useState, FormEvent, useEffect } from 'react';\nimport axios from 'axios';\nimport styled from '@emotion/styled';\nimport DropZone from './DropZone';\nimport { useHistory } from 'react-router';\nimport arrayToTree from 'array-to-tree';\nimport { ExpandMore, ChevronRight } from '@material-ui/icons'\nimport { Button, CircularProgress, colors, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, makeStyles } from '@material-ui/core';\nimport { TreeItem, TreeView } from '@material-ui/lab';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../modules';\n//style \n\nlet DivWrapper = styled.div`\nwidth:100%;\nmargin: 0 auto;\npadding: 0px;\njustify-content: center;\nalign-items: center;\nbox-sizing: border-box;\n`;\n\nlet DivContainer = styled.div`\nwidth: 100%;\nmin-height: 100vh;\ndisplay:block;\n//flex-wrap: wrap;\nmargin-right: auto;\nmargin-left: auto;\npadding-left: 15px;\npadding-right: 15px;\npadding-top: 15px;\n// justify-content: center;\n// align-items: center;\n// padding: 15px;\nbackground: #ebeeef;\n`;\n\nlet DivTitleContainer = styled.div`\n// width:100%;\ndisplay:flex;\nmargin-bottom: 20px;\nborder-bottom: 1px solid #eaeaea;\n`;\n\nlet DivBox = styled.div`\nmax-width: 80%;\n// min-width: 670px;\nmargin: auto;\nbackground: #fff;\n// padding:10px;\n// overflow: hidden;\nposition: relative;\npadding: 20px;\nborder-radius: 3px;\nbox-shadow: rgba(0, 0, 0, 0.1) 0px 1px 2px;\n`;\n\nconst DivInputGroup = styled.div`\nwidth: 100%;\n  position: relative;\n  border-bottom: 1px solid #b2b2b2;\n  margin-bottom: 26px;\n`;\n\nconst DivTagGroup = styled.div`\nwidth:100%;\nposition:relative;\nmargin-bottom:26px;\ndisplay:block;\n`;\n\nconst SpanInputLabel = styled.span`\nfont-family: Poppins-Regular;\n  font-size: 15px;\n  color: #808080;\n  line-height: 1.2;\n  text-align: right;\n  position: absolute;\n  top: 14px;\n  left: -105px;\n  width: 80px;\n`;\nconst InputText = styled.input`\nfont-family: Poppins-Regular;\n  font-size: 15px;\n  color: #555555;\n  line-height: 1.2;\n  height: 45px;\n  display: block;\n  width: 100%;\n  background: transparent;\n  padding: 0 5px;\n  outline:none;\n  border:none;\n`;\nconst FormLogin = styled.form`\nwidth: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  padding: 43px 88px 93px 150px;\n`;\n\nconst SpanTag = styled.span`\ndisplay:inline-block;\nbackground:#4abdff;\nmargin-right:5px;\nmargin-top:2px;\nmargin-bottom:2px;\npadding:5px 7px 5px 7px;\nborder-radius:4px;\ncolor:#fff;\n`;\n\nconst SpanTimes = styled.span`\nmargin: 3px;\nmargin-left 5px;\nfont-weight: bolder;\ncolor:#fff;\n&:hover{\n    cursor:pointer;\n    color:#cccccc;\n}\n&:active{\n    color:#7a7a7a;\n}\n`;\n\n\n//style end\nconst Upload = () => {\n    const history = useHistory()\n    let sessionUser = sessionStorage.getItem(\"sessionUser\");\n    const user = useSelector((state: RootState) => state.member)\n    if (sessionUser) {\n        axios.defaults.headers.common['Authorization'] = 'Bearer ' + JSON.parse(sessionUser).token;\n    }\n    let [title, setTitle] = useState<string>();\n    let [currentInputTag, setCurrentInputTag] = useState<string>('');\n    let [tags, setTags] = useState<Array<string>>([]);\n    let [filesState, setFilesState] = useState<Array<File>>([]);\n    let [categories, setCategories] = useState([]);\n    let [selectedCategory, setSelectedCategory] = useState<string>();\n    let [categoriesHavingChild, setCategoriesHavingChild] = useState<Array<string>>();\n    let [isTagDuplicated, setIsTagDuplicated] = useState<boolean>(false);\n    let [alertOpen, setAlertOpen] = useState<boolean>(false);\n\n    const CHUNK_SIZE: number = 1024 * 1024 * 10;//10MB\n\n    useEffect(() => {\n        sessionUser = sessionStorage.getItem(\"sessionUser\");\n        if (sessionUser) {\n            axios.defaults.headers.common['Authorization'] = 'Bearer ' + JSON.parse(sessionUser).token;\n        }\n        axios.get(`/api/category/list`)\n            .then(response => {\n                setCategories(arrayToTree(response.data.result, { parentProperty: 'categoryParent', customID: 'categoryId' }))\n            })\n        console.log(user)\n    }, [user])\n    useEffect(() => {\n        let tempArray: Array<string> = [];\n        async function getParents(array: Array<TreeViews>) {\n            await array.map((node: TreeViews) => {\n                if (node.children) {\n                    tempArray.push(node.categoryId + '');\n                    getParents(node.children);\n                }\n            });\n            setCategoriesHavingChild(tempArray)\n        };\n        getParents(categories);\n    }, [categories])\n    interface TreeViews {\n        children?: TreeViews[];\n        categoryName: string;\n        categoryId: string;\n    }\n\n    interface CategoryProps {\n        category: TreeViews\n    }\n\n    const renderTrees = (nodes: TreeViews) => (\n        <TreeItem key={nodes.categoryId} nodeId={nodes.categoryId + ''} label={nodes.categoryName} classes={{ label: classes.label }}>\n            {Array.isArray(nodes.children) ? nodes.children.map((node) => renderTrees(node)) : null}\n        </TreeItem>\n    );\n\n    const Category = ({ category }: CategoryProps) => {\n        useEffect(() => {\n\n        }, [category]);\n        return renderTrees(category);\n    }\n\n    const handleToggle = (event: any, nodeIds: string[]) => {\n        event.preventDefault()\n    };\n    const handleNodeSelect = (event: any, nodeId: React.SetStateAction<string>) => {\n        setSelectedCategory(nodeId)\n    };\n\n    const handleAlertOpen = () => {\n        setAlertOpen(true)\n    }\n    const handleAlertClose = () => {\n        setAlertOpen(false)\n    }\n\n    const fileUpload = (seq: number) => {\n        filesState.forEach(async (item, i) => {\n            if (item.size > CHUNK_SIZE) {\n                const chunks = fileSlicer(item)\n                let data = {\n                    \"assetSeq\": seq,\n                    \"assetOriginName\": item.name,\n                    \"assetSize\": item.size,\n                    \"assetUuidName\": '',\n                    \"isLastChunk\": false,\n                    \"location\": '',\n                    \"assetType\": item.type,\n                    \"category\": selectedCategory\n                }\n                const result = await axios.post(`/api/prelargefile`,\n                    data\n                )\n                data[\"assetUuidName\"] = result.data.result.assetUuidName;\n                data[\"location\"] = result.data.result.location;\n                for (let i = 0; i < chunks.length; i++) {\n                    if ((i + 1) === chunks.length) {\n                        data[\"isLastChunk\"] = true;\n                    }\n                    try {\n                        console.log(data.isLastChunk)\n                        const result = await axios.post(`/api/largefile`,\n                            chunks[i],\n                            {\n                                params: data,\n                                headers: { 'Content-Type': 'multipart/form-data' }\n                            }\n                        )\n                    } catch (err) {\n                        console.log(err);\n                    }\n                }\n            } else {\n                try {\n                    const formData = new FormData();\n                    formData.append(\"file\", item);\n                    formData.append(\"assetSeq\", '' + seq);\n                    formData.append(\"assetType\", item.type);\n                    formData.append(\"category\", selectedCategory)\n                    await axios.post(`/api/file`,\n                        formData\n                    )\n\n                }\n                catch (err) {\n\n                }\n            }\n            if (i === filesState.length - 1) {\n                await fileUploadComplete(seq)\n            }\n        })\n\n    }\n    const fileUploadComplete = async (seq: number) => {\n        try {\n            await axios.post(`/api/complete`,\n                { assetSeq: seq, tags: tags.toString() },\n                {\n                    headers: {\n                        'Content-type': 'application/json',\n                        'Access-Control-Allow-Origin': '*'\n                    }\n                })\n            setFilesState([]);\n\n            history.push('/')\n        } catch (err) {\n            console.log(err)\n        }\n\n    }\n\n    const submitFiles = async (e: FormEvent) => {\n        e.preventDefault();\n        if (filesState.length!=0 && title && selectedCategory) {\n            let data = { assetTitle: title, assetCategory:selectedCategory }\n            try {\n                const response = await axios.post(`/api/asset`,\n                    data,\n                    {\n                        headers: {\n                            'Content-type': 'application/json',\n                            'Access-Control-Allow-Origin': '*'\n                        }\n                    });\n                // setAssetSeq();\n                fileUpload(response.data.result.assetSeq);\n            }\n            catch (err) {\n                console.log(err);\n            }\n        } else {\n            handleAlertOpen();\n        }\n    }\n\n    const addTag = (e: React.KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === \"Enter\" || e.key === \"Tab\") {\n            e.preventDefault();\n            let inputTag = currentInputTag.trim();\n            if (inputTag !== \"\") {\n                if (tags.filter(tag => tag === inputTag).length <= 0) {\n                    setIsTagDuplicated(false);\n                    let tmp: Array<string> = [...tags].concat(currentInputTag);\n                    setTags(tmp);\n                } else {\n                    setIsTagDuplicated(true)\n                }\n            }\n            setCurrentInputTag('');\n        }\n    }\n\n    const removeTag = (targetTag: string) => {\n        const targetTagIndex = tags.findIndex(e => e === targetTag);\n        tags.splice(targetTagIndex, 1);\n        setTags([...tags]);\n    }\n\n    // 파일을 청크로 나누는 함수\n    const fileSlicer = (target: File) => {\n        let chunks = [];\n        let chunkIndex = 0; // 파일 자를 시작 위치\n        const CHUNK_COUNT = Math.ceil(target.size / CHUNK_SIZE);//청크갯수\n        for (let i = 1; i <= CHUNK_COUNT; i++) {\n            if (i === CHUNK_COUNT)\n                chunks.push(target.slice(chunkIndex))\n            else\n                chunks.push(target.slice(chunkIndex, chunkIndex + CHUNK_SIZE))\n            chunkIndex += CHUNK_SIZE;\n        }\n        return chunks\n    }\n    const useStyles = makeStyles({\n        root: {\n            height: 240,\n            flexGrow: 1,\n            maxWidth: 400,\n            display: 'contents',\n        },\n        label: {\n            textAlign: 'left'\n        },\n    });\n    const classes = useStyles();\n    return (\n        <>\n\n            <DivWrapper>\n                <DivContainer>\n                    <DivBox>\n                        <DivTitleContainer>\n                            <h2 className=\"h3 mb-2 text-gray-800\">업로드</h2>\n                        </DivTitleContainer>\n                        <FormLogin\n                        // onSubmit={submitFiles}\n                        >\n                            <DivInputGroup>\n                                <SpanInputLabel>제목</SpanInputLabel>\n                                <InputText type=\"text\" value={title} onChange={(e) => { setTitle(e.target.value) }} className=\"logininput\" />\n                            </DivInputGroup>\n                            \n                                <DivInputGroup>\n                                    <SpanInputLabel>카테고리</SpanInputLabel>\n                                    {categories.length > 0 ? (\n                                    <TreeView\n                                        onNodeToggle={handleToggle}\n                                        onNodeSelect={handleNodeSelect}\n                                        className={classes.root}\n                                        // defaultCollapseIcon={<ExpandMore />}\n                                        // defaultExpandIcon={<ChevronRight />}\n                                        expanded={categoriesHavingChild}\n                                    >\n                                        <div>\n                                            {categories.map((category: TreeViews) => {\n                                                return <Category key={category.categoryId} category={category} />\n                                            })}\n                                        </div>\n                                    </TreeView>\n                                    ):\n                                    ( <CircularProgress />)\n                                }\n                                </DivInputGroup>\n\n                            \n                            <DivInputGroup>\n                                <SpanInputLabel>태그</SpanInputLabel>\n                                <InputText type=\"text\" value={currentInputTag} onChange={(e) => { setCurrentInputTag(e.target.value) }} onKeyPress={(e) => { addTag(e) }} placeholder=\"태그 입력 후 엔터\" />\n                            </DivInputGroup>\n                            <DivTagGroup>\n                                {\n                                    isTagDuplicated ?\n                                        <div style={{ color: 'red' }}>\n                                            중복된 태그입니다.\n                                    </div> : null\n                                }\n\n                                {tags.map((data, i) =>\n                                    <SpanTag key={i}>{data}<SpanTimes onClick={() => { removeTag(data) }}>×</SpanTimes></SpanTag>\n                                )}\n                            </DivTagGroup>\n                            <DivInputGroup>\n                                <DropZone filesState={filesState} setFilesState={setFilesState} />\n                            </DivInputGroup>\n                            <DivTagGroup>\n                                <button onClick={submitFiles}>저장</button>\n                                <button type=\"reset\">취소</button>\n                            </DivTagGroup>\n\n                        </FormLogin>\n                    </DivBox>\n                </DivContainer>\n            </DivWrapper>\n\n            <Dialog\n                open={alertOpen}\n                onClose={handleAlertClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">{\"입력정보를 확인해주세요\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        (제목, 카테고리, 파일첨부는 필수요소 입니다.)\n          </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleAlertClose} color=\"primary\">\n                        확인\n          </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n}\n\nexport default Upload;","/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/modules/fileList.ts",[],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/App.tsx",[],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/index.tsx",["73","74"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/modify/ModInfo.tsx",["75","76","77","78","79","80","81"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/login/Login.tsx",["82","83","84","85"],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/components/modify/index.tsx",[],"/Users/ujaelam/Documents/Mission2/project/Mission2/frontend2/src/modules/member.ts",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":6,"column":5,"nodeType":"92","messageId":"93","endLine":6,"endColumn":10},{"ruleId":"90","severity":1,"message":"94","line":13,"column":5,"nodeType":"92","messageId":"93","endLine":13,"endColumn":13},{"ruleId":"90","severity":1,"message":"95","line":14,"column":5,"nodeType":"92","messageId":"93","endLine":14,"endColumn":17},{"ruleId":"90","severity":1,"message":"96","line":30,"column":10,"nodeType":"92","messageId":"93","endLine":30,"endColumn":20},{"ruleId":"90","severity":1,"message":"97","line":30,"column":46,"nodeType":"92","messageId":"93","endLine":30,"endColumn":53},{"ruleId":"90","severity":1,"message":"98","line":39,"column":10,"nodeType":"92","messageId":"93","endLine":39,"endColumn":18},{"ruleId":"99","severity":1,"message":"100","line":117,"column":8,"nodeType":"101","endLine":117,"endColumn":18,"suggestions":"102"},{"ruleId":"103","severity":1,"message":"104","line":122,"column":36,"nodeType":"105","messageId":"106","endLine":122,"endColumn":38},{"ruleId":"103","severity":1,"message":"107","line":123,"column":44,"nodeType":"105","messageId":"106","endLine":123,"endColumn":46},{"ruleId":"86","replacedBy":"108"},{"ruleId":"88","replacedBy":"109"},{"ruleId":"90","severity":1,"message":"110","line":7,"column":10,"nodeType":"92","messageId":"93","endLine":7,"endColumn":20},{"ruleId":"90","severity":1,"message":"111","line":7,"column":22,"nodeType":"92","messageId":"93","endLine":7,"endColumn":34},{"ruleId":"90","severity":1,"message":"112","line":8,"column":36,"nodeType":"92","messageId":"93","endLine":8,"endColumn":42},{"ruleId":"99","severity":1,"message":"113","line":152,"column":23,"nodeType":"114","endLine":152,"endColumn":60},{"ruleId":"115","severity":1,"message":"116","line":165,"column":47,"nodeType":"117","messageId":"118","endLine":165,"endColumn":49},{"ruleId":"90","severity":1,"message":"119","line":237,"column":31,"nodeType":"92","messageId":"93","endLine":237,"endColumn":37},{"ruleId":"103","severity":1,"message":"107","line":291,"column":30,"nodeType":"105","messageId":"106","endLine":291,"endColumn":32},{"ruleId":"90","severity":1,"message":"120","line":3,"column":19,"nodeType":"92","messageId":"93","endLine":3,"endColumn":27},{"ruleId":"99","severity":1,"message":"121","line":20,"column":8,"nodeType":"101","endLine":20,"endColumn":14,"suggestions":"122"},{"ruleId":"90","severity":1,"message":"110","line":6,"column":10,"nodeType":"92","messageId":"93","endLine":6,"endColumn":20},{"ruleId":"90","severity":1,"message":"111","line":6,"column":22,"nodeType":"92","messageId":"93","endLine":6,"endColumn":34},{"ruleId":"90","severity":1,"message":"97","line":6,"column":36,"nodeType":"92","messageId":"93","endLine":6,"endColumn":43},{"ruleId":"90","severity":1,"message":"112","line":7,"column":36,"nodeType":"92","messageId":"93","endLine":7,"endColumn":42},{"ruleId":"99","severity":1,"message":"113","line":159,"column":23,"nodeType":"114","endLine":159,"endColumn":60},{"ruleId":"115","severity":1,"message":"116","line":185,"column":47,"nodeType":"117","messageId":"118","endLine":185,"endColumn":49},{"ruleId":"90","severity":1,"message":"123","line":250,"column":11,"nodeType":"92","messageId":"93","endLine":250,"endColumn":26},{"ruleId":"90","severity":1,"message":"124","line":2,"column":23,"nodeType":"92","messageId":"93","endLine":2,"endColumn":34},{"ruleId":"90","severity":1,"message":"125","line":5,"column":8,"nodeType":"92","messageId":"93","endLine":5,"endColumn":14},{"ruleId":"90","severity":1,"message":"126","line":6,"column":10,"nodeType":"92","messageId":"93","endLine":6,"endColumn":19},{"ruleId":"90","severity":1,"message":"127","line":126,"column":7,"nodeType":"92","messageId":"93","endLine":126,"endColumn":21},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"@typescript-eslint/no-unused-vars","'Paper' is defined but never used.","Identifier","unusedVar","'GridList' is defined but never used.","'GridListTile' is defined but never used.","'StarBorder' is defined but never used.","'Comment' is defined but never used.","'promises' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'findParent'. Either include it or remove the dependency array.","ArrayExpression",["130"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.",["128"],["129"],"'ExpandMore' is defined but never used.","'ChevronRight' is defined but never used.","'colors' is defined but never used.","Assignments to the 'sessionUser' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'result' is assigned a value but never used.","'Provider' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["131"],"'handleAlertOpen' is assigned a value but never used.","'useSelector' is defined but never used.","'member' is defined but never used.","'RootState' is defined but never used.","'SpanLoginFocus' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},"Update the dependencies array to be: [assetSeq, findParent]",{"range":"136","text":"137"},"Update the dependencies array to be: [dispatch, user]",{"range":"138","text":"139"},[3001,3011],"[assetSeq, findParent]",[763,769],"[dispatch, user]"]