{"version":3,"sources":["modules/member.ts","modules/fileList.ts","modules/index.ts","components/login/Login.tsx","components/upload/DropZone.tsx","components/upload/Upload.tsx","components/main/Posts.tsx","components/main/index.tsx","components/detail/Info.tsx","components/detail/index.tsx","components/modify/ModInfo.tsx","components/modify/index.tsx","components/commons/SearchWindow.tsx","components/commons/SideHeader.tsx","components/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Login","Logout","login","user","type","initialState","userId","isLogined","member","state","action","ADD","REMOVE","RESET","fileList","file","tempFileList","splice","index","rootReducer","combineReducers","DivWrapper","styled","div","DivLoginContainer","DivLoginBox","DivLoginTitle","SpanLoginTitle","span","FormLogin","form","DivLoginGroup","SpanLoginLabel","InputLogin","input","DivButtonWrapper","ButtonLogin","button","history","useHistory","useState","username","setUsername","password","setPassword","isLoginSuccess","setIsLoginSuccess","dispatch","useDispatch","handleLoginButton","e","a","preventDefault","axios","post","headers","response","push","sessionStorage","setItem","JSON","stringify","data","onSubmit","className","value","onChange","target","style","color","onClick","DivContainer","DivDropConatiner","p","DivUploadIcon","DivDropMessage","DivFileDisplay","DivFileStatus","DivFileType","SpanFileName","SpanFileSize","SpanFileRemove","InputFileinput","DropZone","props","filesState","setFileList","setFilesState","handleFiles","files","i","filter","name","length","pre","fileSize","size","Math","floor","log","parseFloat","pow","toFixed","fileInputRef","useRef","id","onDrop","dataTransfer","onDragLeave","onDragOver","onDragEnter","current","click","multiple","ref","map","fileName","substring","lastIndexOf","targetIndex","findIndex","removeFile","DivTitleContainer","DivBox","DivInputGroup","DivTagGroup","SpanInputLabel","InputText","SpanTag","SpanTimes","Upload","sessionUser","getItem","useSelector","defaults","common","parse","token","title","setTitle","currentInputTag","setCurrentInputTag","tags","setTags","categories","setCategories","selectedCategory","setSelectedCategory","categoriesHavingChild","setCategoriesHavingChild","isTagDuplicated","setIsTagDuplicated","alertOpen","setAlertOpen","uploadOpen","setUploadOpen","progresses","setProgresses","newProgresses","setNewProgresses","CHUNK_SIZE","useEffect","get","then","arrayToTree","result","parentProperty","customID","tempArray","getParents","array","node","children","categoryId","Array","fill","renderTrees","nodes","TreeItem","nodeId","label","categoryName","classes","isArray","Category","category","handleAlertClose","fileUpload","seq","chunks","fileSlicer","assetUuidName","location","round","params","console","formData","FormData","append","onUploadProgress","ProgressEvent","percentage","loaded","total","fileUploadComplete","assetSeq","toString","submitFiles","assetTitle","assetCategory","chunkIndex","CHUNK_COUNT","ceil","slice","makeStyles","root","height","flexGrow","maxWidth","display","textAlign","useStyles","TreeView","onNodeToggle","event","nodeIds","onNodeSelect","expanded","CircularProgress","onKeyPress","key","inputTag","trim","tag","tmp","concat","addTag","placeholder","targetTag","targetTagIndex","removeTag","Button","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","List","mapIndex","ListItem","alignItems","ListItemText","primary","secondary","Fragment","Box","width","mr","LinearProgress","variant","minWidth","Typography","gridList","imageCountLessEqualTwo","imageCountOverTwo","ul","justifyContent","padding","Posts","contents","setContents","pageNum","setPageNum","pageInfo","setPageInfo","list","reference","loadContents","Grid","container","spacing","justify","item","Card","GridList","assetFiles","assetFile","imgUrl","assetType","assetLocation","includes","locationArray","GridListTile","cols","src","alt","to","GridListTileBar","CardContent","gutterBottom","component","align","moment","assetCreateDate","format","assetCategoryName","assetOwnerName","CardActions","Pagination","hideNextButton","next","hidePrevButton","prev","count","endPage","page","shape","Main","match","fontSize","nested","paddingLeft","Info","isOpen","setIsOpen","assetInfo","setAssetInfo","parentCategory","setParentCategory","checked","setChecked","deleteOpen","setDeleteOpen","downloadOpen","setDownloadOpen","findParent","pStr","forEach","element","categoryParent","handleDeleteClose","handleSingleDownload","fileLocation","fileOriginName","responseType","fileDownload","handleDownloadClose","marginTop","xs","autoPlay","animation","indicators","navButtonsAlwaysVisible","CardMedia","maxHeight","controls","Divider","orientation","flexItem","Table","aria-label","TableRow","TableCell","assetUpdateDate","assetChanger","assetChangerName","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","disablePadding","labelId","role","undefined","dense","assetOriginName","currentIndex","indexOf","newChecked","ListItemSecondaryAction","IconButton","edge","GetApp","delete","assetOwner","Detail","ModInfo","fileDeleteAlertOpen","setFileDeleteAlertOpen","deleteTargetFileIndex","setDeleteTargetFileIndex","split","handleFileDeleteAlertClose","handleFileDeleteAlertOpen","defaultSelected","assetTag","Delete","put","goBack","Modify","SearchWindow","pContents","setSearchWindowOpen","drawerWidth","theme","createStyles","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","contentShift","linkButton","useStylesForSearch","flex","iconButton","divider","margin","SideHeader","treeClasses","useTreeStyles","searchClasses","useTheme","React","setOpen","checkedTags","setCheckedTags","keyword","setKeyword","amount","isSearch","setIsSearch","searchWindowOpen","search","window","onpopstate","categoryList","findChild","parseStringToNumber","setData","handleNodeSelect","handleSearchReset","CssBaseline","AppBar","position","clsx","Toolbar","Search","noWrap","text","Drawer","anchor","paper","direction","Paper","InputBase","searchInputKeyPress","Clear","overflow","ListItemIcon","Checkbox","tabIndex","disableRipple","connect","exact","path","App","store","createStore","getState","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79c1e0ee.chunk.js","sourcesContent":["/**\n * 회원정보 관련 액션\n */\nconst Login = 'member/Login' as const;\nconst Logout = 'member/Logout' as const;\n\n/**\n * 회원정보 액션 생성 함수\n */\nexport const login = (user: User) => ({ type: Login, user })\nexport const logout = () => ({type:Logout})\n/**\n * 타입 정의\n */\ntype User = {\n    userId: string,\n    isLogined: boolean\n}\n\ntype LoginAction = \n    | ReturnType<typeof login>\n    | ReturnType<typeof logout>\n\n/**\n * 회원정보 초기값\n */\nconst initialState: User = {\n    userId: '',\n    isLogined: false\n}\n\nfunction member(\n    state: User = initialState,\n    action: LoginAction\n): User {\n    switch(action.type){\n        case Login:\n            return action.user;\n        case Logout:\n            return initialState;\n        default :\n            return state;\n    }\n}\n\nexport default member;","/**\n * 파일 관련 액션\n */\nconst ADD = 'uploadFile/FileAdd' as const;\nconst REMOVE = 'uploadFile/FileRemove' as const;\nconst RESET = 'uploadFile/FileReset' as const;\n\n/**\n * 파일 액션 생성 함수\n */\nexport const add = (file:File) => ({ type: ADD, file })\nexport const remove = (index:number) => ({type:REMOVE, index})\nexport const reset = () => ({type:RESET})\n/**\n * 타입 정의\n */\n\ntype FileAction = \n    | ReturnType<typeof add>\n    | ReturnType<typeof remove>\n    | ReturnType<typeof reset>\n\n/**\n * 파일 초기값\n */\nconst initialState:File[] = []\n\nfunction fileList(\n    state = initialState,\n    action: FileAction\n): File[] {\n    switch(action.type){\n        case ADD:\n            return [...state, action.file];\n        case REMOVE:\n            let tempFileList:File[] = [...state]\n            tempFileList.splice(action.index,1)\n            return tempFileList;\n        case RESET:\n            return initialState;\n        default :\n            return state;\n    }\n}\n\nexport default fileList;","import {combineReducers} from 'redux';\nimport member from './member'\nimport fileList from './fileList';\n\nconst rootReducer = combineReducers({\n    member,\n    fileList\n});\n\nexport default rootReducer;\n\nexport type RootState = ReturnType<typeof rootReducer>;","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport axios from 'axios';\nimport styled from '@emotion/styled'\nimport member, { login } from '../../modules/member';\nimport { RootState } from '../../modules';\nimport { useHistory } from 'react-router';\n\n\nlet DivWrapper = styled.div`\nwidth:100%;\nmargin: 0 auto;\npadding: 0px;\nbox-sizing: border-box;\n`;\n\nlet DivLoginContainer = styled.div`\nwidth: 100%;\n  min-height: 100vh;\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  padding: 15px;\n  background: #ebeeef;\n`;\n\nlet DivLoginBox = styled.div`\nwidth: 670px;\nbackground: #fff;\nborder-radius: 10px;\noverflow: hidden;\nposition: relative;\nbox-shadow: 0 30px 60px 0 rgba(0, 0, 0, 0.3);\n`;\nlet DivLoginTitle = styled.div`\n&:first-child{width: 100%;\nposition: relative;\nz-index: 1;\ndisplay: -webkit-box;\ndisplay: -webkit-flex;\ndisplay: -moz-box;\ndisplay: -ms-flexbox;\ndisplay: flex;\nflex-wrap: wrap;\nflex-direction: column;\nalign-items: center;\n\nbackground-repeat: no-repeat;\nbackground-size: cover;\nbackground-position: center;\n\npadding: 70px 15px 74px 15px;\n\n&:before{\n    content: \"\";\n    display: block;\n    position: absolute;\n    z-index: -1;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    background-color: rgba(54,84,99,0.7);\n}    \n}\n`;\n\nlet SpanLoginTitle = styled.span`\nfont-family: Poppins-Bold;\nfont-size: 30px;\ncolor: #fff;\ntext-transform: uppercase;\nline-height: 1.2;\ntext-align: center;\n`;\n\nconst FormLogin = styled.form`\nwidth: 100%;\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  padding: 43px 88px 93px 190px;\n  box-sizing:border-box;\n`;\n\nconst DivLoginGroup = styled.div`\nwidth: 100%;\n  position: relative;\n  border-bottom: 1px solid #b2b2b2;\n  margin-bottom: 26px;\n`;\n\nconst SpanLoginLabel = styled.span`\nfont-family: Poppins-Regular;\n  font-size: 15px;\n  color: #808080;\n  line-height: 1.2;\n  text-align: right;\n  position: absolute;\n  top: 14px;\n  left: -105px;\n  width: 80px;\n`;\nconst InputLogin = styled.input`\nfont-family: Poppins-Regular;\n  font-size: 15px;\n  color: #555555;\n  line-height: 1.2;\n  height: 45px;\n  display: block;\n  width: 100%;\n  background: transparent;\n  padding: 0 5px;\n  outline:none;\n  border:none;\n`;\n\nconst SpanLoginFocus = styled.span`\n&:first-child{position: absolute;\n  display: block;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  pointer-events: none;\n  &:before{\n    content: \"\";\n    display: block;\n    position: absolute;\n    bottom: -1px;\n    left: 0;\n    width:0;\n    height: 2px;\n    transition: all 0.6s;\n    background: #57b846;\n  }\n  ${InputLogin}:focus + &:before{\n    width: 100%;\n  }\n}\n`;\n\nconst DivButtonWrapper = styled.div`\nwidth: 100%;\ndisplay: -webkit-box;\ndisplay: -webkit-flex;\ndisplay: -moz-box;\ndisplay: -ms-flexbox;\ndisplay: flex;\nflex-wrap: wrap;\n`;\n\nconst ButtonLogin = styled.button`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding: 0 20px;\nmin-width: 160px;\nheight: 50px;\nbackground-color: #57b846;\nborder-radius: 25px;\n\nfont-family: Poppins-Regular;\nfont-size: 16px;\ncolor: #fff;\n// line-height: 1.2;\n\ntransition: all 0.4s;\n&:hover{\n    background-color: #555555;\n    cursor:pointer;\n}&:active{\n    background-color: #222222;\n}\n`;\n\n\n//style end\n\nfunction Login() {\n  const history = useHistory();\n  let [username, setUsername] = useState(\"\");\n  let [password, setPassword] = useState(\"\");\n  let [isLoginSuccess,setIsLoginSuccess]=useState(true);\n  const dispatch = useDispatch();\n  async function handleLoginButton(e: any) {\n    e.preventDefault();\n    try {\n      const response = await axios.post(`/api/authenticate`,\n        { username: username, password: password },\n        {\n          headers: {\n            'Content-type': 'application/json',\n            'Access-Control-Allow-Origin': '*'\n          }\n        });\n      history.push(\"/\");\n      dispatch(login({userId:'', isLogined:true}))\n      sessionStorage.setItem(\"sessionUser\", JSON.stringify(response.data));\n    } catch (err) {\n      setIsLoginSuccess(false)\n    }\n  }\n\n  return (\n    <div>\n      <DivWrapper>\n        <DivLoginContainer>\n          <DivLoginBox>\n            <DivLoginTitle>\n              <SpanLoginTitle>로그인</SpanLoginTitle>\n            </DivLoginTitle>\n            <FormLogin onSubmit={handleLoginButton}>\n              <DivLoginGroup>\n                <SpanLoginLabel>아이디</SpanLoginLabel>\n                <InputLogin type=\"text\" className=\"logininput\" value={username} onChange={e => setUsername(e.target.value)} />\n                {/* <SpanLoginFocus></SpanLoginFocus>  */}\n              </DivLoginGroup>\n              <DivLoginGroup>\n                <SpanLoginLabel>비밀번호</SpanLoginLabel>\n                <InputLogin type=\"password\" className=\"logininput\" value={password} onChange={e => setPassword(e.target.value)} />\n                {/* <SpanLoginFocus></SpanLoginFocus>  */}\n              </DivLoginGroup>\n                {!isLoginSuccess ? \n                  <div style={{color:'red'}}>\n                    로그인에 실패했습니다.\n                  </div> :\n                  null\n                }\n              <DivButtonWrapper>\n                <ButtonLogin onClick={handleLoginButton}>로그인</ButtonLogin>\n              </DivButtonWrapper>\n            </FormLogin>\n          </DivLoginBox>\n        </DivLoginContainer>\n      </DivWrapper>\n    </div>\n  );\n}\n\nexport default Login;","import React, { forwardRef, useState, useEffect, useRef, InputHTMLAttributes } from 'react';\nimport styled from '@emotion/styled';\nimport { RootState } from '../../modules';\nimport { add, remove } from '../../modules/fileList';\nimport { preProcessFile } from 'typescript';\n\nconst DivContainer = styled.div`\n`;\n\nconst PContainer = styled.p`\ncolor: red;\ntext-align: center;\n`;\n\nconst DivDropConatiner = styled.div`\n// display: flex;\nalign-items: center;\njustify-content: center;\nmargin: 0;\n// width: 800px;\nheight: 200px;\nborder: 4px dashed #4aa1f3;\n`;\n\nconst DivUploadIcon = styled.div`\nwidth: 50px;\nheight: 50px;\nbackground: url(/images/upload.svg) no-repeat center center; \nbackground-size: 100%;\ntext-align: center;\nmargin: 0 auto;\nmargin-top: 20px;\npadding-top: 30px;\n`;\n\nconst DivDropMessage = styled.div`\ntext-align: center;\ncolor: #4aa1f3;\nfont-family: Arial;\nfont-size: 20px;\n`;\n\nconst DivFileDisplay = styled.div`\n// position: fixed;\n// width: 805px;\n`;\n\nconst DivFileStatus = styled.div`\ndisplay:flex;\nwidth: 100%;\nvertical-align:top;\nmargin-top: 10px;\nmargin-bottom: 20px;\nposition: relative;\nline-height: 50px;\nheight: 50px;\n\n> div{\n    overflow:hidden;\n}\n`;\n\nconst DivFileType = styled.div`\ndisplay: inline-block!important;\nposition: absolute;\nfont-size: 12px;\nfont-weight: 700;\nline-height: 13px;\nmargin-top: 25px;\npadding: 0 4px;\nborder-radius: 2px;\nbox-shadow: 1px 1px 2px #abc;\ncolor: #fff;\nbackground: #0080c8;\ntext-transform: uppercase;\n`;\n\nconst SpanFileName = styled.span`\ndisplay: inline-block;\nvertical-align:top;\nmargin-left: 50px;\ncolor: #4aa1f3;\n`;\n\nconst SpanFileSize = styled.span`\ndisplay:inline-block;\nvertical-align:top;\ncolor:#30693D;\nmargin-left:10px;\nmargin-right:5px;\nmargin-left: 10px;\ncolor: #444242;\nfont-weight: 700;\nfont-size: 14px;\n`;\n\nconst SpanFileRemove = styled.span`\nposition: absolute;\ntop: 20px;\nright: 10px;\nline-height: 15px;\ncursor: pointer;\ncolor: red;\nmargin-right: -10px;\n`;\n\nconst SpanFileErrorMsg = styled.span`\ncolor:red;\n`;\n\nconst InputFileinput = styled.input`\ndisplay:none;\n`;\n\nconst DropZone = (props: any) => {\n    const fileList: File[] = props.filesState;\n    const setFileList = props.setFilesState;\n\n\n    const handleFiles = (files: FileList) => {\n        for (let i = 0; i < files.length; i++) {\n            if (fileList.filter((file: File) => file.name == files[i].name).length <= 0) {\n                setFileList((pre: File[]) => [...pre, files[i]]);\n            }\n        }\n    }\n\n    const dragOver = (e: React.DragEvent<HTMLDivElement>) => {\n        e.preventDefault();\n    }\n\n    const dragEnter = (e: React.DragEvent<HTMLDivElement>) => {\n        e.preventDefault();\n    }\n\n    const dragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n        e.preventDefault();\n    }\n\n    const fileDrop = (e: React.DragEvent<HTMLDivElement>) => {\n        e.preventDefault();\n        const files: FileList = e.dataTransfer.files;\n        if (files.length) {\n            handleFiles(files);\n        }\n    }\n\n    const fileSize = (size: number) => {\n        if (size === 0) return '0 Bytes';\n        const k = 1024;\n        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n        const i = Math.floor(Math.log(size) / Math.log(k));\n        return parseFloat((size / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n    }\n\n    const fileType = (fileName: string) => {\n        return fileName.substring(fileName.lastIndexOf('.') + 1, fileName.length) || fileName;\n    }\n\n    const removeFile = (name: string) => {\n        const targetIndex = fileList.findIndex((e: File) => e.name === name);\n        let tempFileList = [...fileList]\n        tempFileList.splice(targetIndex, 1)\n        setFileList(tempFileList)\n        // dispatch(remove(targetIndex))\n    }\n\n    const fileInputRef = useRef<HTMLInputElement>(null);\n    const fileInputClicked = () => {\n        fileInputRef.current.click();\n    }\n    const filesSelected = () => {\n        if (fileInputRef.current.files.length) {\n            handleFiles(fileInputRef.current.files);\n        }\n    }\n\n    return (\n        <DivContainer id=\"container\" onDrop={fileDrop} onDragLeave={dragLeave} onDragOver={dragOver} onDragEnter={dragEnter}>\n            <DivDropConatiner onClick={fileInputClicked}>\n                <DivDropMessage>\n                    <DivUploadIcon />\n                    파일을 드래그 & 드랍 하거나 클릭하여 업로드\n                </DivDropMessage>\n                <InputFileinput type=\"file\" multiple onChange={filesSelected} ref={fileInputRef} />\n            </DivDropConatiner>\n            <DivFileDisplay>\n                {fileList.map((data: File, i) =>\n                    <DivFileStatus key={i}>\n                        <div>\n                            <div className=\"file-type-logo\"></div>\n                            <DivFileType>{fileType(data.name)}</DivFileType>\n                            <SpanFileName >{data.name}</SpanFileName>\n                            <SpanFileSize>({fileSize(data.size)})</SpanFileSize>\n                            <SpanFileRemove onClick={() => removeFile(data.name)}>×</SpanFileRemove>\n                        </div>\n                    </DivFileStatus>\n                )}\n            </DivFileDisplay>\n        </DivContainer>\n    )\n}\n\nexport default DropZone;","import React, { useState, FormEvent, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport styled from '@emotion/styled';\nimport DropZone from './DropZone';\nimport { useHistory } from 'react-router';\nimport arrayToTree from 'array-to-tree';\nimport { ExpandMore, ChevronRight } from '@material-ui/icons'\nimport { Avatar, Box, Button, CircularProgress, colors, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Divider, LinearProgress, List, ListItem, ListItemAvatar, ListItemText, makeStyles, Typography } from '@material-ui/core';\nimport { TreeItem, TreeView } from '@material-ui/lab';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../modules';\n//style \n\nlet DivWrapper = styled.div`\nwidth:100%;\nmargin: 0 auto;\npadding: 0px;\njustify-content: center;\nalign-items: center;\nbox-sizing: border-box;\n`;\n\nlet DivContainer = styled.div`\nwidth: 100%;\nmin-height: 100vh;\ndisplay:block;\n//flex-wrap: wrap;\nmargin-right: auto;\nmargin-left: auto;\npadding-left: 15px;\npadding-right: 15px;\npadding-top: 15px;\n// justify-content: center;\n// align-items: center;\n// padding: 15px;\nbackground: #ebeeef;\n`;\n\nlet DivTitleContainer = styled.div`\n// width:100%;\ndisplay:flex;\nmargin-bottom: 20px;\nborder-bottom: 1px solid #eaeaea;\n`;\n\nlet DivBox = styled.div`\nmax-width: 80%;\n// min-width: 670px;\nmargin: auto;\nbackground: #fff;\n// padding:10px;\n// overflow: hidden;\nposition: relative;\npadding: 20px;\nborder-radius: 3px;\nbox-shadow: rgba(0, 0, 0, 0.1) 0px 1px 2px;\n`;\n\nconst DivInputGroup = styled.div`\nwidth: 100%;\n  position: relative;\n  border-bottom: 1px solid #b2b2b2;\n  margin-bottom: 26px;\n`;\n\nconst DivTagGroup = styled.div`\nwidth:100%;\nposition:relative;\nmargin-bottom:26px;\ndisplay:block;\n`;\n\nconst SpanInputLabel = styled.span`\nfont-family: Poppins-Regular;\n  font-size: 15px;\n  color: #808080;\n  line-height: 1.2;\n  text-align: right;\n  position: absolute;\n  top: 14px;\n  left: -105px;\n  width: 80px;\n`;\nconst InputText = styled.input`\nfont-family: Poppins-Regular;\n  font-size: 15px;\n  color: #555555;\n  line-height: 1.2;\n  height: 45px;\n  display: block;\n  width: 100%;\n  background: transparent;\n  padding: 0 5px;\n  outline:none;\n  border:none;\n`;\nconst FormLogin = styled.form`\nwidth: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  padding: 43px 88px 93px 150px;\n`;\n\nconst SpanTag = styled.span`\ndisplay:inline-block;\nbackground:#4abdff;\nmargin-right:5px;\nmargin-top:2px;\nmargin-bottom:2px;\npadding:5px 7px 5px 7px;\nborder-radius:4px;\ncolor:#fff;\n`;\n\nconst SpanTimes = styled.span`\nmargin: 3px;\nmargin-left 5px;\nfont-weight: bolder;\ncolor:#fff;\n&:hover{\n    cursor:pointer;\n    color:#cccccc;\n}\n&:active{\n    color:#7a7a7a;\n}\n`;\n\n\n//style end\nconst Upload = () => {\n    const history = useHistory()\n    let sessionUser = sessionStorage.getItem(\"sessionUser\");\n    const user = useSelector((state: RootState) => state.member)\n    if (sessionUser) {\n        axios.defaults.headers.common['Authorization'] = 'Bearer ' + JSON.parse(sessionUser).token;\n    }\n    let [title, setTitle] = useState<string>();\n    let [currentInputTag, setCurrentInputTag] = useState<string>('');\n    let [tags, setTags] = useState<Array<string>>([]);\n    let [filesState, setFilesState] = useState<Array<File>>([]);\n    let [categories, setCategories] = useState([]);\n    let [selectedCategory, setSelectedCategory] = useState<string>();\n    let [categoriesHavingChild, setCategoriesHavingChild] = useState<Array<string>>();\n    let [isTagDuplicated, setIsTagDuplicated] = useState<boolean>(false);\n    let [alertOpen, setAlertOpen] = useState<boolean>(false);\n    let [uploadOpen, setUploadOpen] = useState<boolean>(false);\n    let [progresses, setProgresses] = useState<Array<number>>([0]);\n    let [newProgresses, setNewProgresses] = useState<Array<number>>([0]);\n    const CHUNK_SIZE: number = 1024 * 1024 * 10;//10MB\n    let temp: number[]\n\n    useEffect(() => {\n        sessionUser = sessionStorage.getItem(\"sessionUser\");\n        if (sessionUser) {\n            axios.defaults.headers.common['Authorization'] = 'Bearer ' + JSON.parse(sessionUser).token;\n        }\n        axios.get(`/api/category/list`)\n            .then(response => {\n                setCategories(arrayToTree(response.data.result, { parentProperty: 'categoryParent', customID: 'categoryId' }))\n            })\n    }, [user])\n    useEffect(() => {\n        let tempArray: Array<string> = [];\n        async function getParents(array: Array<TreeViews>) {\n            await array.map((node: TreeViews) => {\n                if (node.children) {\n                    tempArray.push(node.categoryId + '');\n                    getParents(node.children);\n                }\n            });\n            setCategoriesHavingChild(tempArray)\n        };\n        getParents(categories);\n    }, [categories])\n\n    useEffect(() => {\n        setProgresses(pre => {\n            return new Array(filesState.length).fill(0)\n        })\n        setNewProgresses(pre => {\n            return new Array(filesState.length).fill(0)\n        })\n    }, [filesState])\n\n    interface TreeViews {\n        children?: TreeViews[];\n        categoryName: string;\n        categoryId: string;\n    }\n    interface CategoryProps {\n        category: TreeViews\n    }\n\n    const renderTrees = (nodes: TreeViews) => (\n        <TreeItem key={nodes.categoryId} nodeId={nodes.categoryId + ''} label={nodes.categoryName} classes={{ label: classes.label }}>\n            {Array.isArray(nodes.children) ? nodes.children.map((node) => renderTrees(node)) : null}\n        </TreeItem>\n    );\n\n    const Category = ({ category }: CategoryProps) => {\n        useEffect(() => {\n\n        }, [category]);\n        return renderTrees(category);\n    }\n\n    const handleToggle = (event: any, nodeIds: string[]) => {\n        event.preventDefault()\n    };\n    const handleNodeSelect = (event: any, nodeId: React.SetStateAction<string>) => {\n        setSelectedCategory(nodeId)\n    };\n\n    const handleAlertOpen = () => {\n        setAlertOpen(true)\n    }\n    const handleAlertClose = () => {\n        setAlertOpen(false)\n    }\n    const handlerUploadOpen = () => {\n        setUploadOpen(true);\n    }\n    const handlerUploadClose = () => {\n        setUploadOpen(false);\n    }\n    const fileUpload = (seq: number) => {\n        handlerUploadOpen();\n\n        (async function () {\n            for (let index = 0; index < filesState.length; index++) {\n                if (filesState[index].size > CHUNK_SIZE) {\n                    const chunks = fileSlicer(filesState[index])\n                    let data = {\n                        \"assetSeq\": seq,\n                        \"assetOriginName\": filesState[index].name,\n                        \"assetSize\": filesState[index].size,\n                        \"assetUuidName\": '',\n                        \"isLastChunk\": false,\n                        \"location\": '',\n                        \"assetType\": filesState[index].type,\n                        \"category\": selectedCategory\n                    }\n                    const result = await axios.post(`/api/prelargefile`,\n                        data\n                    )\n                    data[\"assetUuidName\"] = result.data.result.assetUuidName;\n                    data[\"location\"] = result.data.result.location;\n                    for (let i = 0; i < chunks.length; i++) {\n                        if ((i + 1) === chunks.length) {\n                            data[\"isLastChunk\"] = true;\n                        }\n                        try {\n                            setProgresses(pre => { pre[index] = Math.round(100 / chunks.length * i); return pre })\n                            setNewProgresses([...progresses])\n                            const result = await axios.post(`/api/largefile`,\n                                chunks[i],\n                                {\n                                    params: data,\n                                    headers: { 'Content-Type': 'multipart/form-data' }\n                                }\n                            )\n                        } catch (err) {\n                            console.log(err);\n                        }\n                    }\n                } else {\n                    try {\n                        const formData = new FormData();\n                        formData.append(\"file\", filesState[index]);\n                        formData.append(\"assetSeq\", '' + seq);\n                        formData.append(\"assetType\", filesState[index].type);\n                        formData.append(\"category\", selectedCategory)\n                        await axios.post(`/api/file`,\n                            formData,\n                            {\n                                onUploadProgress: ProgressEvent => {\n                                    const percentage = Math.round(\n                                        ProgressEvent.loaded * 100 / ProgressEvent.total\n                                    )\n                                    setProgresses(pre => { pre[index] = percentage; return pre })\n                                    setNewProgresses([...progresses])\n                                }\n                            }\n                        )\n\n                    }\n                    catch (err) {\n\n                    }\n                }\n                if (index === filesState.length - 1) {\n                    await fileUploadComplete(seq)\n                }\n            }\n            // }\n        })();\n    }\n   \n    const fileUploadComplete = async (seq: number) => {\n        try {\n            await axios.post(`/api/complete`,\n                { assetSeq: seq, tags: tags.toString() },\n                {\n                    headers: {\n                        'Content-type': 'application/json',\n                        'Access-Control-Allow-Origin': '*'\n                    }\n                })\n            setFilesState([]);\n\n            history.push('/')\n        } catch (err) {\n            console.log(err)\n        }\n\n    }\n\n    const submitFiles = async (e: FormEvent) => {\n        e.preventDefault();\n        if (filesState.length != 0 && title && selectedCategory) {\n            let data = { assetTitle: title, assetCategory: selectedCategory }\n            try {\n                const response = await axios.post(`/api/asset`,\n                    data,\n                    {\n                        headers: {\n                            'Content-type': 'application/json',\n                            'Access-Control-Allow-Origin': '*'\n                        }\n                    });\n                // setAssetSeq();\n\n                fileUpload(response.data.result.assetSeq);\n            }\n            catch (err) {\n                console.log(err);\n            }\n        } else {\n            handleAlertOpen();\n        }\n    }\n\n    const addTag = (e: React.KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === \"Enter\" || e.key === \"Tab\") {\n            e.preventDefault();\n            let inputTag = currentInputTag.trim();\n            if (inputTag !== \"\") {\n                if (tags.filter(tag => tag === inputTag).length <= 0) {\n                    setIsTagDuplicated(false);\n                    let tmp: Array<string> = [...tags].concat(currentInputTag);\n                    setTags(tmp);\n                } else {\n                    setIsTagDuplicated(true)\n                }\n            }\n            setCurrentInputTag('');\n        }\n    }\n\n    const removeTag = (targetTag: string) => {\n        const targetTagIndex = tags.findIndex(e => e === targetTag);\n        tags.splice(targetTagIndex, 1);\n        setTags([...tags]);\n    }\n\n    // 파일을 청크로 나누는 함수\n    const fileSlicer = (target: File) => {\n        let chunks = [];\n        let chunkIndex = 0; // 파일 자를 시작 위치\n        const CHUNK_COUNT = Math.ceil(target.size / CHUNK_SIZE);//청크갯수\n        for (let i = 1; i <= CHUNK_COUNT; i++) {\n            if (i === CHUNK_COUNT)\n                chunks.push(target.slice(chunkIndex))\n            else\n                chunks.push(target.slice(chunkIndex, chunkIndex + CHUNK_SIZE))\n            chunkIndex += CHUNK_SIZE;\n        }\n        return chunks\n    }\n    const useStyles = makeStyles({\n        root: {\n            height: 240,\n            flexGrow: 1,\n            maxWidth: 400,\n            display: 'contents',\n        },\n        label: {\n            textAlign: 'left'\n        },\n    });\n    const classes = useStyles();\n    return (\n        <>\n\n            <DivWrapper>\n                <DivContainer>\n                    <DivBox>\n                        <DivTitleContainer>\n                            <h2 className=\"h3 mb-2 text-gray-800\">업로드</h2>\n                        </DivTitleContainer>\n                        <FormLogin\n                        // onSubmit={submitFiles}\n                        >\n                            <DivInputGroup>\n                                <SpanInputLabel>제목</SpanInputLabel>\n                                <InputText type=\"text\" value={title} onChange={(e) => { setTitle(e.target.value) }} className=\"logininput\" />\n                            </DivInputGroup>\n\n                            <DivInputGroup>\n                                <SpanInputLabel>카테고리</SpanInputLabel>\n                                {categories.length > 0 ? (\n                                    <TreeView\n                                        onNodeToggle={handleToggle}\n                                        onNodeSelect={handleNodeSelect}\n                                        className={classes.root}\n                                        // defaultCollapseIcon={<ExpandMore />}\n                                        // defaultExpandIcon={<ChevronRight />}\n                                        expanded={categoriesHavingChild}\n                                    >\n                                        <div>\n                                            {categories.map((category: TreeViews) => {\n                                                return <Category key={category.categoryId} category={category} />\n                                            })}\n                                        </div>\n                                    </TreeView>\n                                ) :\n                                    (<CircularProgress />)\n                                }\n                            </DivInputGroup>\n\n\n                            <DivInputGroup>\n                                <SpanInputLabel>태그</SpanInputLabel>\n                                <InputText type=\"text\" value={currentInputTag} onChange={(e) => { setCurrentInputTag(e.target.value) }} onKeyPress={(e) => { addTag(e) }} placeholder=\"태그 입력 후 엔터\" />\n                            </DivInputGroup>\n                            <DivTagGroup>\n                                {\n                                    isTagDuplicated ?\n                                        <div style={{ color: 'red' }}>\n                                            중복된 태그입니다.\n                                    </div> : null\n                                }\n\n                                {tags.map((data, i) =>\n                                    <SpanTag key={i}>{data}<SpanTimes onClick={() => { removeTag(data) }}>×</SpanTimes></SpanTag>\n                                )}\n                            </DivTagGroup>\n                            <DivInputGroup>\n                                <DropZone filesState={filesState} setFilesState={setFilesState} />\n                            </DivInputGroup>\n                            <DivTagGroup>\n                                <Button size=\"large\" color=\"primary\" onClick={submitFiles}>저장</Button>\n                            </DivTagGroup>\n\n                        </FormLogin>\n                    </DivBox>\n                </DivContainer>\n            </DivWrapper>\n\n            <Dialog\n                open={alertOpen}\n                onClose={handleAlertClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">{\"입력정보를 확인해주세요\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        (제목, 카테고리, 파일첨부는 필수요소 입니다.)\n          </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleAlertClose} color=\"primary\">\n                        확인\n          </Button>\n                </DialogActions>\n            </Dialog>\n\n\n            <Dialog\n                open={uploadOpen}\n                // onClose={handlerUploadClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">{\"업로드\"}</DialogTitle>\n                <DialogContent>\n                    <List className={classes.root}>\n                        {filesState.map((file, mapIndex) =>\n                            <ListItem alignItems=\"flex-start\">\n                                <ListItemText\n                                    primary={file.name}\n                                    secondary={\n                                        <React.Fragment>\n                                            <Box display=\"flex\" alignItems=\"center\">\n                                                <Box width=\"100%\" mr={1}>\n                                                    <LinearProgress variant=\"determinate\" value={newProgresses[mapIndex]} />\n                                                </Box>\n                                                <Box minWidth={35}>\n                                                    <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(newProgresses[mapIndex])}%`}</Typography>\n                                                </Box>\n                                            </Box>\n                                        </React.Fragment>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n\n                    </List>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handlerUploadClose} color=\"primary\">\n                        창닫기\n                     </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n}\n\nexport default Upload;","import {\n  Grid,\n  Typography,\n  Card,\n  CardActions,\n  CardContent,\n  Button,\n  GridList,\n  GridListTile,\n  makeStyles,\n  GridListTileBar,\n  Paper,\n  Divider,\n  ButtonBase,\n  CircularProgress,\n\n} from '@material-ui/core'\nimport { OverridableComponent } from '@material-ui/core/OverridableComponent';\n\nimport { Pagination, PaginationItem, PaginationItemTypeMap } from '@material-ui/lab';\nimport axios from 'axios';\nimport moment from 'moment';\nimport React, { MutableRefObject, useEffect, useRef, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles(() => ({\n  gridList: {\n    width: 400,\n    height: 400,\n  },\n  imageCountLessEqualTwo: {\n    height: '100%!important'\n  },\n  imageCountOverTwo: {\n    height: '50%!important'\n  },\n  ul: {\n    justifyContent: 'center',\n    padding: 10,\n\n  }\n}))\n\ntype Asset = {\n  assetSeq: number,\n  assetOwner: string,\n  assetOwnerName: string,\n  assetTitle: string,\n  assetCreateDate: Date,\n  assetUpdateDate: Date,\n  locations: string,\n  assetFiles: Array<AssetFile>,\n  tags: string,\n  locationArray: Array<string>,\n  assetCategory: number,\n  assetCategoryName: string\n}\n\ntype Page = {\n  startPage: number,\n  endPage: number,\n  prev: false,\n  next: false,\n  total: number\n}\n\ntype AssetFile = {\n  assetLocation: string,\n  assetOriginName: string,\n  assetSeq: number,\n  assetSize: number,\n  assetType: string,\n}\n\ntype MatchParams = {\n  pageNum: string\n}\n\n\n\nconst Posts = (props: MatchParams) => {\n  let sessionUser = sessionStorage.getItem(\"sessionUser\");\n  if (sessionUser) {\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + JSON.parse(sessionUser).token;\n  }\n\n  const [contents, setContents] = useState<Array<Asset>>([]);\n  const [pageNum, setPageNum] = useState<number>(1);\n  const [pageInfo, setPageInfo] = useState<Page>();\n  const history = useHistory();\n  const toAssetDetail = (assetSeq: number) => {\n    history.push('/detail/' + assetSeq)\n  }\n\n\n  const classes = useStyles();\n  async function loadContents() {\n    sessionUser = sessionStorage.getItem(\"sessionUser\");\n    if (sessionUser) {\n      axios.defaults.headers.common['Authorization'] = 'Bearer ' + JSON.parse(sessionUser).token;\n    }\n    const response = await axios.get(`/api/list/${pageNum}`)\n    const list: Array<Asset> = response.data.result\n    setPageInfo(response.data.reference)\n    setContents(list)\n  };\n  useEffect(() => {\n    loadContents();\n  }, [pageNum]);\n  \n  return (\n    <div style={{\n      // marginTop: 20, \n      padding: 30\n    }}>\n      <Grid container spacing={3} justify=\"center\">\n        {contents ? contents.map(post => (\n          <Grid item key={post.assetSeq}>\n            <Card>\n              <GridList className={classes.gridList}>\n                {\n                  post.assetFiles.map((assetFile, i) => {\n                    let type = assetFile.assetType\n                    let location = assetFile.assetLocation\n                    let imgUrl;\n                    if (!type) {\n                      imgUrl = '/images/unsupportedFile.png'\n                    } else if (type.includes('image')) {\n                      imgUrl = `/uploadedImages/thumb${location.substring(location.lastIndexOf(\"/uploadedImages\") + 15)}`\n                    } else if (type.includes('video')) {\n                      imgUrl = '/images/videoFile.png'\n                    } else if (type.includes('audio')) {\n                      imgUrl = '/images/audioFile.png'\n                    } else {\n                      imgUrl = '/images/unsupportedFile.png'\n                    }\n                    return (\n                      (post.locationArray.length < 3) ?\n                        <GridListTile key={i} cols={(post.locationArray.length % 2 != 0 && i == 0) ? 2 : 1} classes={{ root: classes.imageCountLessEqualTwo }}>\n                          <img src={imgUrl} alt=\"\" />\n\n                        </GridListTile>\n                        :\n                        i <= 3 ?\n                          <GridListTile key={i} cols={(post.locationArray.length % 2 != 0 && i == 0 && post.locationArray.length <= 3) ? 2 : 1} classes={{ root: classes.imageCountOverTwo }}>\n                            <img src={imgUrl} alt=\"\" />\n                            {(post.locationArray.length > 4 && i == 3) ?\n                              <Link to={\"/detail/\" + assetFile.assetSeq} >\n                                <GridListTileBar title={post.locationArray.length - (i + 1) + '개 더보기'} classes={{ root: classes.imageCountLessEqualTwo }} />\n                              </Link>\n\n                              : null}\n                          </GridListTile> :\n                          null\n                    )\n                  })\n                }\n              </GridList>\n\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  {post.assetTitle}\n                </Typography>\n\n                <Typography align='right' component=\"p\" style={{ color: 'grey' }}>{moment(post.assetCreateDate).format('YYYY-MM-DD HH:mm:ss')}</Typography>\n                <Typography align='left' component=\"p\">카테고리 : {post.assetCategoryName}</Typography>\n                <Typography align='left' component=\"p\">작성자 : {post.assetOwnerName}</Typography>\n                <Typography align='left' component=\"p\">태그 : {post.tags}</Typography>\n              </CardContent>\n              <CardActions>\n                <Button size=\"small\" color=\"primary\" onClick={() => { toAssetDetail(post.assetSeq) }}>\n                  상세보기\n                </Button>\n              </CardActions>\n            </Card>\n          </Grid>\n        ))\n        :  (<CircularProgress />)}\n      </Grid>\n      <Grid>\n        {pageInfo && <Pagination classes={{ ul: classes.ul }}\n          hideNextButton={!pageInfo.next}\n          hidePrevButton={!pageInfo.prev}\n          count={pageInfo.endPage}\n          page={pageNum}\n         onChange={(e:React.ChangeEvent<unknown>,value:number)=>{setPageNum(value)}}\n          shape=\"rounded\" />}\n      </Grid>\n    </div>\n  )\n}\n\nexport default Posts;","import Posts from \"./Posts\"\nimport Sidebar from \"../commons/Sidebar\"\nimport { RouteComponentProps } from \"react-router-dom\"\n\ntype MatchParams = {\n    pageNum: string\n}\n\nconst Main = ({ match }: RouteComponentProps<MatchParams>) => {\n    const {pageNum} = match.params\n    return (\n        <div>\n                <Posts pageNum={pageNum}/>\n        </div>\n    )\n}\n\nexport default Main;","import {\n    CardContent,\n    CardMedia,\n    Divider,\n    Grid,\n    Paper,\n    Collapse,\n    List,\n    ListItem,\n    ListItemText,\n    ListItemIcon,\n    makeStyles,\n    GridList,\n    GridListTile,\n    GridListTileBar,\n    Table,\n    TableRow,\n    TableCell,\n    Checkbox,\n    ListItemSecondaryAction,\n    IconButton,\n    Button,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogContentText,\n    DialogActions,\n    CircularProgress,\n} from \"@material-ui/core\"\nimport { StarBorder, ExpandLess, ExpandMore, Comment, GetApp } from \"@material-ui/icons\"\n// import { InboxIcon } from '@material-ui/icons/MoveToInbox';\nimport React, { useEffect, useState } from \"react\"\nimport Carousel from \"react-material-ui-carousel\"\nimport axios from \"axios\";\nimport moment from 'moment';\nimport { useHistory } from \"react-router\";\nimport { saveAs } from 'file-saver';\nimport JSZip from \"jszip\";\nimport { promises } from \"fs\";\nimport fileDownload from \"js-file-download\";\n\nconst useStyles = makeStyles(() =>\n({\n    primary: {\n        fontSize: '20px',\n        textAlign: 'center'\n    },\n    nested: {\n        paddingLeft: 4,\n    },\n}),\n);\n\ntype Asset = {\n    assetSeq: number,\n    assetOwner: string,\n    assetOwnerName: string,\n    assetChanger: string,\n    assetChangerName: string,\n    assetTitle: string,\n    assetCreateDate: Date,\n    assetUpdateDate: Date,\n    tags: string,\n    assetCategory: number,\n    assetCategoryName: string,\n    assetFiles: Array<AssetFile>,\n}\ntype AssetFile = {\n    assetSeq: number,\n    assetLocation: string,\n    assetOriginName: string,\n    assetSize: number,\n    assetType: string,\n}\n\ntype MatchParams = {\n    assetSeq: string\n}\n\ntype Category = {\n    categoryId: number,\n    categoryName: string,\n    categoryParent: number,\n    categoryOrder: number\n}\n\nconst Info = (props: MatchParams) => {\n    const sessionUser = sessionStorage.getItem(\"sessionUser\");\n    if (sessionUser) {\n        axios.defaults.headers.common['Authorization'] = 'Bearer ' + JSON.parse(sessionUser).token;\n    }\n    const history = useHistory();\n    const assetSeq: string = props.assetSeq;\n    const classes = useStyles();\n    const [isOpen, setIsOpen] = useState(true);\n    const [assetInfo, setAssetInfo] = useState<Asset>();\n    const [parentCategory, setParentCategory] = useState<string>();\n    const [checked, setChecked] = useState<Array<string>>([]);\n    const [deleteOpen, setDeleteOpen] = useState<boolean>(false);\n    const [downloadOpen, setDownloadOpen] = useState<boolean>(false)\n    const handleClick = () => {\n        setIsOpen(!isOpen);\n    };\n\n\n\n    useEffect(() => {\n        axios.get(`/api/asset/${assetSeq}`\n        ).then(result => {\n            setAssetInfo(result.data.result);\n            axios.get(`/api/category/list`)\n                .then(response => {\n                    setParentCategory(findParent(result.data.result.assetCategory, response.data.result))\n                })\n        })\n    }, [assetSeq])\n\n    const findParent = (target: number, categories: Category[]) => {\n        let pStr = \"\";\n        categories.forEach(element => {\n            if (element.categoryId == target) {\n                if (element.categoryParent != 0) {\n                    pStr = findParent(element.categoryParent, categories) + '>' + element.categoryName\n                    return\n                } else {\n                    pStr = element.categoryName\n                    return\n                }\n            }\n        });\n        return pStr;\n    }\n\n    const handleToggle = (value: string) => () => {\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        setChecked(newChecked);\n    };\n\n    const goModify = () => {\n        history.push(`/modify/${assetSeq}`)\n    }\n\n    const handleDeleteOpen = () => {\n        setDeleteOpen(true)\n    }\n\n    const handleDeleteClose = () => {\n        setDeleteOpen(false)\n    }\n\n    const handleDeleteConfirm = () => {\n        axios.delete(`/api/asset/${assetSeq}`,\n            {\n                params: {\n                    assetOwner: assetInfo.assetOwner\n                }\n            }\n        )\n            .then(response => {\n                history.push(\"/\");\n            })\n    }\n\n    const handleSingleDownload = (fileLocation: string, fileOriginName: string) => () => {\n        axios.get(`/api/download`, {\n            responseType: 'blob',\n            params:{\n                fileLocation\n            }\n        })\n            .then(response => {\n                fileDownload(response.data, fileOriginName);\n            })\n    }\n\n    const handleDownloadClose = () =>{\n        setDownloadOpen(false)\n    }\n\n    const handleMultiDownloadAsZip = () => {\n        const makeZip = new Promise(async (resolve, reject) => {\n            let zip = new JSZip();\n            setDownloadOpen(true)\n            \n            for (let i = 0; i < checked.length; i++) {\n                let fileInfo = checked[i].split(',')\n                await axios.get(`${fileInfo[0]}`,\n                    {\n                        responseType: 'blob',\n                        // onDownloadProgress:ProgressEvent=>{\n                        //     const percentage=Math.round(\n                        //         ProgressEvent.loaded*100/ProgressEvent.total\n                        //     )\n                        //     setProgress(percentage);\n                        //     setWholeProgress(progress/checked.length)\n                        // }\n                    })\n                    .then(response => {\n                        zip.file(fileInfo[1],response.data);\n                    })\n            }\n            resolve(zip)\n        });\n        makeZip.then((value:any)=>{\n            value.generateAsync({ type: \"blob\" })\n            .then(function (content:any) {\n                // see FileSaver.js\n                saveAs(content, assetInfo.assetTitle + \".zip\");\n                setDownloadOpen(false)\n            })\n        })\n    }\n    return (\n        <div style={{ marginTop: 20, padding: 30 }}>\n            {assetInfo &&\n                <Grid container spacing={2}>\n                    <Grid item xs={8}>\n                        <Carousel\n                            autoPlay={false}\n                            animation={\"slide\"}\n                            indicators={true}\n                            navButtonsAlwaysVisible={true}\n                        >\n                            {assetInfo && assetInfo.assetFiles.map((item, i) => (\n                                <Grid item>\n                                    <CardContent>\n                                        <CardMedia>\n                                            {!item.assetType ?\n                                                <div>\n                                                    <img src={\"/images/unsupportedFile.png\"} alt=\"\" />\n                                                    <GridListTileBar title={\"미리보기가 지원되지 않는 형식\"} />\n                                                </div>\n                                                :\n                                                item.assetType.includes(\"image\") ?\n                                                    <img style={{ maxWidth: '600px',maxHeight:'600px' }} src={item.assetLocation.substring(item.assetLocation.lastIndexOf(\"/uploadedImages\"))} alt=\"\" />\n                                                    : item.assetType.includes(\"video\") ?\n                                                        <video style={{ maxWidth: '600px',maxHeight:'600px' }} controls src={item.assetLocation.substring(item.assetLocation.lastIndexOf(\"/uploadedImages\"))} />\n                                                        :\n                                                        item.assetType.includes(\"audio\") ?\n                                                            <audio controls src={item.assetLocation.substring(item.assetLocation.lastIndexOf(\"/uploadedImages\"))} />\n                                                            : <div>\n                                                                <img src={\"/images/unsupportedFile.png\"} alt=\"\" />\n                                                                <GridListTileBar title={\"미리보기가 지원되지 않는 형식\"} />\n                                                            </div>\n                                            }\n\n                                        </CardMedia>\n                                    </CardContent>\n                                </Grid>\n                            ))}\n                        </Carousel>\n                    </Grid>\n                    <Divider orientation=\"vertical\" flexItem />\n                    <Grid item xs={3}>\n                        <h1>{assetInfo.assetTitle}</h1>\n                        <Table aria-label=\"simple table\">\n                            <TableRow>\n                                <TableCell align=\"right\" style={{ color: \"grey\" }}>등록일 : {moment(assetInfo.assetCreateDate).format('YYYY-MM-DD HH:mm:ss')}\n                                    {assetInfo.assetCreateDate !== assetInfo.assetUpdateDate ? <><br />수정일 : {moment(assetInfo.assetUpdateDate).format('YYYY-MM-DD HH:mm:ss')}</> : null}</TableCell>\n\n                            </TableRow>\n                            <TableRow>\n                                <TableCell>작성자 : {assetInfo.assetOwnerName}{assetInfo.assetChanger && <><br />최종 수정자 : {assetInfo.assetChangerName}</>}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell>\n                                    카테고리 : {parentCategory}\n                                </TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell>\n                                    태그 : {assetInfo.tags}\n                                </TableCell>\n                            </TableRow>\n                        </Table>\n                        <Button onClick={goModify} color=\"primary\">수정</Button>\n                        <Button onClick={handleDeleteOpen} color=\"secondary\">삭제</Button>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Divider />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <ListItem button onClick={handleClick}>\n                            <ListItemText primary=\"파일 리스트\" classes={{ primary: classes.primary }} />\n                            {isOpen ? <ExpandLess /> : <ExpandMore />}\n                        </ListItem>\n                        <Collapse in={isOpen} timeout=\"auto\" unmountOnExit>\n                            <List component=\"div\" disablePadding>\n                                {/* <ListItem key=\"download\" role=\"selected-download\" style={{ height: 42, textAlign: 'center' }}>\n                                    <ListItemText>\n                                        <Button endIcon={<GetApp />} size=\"large\" onClick={handleMultiDownloadAsZip}>선택파일 다운로드</Button>\n                                    </ListItemText>\n                                </ListItem> */}\n                                {assetInfo.assetFiles.map((file, i) => {\n                                    const labelId = `checkbox-list-label-${i}`;\n                                    const fileLocation = file.assetLocation.substring(file.assetLocation.lastIndexOf(\"/uploadedImages\"));\n                                    return (\n                                        <ListItem key={i} role={undefined} dense button onClick={handleToggle(`${fileLocation},${file.assetOriginName}`)}>\n                                            {/* <ListItemIcon>\n                                                <Checkbox\n                                                    edge=\"start\"\n                                                    checked={checked.indexOf(`${fileLocation},${file.assetOriginName}`) !== -1}\n                                                    tabIndex={-1}\n                                                    disableRipple\n                                                    inputProps={{ 'aria-labelledby': labelId }}\n                                                /> \n                                            </ListItemIcon> */}\n                                            <ListItemText id={labelId} primary={`${file.assetOriginName}`} />\n                                            <ListItemSecondaryAction>\n                                                <IconButton edge=\"end\" aria-label=\"comments\" onClick={handleSingleDownload(file.assetLocation, file.assetOriginName)}>\n                                                    <GetApp />\n                                                </IconButton>\n                                            </ListItemSecondaryAction>\n                                        </ListItem>\n                                    );\n                                })}\n                            </List>\n                        </Collapse>\n                    </Grid>\n                </Grid>\n\n            }\n            <Dialog\n                open={deleteOpen}\n                onClose={handleDeleteClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">{\"삭제하시겠습니까?\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        삭제된 게시글은 복구되지 않습니다.\n                     </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleDeleteConfirm} color=\"secondary\">\n                        확인\n                    </Button>\n                    <Button onClick={handleDeleteClose} color=\"primary\">\n                        취소\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog\n                open={downloadOpen}\n                onClose={handleDownloadClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">{\"다운로드를 준비중입니다.\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\" style={{textAlign:'center'}}>\n                         <CircularProgress />\n                     </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleDownloadClose} color=\"secondary\">\n                        확인\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\nexport default Info","import { RouteComponentProps } from \"react-router-dom\";\nimport Info from \"./Info\";\n\n\ntype MatchParams = {\n    assetSeq: string\n}\n\nconst Detail = ({ match }: RouteComponentProps<MatchParams>) => {\n\n    const { assetSeq } = match.params;\n\n    return (\n        <>\n            <Info assetSeq={assetSeq} />\n        </>\n    )\n}\n\nexport default Detail;","import React, { useState, FormEvent, useEffect } from 'react';\nimport axios from 'axios';\nimport styled from '@emotion/styled';\nimport { useHistory } from 'react-router';\nimport arrayToTree from 'array-to-tree';\nimport { ExpandMore, ChevronRight, Comment, Delete } from '@material-ui/icons'\nimport { Button, CircularProgress, colors, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, IconButton, List, ListItem, ListItemSecondaryAction, ListItemText, makeStyles } from '@material-ui/core';\nimport { TreeItem, TreeView } from '@material-ui/lab';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../modules';\n//style \n\nlet DivWrapper = styled.div`\nwidth:100%;\nmargin: 0 auto;\npadding: 0px;\njustify-content: center;\nalign-items: center;\nbox-sizing: border-box;\n`;\n\nlet DivContainer = styled.div`\nwidth: 100%;\nmin-height: 100vh;\ndisplay:block;\n//flex-wrap: wrap;\nmargin-right: auto;\nmargin-left: auto;\npadding-left: 15px;\npadding-right: 15px;\npadding-top: 15px;\n// justify-content: center;\n// align-items: center;\n// padding: 15px;\nbackground: #ebeeef;\n`;\n\nlet DivTitleContainer = styled.div`\n// width:100%;\ndisplay:flex;\nmargin-bottom: 20px;\nborder-bottom: 1px solid #eaeaea;\n`;\n\nlet DivBox = styled.div`\nmax-width: 80%;\n// min-width: 670px;\nmargin: auto;\nbackground: #fff;\n// padding:10px;\n// overflow: hidden;\nposition: relative;\npadding: 20px;\nborder-radius: 3px;\nbox-shadow: rgba(0, 0, 0, 0.1) 0px 1px 2px;\n`;\n\nconst DivInputGroup = styled.div`\nwidth: 100%;\n  position: relative;\n  border-bottom: 1px solid #b2b2b2;\n  margin-bottom: 26px;\n`;\n\nconst DivTagGroup = styled.div`\nwidth:100%;\nposition:relative;\nmargin-bottom:26px;\ndisplay:block;\n`;\n\nconst SpanInputLabel = styled.span`\nfont-family: Poppins-Regular;\n  font-size: 15px;\n  color: #808080;\n  line-height: 1.2;\n  text-align: right;\n  position: absolute;\n  top: 14px;\n  left: -105px;\n  width: 80px;\n`;\nconst InputText = styled.input`\nfont-family: Poppins-Regular;\n  font-size: 15px;\n  color: #555555;\n  line-height: 1.2;\n  height: 45px;\n  display: block;\n  width: 100%;\n  background: transparent;\n  padding: 0 5px;\n  outline:none;\n  border:none;\n`;\nconst FormLogin = styled.form`\nwidth: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  padding: 43px 88px 93px 150px;\n`;\n\nconst SpanTag = styled.span`\ndisplay:inline-block;\nbackground:#4abdff;\nmargin-right:5px;\nmargin-top:2px;\nmargin-bottom:2px;\npadding:5px 7px 5px 7px;\nborder-radius:4px;\ncolor:#fff;\n`;\n\nconst SpanTimes = styled.span`\nmargin: 3px;\nmargin-left 5px;\nfont-weight: bolder;\ncolor:#fff;\n&:hover{\n    cursor:pointer;\n    color:#cccccc;\n}\n&:active{\n    color:#7a7a7a;\n}\n`;\n\ntype MatchParams = {\n    assetSeq: string\n}\n\n//style end\nconst ModInfo = (props: MatchParams) => {\n    const history = useHistory()\n    let sessionUser = sessionStorage.getItem(\"sessionUser\");\n    const user = useSelector((state: RootState) => state.member)\n    if (sessionUser) {\n        axios.defaults.headers.common['Authorization'] = 'Bearer ' + JSON.parse(sessionUser).token;\n    }\n\n    const assetSeq: string = props.assetSeq;\n\n    let [fileList, setFileList] = useState<Array<AssetFile>>();\n    let [title, setTitle] = useState<string>();\n    let [currentInputTag, setCurrentInputTag] = useState<string>('');\n    let [tags, setTags] = useState<Array<string>>([]);\n    let [categories, setCategories] = useState([]);\n    let [selectedCategory, setSelectedCategory] = useState<string>();\n    let [categoriesHavingChild, setCategoriesHavingChild] = useState<Array<string>>();\n    let [isTagDuplicated, setIsTagDuplicated] = useState<boolean>(false);\n    let [alertOpen, setAlertOpen] = useState<boolean>(false);\n    let [fileDeleteAlertOpen, setFileDeleteAlertOpen] = useState<boolean>(false)\n    let [deleteTargetFileIndex, setDeleteTargetFileIndex] = useState<number>();\n\n    let [assetInfo, setAssetInfo] = useState<Asset>();\n\n    useEffect(() => {\n        sessionUser = sessionStorage.getItem(\"sessionUser\");\n        if (sessionUser) {\n            axios.defaults.headers.common['Authorization'] = 'Bearer ' + JSON.parse(sessionUser).token;\n        }\n        axios.get(`/api/category/list`)\n            .then(response => {\n                setCategories(arrayToTree(response.data.result, { parentProperty: 'categoryParent', customID: 'categoryId' }))\n            })\n    }, [user])\n\n    useEffect(() => {\n        axios.get(`/api/asset/${assetSeq}`)\n            .then(result => {\n                let data: Asset = result.data.result;\n                setAssetInfo(data);\n                setTitle(data.assetTitle);\n                setFileList(data.assetFiles);\n                if(data.tags)\n                    setTags(data.tags.split(','))\n                setSelectedCategory(data.assetCategory + '')\n            })\n    }, [assetSeq])\n\n    useEffect(() => {\n        let tempArray: Array<string> = [];\n        async function getParents(array: Array<TreeViews>) {\n            await array.map((node: TreeViews) => {\n                if (node.children) {\n                    tempArray.push(node.categoryId + '');\n                    getParents(node.children);\n                }\n            });\n            setCategoriesHavingChild(tempArray)\n        };\n        getParents(categories);\n    }, [categories])\n    interface TreeViews {\n        children?: TreeViews[];\n        categoryName: string;\n        categoryId: string;\n    }\n\n    interface CategoryProps {\n        category: TreeViews\n    }\n    type Asset = {\n        assetSeq: number,\n        assetOwner: string,\n        assetOwnerName: string,\n        assetChanger: string,\n        assetChangerName: string,\n        assetTitle: string,\n        assetCreateDate: Date,\n        assetUpdateDate: Date,\n        tags: string,\n        assetCategory: number,\n        assetCategoryName: string,\n        assetFiles: Array<AssetFile>,\n    }\n    type AssetFile = {\n        assetSeq: number,\n        assetLocation: string,\n        assetOriginName: string,\n        assetSize: number,\n        assetType: string,\n    }\n\n    const renderTrees = (nodes: TreeViews) => (\n        <TreeItem key={nodes.categoryId} nodeId={nodes.categoryId + ''} label={nodes.categoryName} classes={{ label: classes.label }}>\n            {Array.isArray(nodes.children) ? nodes.children.map((node) => renderTrees(node)) : null}\n        </TreeItem>\n    );\n\n    const Category = ({ category }: CategoryProps) => {\n        useEffect(() => {\n\n        }, [category]);\n        return renderTrees(category);\n    }\n\n    const handleToggle = (event: any, nodeIds: string[]) => {\n        event.preventDefault()\n    };\n    const handleNodeSelect = (event: any, nodeId: React.SetStateAction<string>) => {\n        setSelectedCategory(nodeId)\n    };\n\n    const handleCancel = () => {\n        history.goBack();\n    }\n\n    const handleAlertOpen = () => {\n        setAlertOpen(true)\n    }\n    const handleAlertClose = () => {\n        setAlertOpen(false)\n    }\n\n    const handleFileDeleteAlertClose = () => {\n        setFileDeleteAlertOpen(false);\n    }\n\n    const handleFileDeleteAlertOpen = (i: number) => () => {\n        setDeleteTargetFileIndex(i);\n        setFileDeleteAlertOpen(true)\n    }\n\n    const handleFileDelete = () => {\n        console.log(fileList[deleteTargetFileIndex])\n        axios.delete(`/api/file`,\n            {\n                params: {\n                    assetLocation:fileList[deleteTargetFileIndex].assetLocation\n                },\n                headers: {\n                    'Content-type': 'application/json',\n                }\n            }\n        ).then(result => {\n            let tempFileList = [...fileList]\n            tempFileList.splice(deleteTargetFileIndex, 1)\n            setFileList([...tempFileList]);\n            setDeleteTargetFileIndex(null)\n            setFileDeleteAlertOpen(false)\n        })\n    }\n\n    const addTag = (e: React.KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === \"Enter\" || e.key === \"Tab\") {\n            e.preventDefault();\n            let inputTag = currentInputTag.trim();\n            if (inputTag !== \"\") {\n                if (tags.filter(tag => tag.trim() === inputTag).length <= 0) {\n                    setIsTagDuplicated(false);\n                    axios.post(`/api/tag`, null,\n                        { params: { assetTag: inputTag, assetSeq: assetSeq } }\n                    ).then(result => {\n                        if(result.data.result)\n                            setTags(result.data.result.split(','))\n                        else\n                            setTags([])\n                    })\n                } else {\n                    setIsTagDuplicated(true)\n                }\n            }\n            setCurrentInputTag('');\n        }\n    }\n\n    const removeTag = (targetTag: string) => {\n        axios.delete(`/api/tag`,\n            { params: { assetTag: targetTag.trim(), assetSeq: assetSeq } }\n        ).then(result => {\n            if(result.data.result)\n                setTags(result.data.result.split(','))\n            else\n                setTags([])\n        })\n    }\n\n    const submitModify = (e: FormEvent) => {\n        e.preventDefault();\n        const data = {\n            assetSeq: assetSeq,\n            assetTitle: title,\n            assetCategory: selectedCategory\n        }\n        console.log(data)\n        axios.put(`/api/asset`,\n            data\n        ).then(result=>{\n            history.goBack();\n        })\n    }\n\n    const useStyles = makeStyles({\n        root: {\n            height: 240,\n            flexGrow: 1,\n            maxWidth: 400,\n            display: 'contents',\n        },\n        label: {\n            textAlign: 'left'\n        },\n    });\n    const classes = useStyles();\n    return (\n        <>\n            {assetInfo &&\n                <DivWrapper>\n                    <DivContainer>\n                        <DivBox>\n                            <DivTitleContainer>\n                                <h2 className=\"h3 mb-2 text-gray-800\">수정</h2>\n                            </DivTitleContainer>\n                            <FormLogin>\n                                <DivInputGroup>\n                                    <SpanInputLabel>제목</SpanInputLabel>\n                                    <InputText type=\"text\" value={title} onChange={(e) => { setTitle(e.target.value) }} className=\"logininput\" />\n                                </DivInputGroup>\n\n                                <DivInputGroup>\n                                    <SpanInputLabel>카테고리</SpanInputLabel>\n                                    {categories.length > 0 ? (\n                                        <TreeView\n                                            onNodeToggle={handleToggle}\n                                            onNodeSelect={handleNodeSelect}\n                                            className={classes.root}\n                                            expanded={categoriesHavingChild}\n                                            defaultSelected={assetInfo.assetCategory + ''}\n                                        >\n                                            <div>\n                                                {categories.map((category: TreeViews) => {\n                                                    return <Category key={category.categoryId} category={category} />\n                                                })}\n                                            </div>\n                                        </TreeView>\n                                    ) :\n                                        (<CircularProgress />)\n                                    }\n                                </DivInputGroup>\n\n\n                                <DivInputGroup>\n                                    <SpanInputLabel>태그</SpanInputLabel>\n                                    <InputText type=\"text\" value={currentInputTag} onChange={(e) => { setCurrentInputTag(e.target.value) }} onKeyPress={(e) => { addTag(e) }} placeholder=\"태그 입력 후 엔터\" />\n                                </DivInputGroup>\n                                <DivTagGroup>\n                                    {\n                                        isTagDuplicated ?\n                                            <div style={{ color: 'red' }}>\n                                                중복된 태그입니다.\n                                    </div> : null\n                                    }\n\n                                    {tags.map((data, i) =>\n                                        <SpanTag key={i}>{data}<SpanTimes onClick={() => { removeTag(data) }}>×</SpanTimes></SpanTag>\n                                    )}\n                                </DivTagGroup>\n                                <DivInputGroup>\n                                    {fileList && <List >\n                                        {fileList.map((value, i) => {\n                                            const labelId = `checkbox-list-label-${i}`;\n                                            return (\n                                                <ListItem key={i} role={undefined} dense >\n\n                                                    <ListItemText id={labelId} primary={value.assetOriginName} />\n                                                    <ListItemSecondaryAction>\n                                                        <IconButton edge=\"end\" aria-label=\"delete\" onClick={handleFileDeleteAlertOpen(i)}>\n                                                            <Delete />\n                                                        </IconButton>\n                                                    </ListItemSecondaryAction>\n                                                </ListItem>\n                                            );\n                                        })}\n                                    </List>}\n                                </DivInputGroup>\n                                <DivTagGroup>\n                                    <Button color=\"primary\" onClick={submitModify}>저장</Button>\n                                    <Button color=\"secondary\" onClick={handleCancel}>취소</Button>\n                                </DivTagGroup>\n\n                            </FormLogin>\n                        </DivBox>\n                    </DivContainer>\n                </DivWrapper>\n            }\n            <Dialog\n                open={alertOpen}\n                onClose={handleAlertClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">{\"입력정보를 확인해주세요\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        (제목, 카테고리, 파일첨부는 필수요소 입니다.)\n          </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleAlertClose} color=\"primary\">\n                        확인\n          </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog\n                open={fileDeleteAlertOpen}\n                onClose={handleFileDeleteAlertClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">{\"파일을 삭제하시겠습니까?\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        삭제된 파일은 복구할 수 없습니다.\n          </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleFileDelete} color=\"secondary\">\n                        확인\n          </Button>\n                    <Button onClick={handleFileDeleteAlertClose} color=\"primary\">\n                        취소\n          </Button>\n                </DialogActions>\n            </Dialog>\n\n        </>\n    )\n}\n\nexport default ModInfo;","import React from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport ModInfo from \"./ModInfo\";\n\ntype MatchParams = {\n    assetSeq: string\n}\n\nconst Modify = ({ match }: RouteComponentProps<MatchParams>) => {\n    const { assetSeq } = match.params;\n    return (\n        <div>\n                <ModInfo assetSeq={assetSeq} />\n        </div>\n    )\n}\n\nexport default Modify;","import {\n    Grid,\n    Typography,\n    Card,\n    CardActions,\n    CardContent,\n    Button,\n    GridList,\n    GridListTile,\n    makeStyles,\n    GridListTileBar,\n    CircularProgress,\n} from '@material-ui/core'\n\nimport { Pagination, PaginationItem } from '@material-ui/lab';\nimport axios from 'axios';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles(() => ({\n    gridList: {\n        width: 400,\n        height: 400,\n    },\n    imageCountLessEqualTwo: {\n        height: '100%!important'\n    },\n    imageCountOverTwo: {\n        height: '50%!important'\n    },\n    ul: {\n        justifyContent: 'center',\n        padding: 10,\n\n    }\n}))\n\ntype Asset = {\n    assetSeq: number,\n    assetOwner: string,\n    assetOwnerName: string,\n    assetTitle: string,\n    assetCreateDate: Date,\n    assetUpdateDate: Date,\n    locations: string,\n    assetFiles: Array<AssetFile>,\n    tags: string,\n    locationArray: Array<string>,\n    assetCategory: number,\n    assetCategoryName: string\n}\n\ntype Page = {\n    startPage: number,\n    endPage: number,\n    prev: false,\n    next: false,\n    total: number\n}\n\ntype AssetFile = {\n    assetLocation: string,\n    assetOriginName: string,\n    assetSeq: number,\n    assetSize: number,\n    assetType: string,\n}\n\ntype Props = {\n    contents:Array<Asset>,\n    setSearchWindowOpen:any,\n    setPageNum:any,\n    pageNum:number,\n    pageInfo:any\n}\n\nconst SearchWindow = (props: Props) => {\n    const pContents = props.contents\n    const pageNum = props.pageNum\n    const setPageNum=props.setPageNum\n    const setSearchWindowOpen = props.setSearchWindowOpen\n    const pageInfo=props.pageInfo\n    const [contents, setContents] = useState<Array<Asset>>([]);\n    const history = useHistory();\n    const toAssetDetail = (assetSeq: number) => {\n        history.push('/detail/' + assetSeq)\n        setSearchWindowOpen(false)\n    }\n\n    useEffect(()=>{\n        setContents(pContents)\n    },[pContents])\n    const classes = useStyles();\n\n    return (\n        <div style={{\n            // marginTop: 20, \n            padding: 30\n        }}>\n            <Grid container spacing={3} justify=\"center\">\n                {contents ? contents.map(post => (\n                    <Grid item key={post.assetSeq}>\n                        <Card>\n                            <GridList className={classes.gridList}>\n                                {post.assetFiles &&\n                                    post.assetFiles.map((assetFile, i) => {\n                                        let type = assetFile.assetType\n                                        let location = assetFile.assetLocation\n                                        let imgUrl;\n                                        if (!type) {\n                                            imgUrl = '/images/unsupportedFile.png'\n                                        } else if (type.includes('image')) {\n                                            imgUrl = `/uploadedImages/thumb${location.substring(location.lastIndexOf(\"/uploadedImages\") + 15)}`\n                                        } else if (type.includes('video')) {\n                                            imgUrl = '/images/videoFile.png'\n                                        } else if (type.includes('audio')) {\n                                            imgUrl = '/images/audioFile.png'\n                                        } else {\n                                            imgUrl = '/images/unsupportedFile.png'\n                                        }\n                                        return (\n                                            (post.locationArray.length < 3) ?\n                                                <GridListTile key={i} cols={(post.locationArray.length % 2 != 0 && i == 0) ? 2 : 1} classes={{ root: classes.imageCountLessEqualTwo }}>\n                                                    <img src={imgUrl} alt=\"\" />\n\n                                                </GridListTile>\n                                                :\n                                                i <= 3 ?\n                                                    <GridListTile key={i} cols={(post.locationArray.length % 2 != 0 && i == 0 && post.locationArray.length <= 3) ? 2 : 1} classes={{ root: classes.imageCountOverTwo }}>\n                                                        <img src={imgUrl} alt=\"\" />\n                                                        {(post.locationArray.length > 4 && i == 3) ?\n                                                            <GridListTileBar title={post.locationArray.length - (i + 1) + '개 더보기'} classes={{ root: classes.imageCountLessEqualTwo }} />\n                                                            : null}\n                                                    </GridListTile> :\n                                                    null\n                                        )\n                                    })\n                                }\n                            </GridList>\n\n                            <CardContent>\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                    {post.assetTitle}\n                                </Typography>\n\n                                <Typography align='right' component=\"p\" style={{ color: 'grey' }}>{moment(post.assetCreateDate).format('YYYY-MM-DD HH:mm:ss')}</Typography>\n                                <Typography align='left' component=\"p\">카테고리 : {post.assetCategoryName}</Typography>\n                                <Typography align='left' component=\"p\">작성자 : {post.assetOwnerName}</Typography>\n                                <Typography align='left' component=\"p\">태그 : {post.tags}</Typography>\n                            </CardContent>\n                            <CardActions>\n                                <Button size=\"small\" color=\"primary\" onClick={() => { toAssetDetail(post.assetSeq) }}>\n                                    상세보기\n                  </Button>\n                            </CardActions>\n                        </Card>\n                    </Grid>\n                ))\n                : (<CircularProgress />)}\n            </Grid>\n            <Grid>\n                {pageInfo && <Pagination classes={{ ul: classes.ul }}\n                    hideNextButton={!pageInfo.next}\n                    hidePrevButton={!pageInfo.prev}\n                    count={pageInfo.endPage}\n                    page={pageNum}\n                    onChange={(e:React.ChangeEvent<unknown>,value:number)=>{setPageNum(value)}}\n                    shape=\"rounded\" />}\n            </Grid>\n        </div>\n    )\n}\n\nexport default SearchWindow;","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Button, Checkbox, CircularProgress, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, InputBase, ListItemSecondaryAction, Paper } from '@material-ui/core';\nimport SearchWindow from './SearchWindow';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout } from '../../modules/member';\nimport { RootState } from '../../modules';\nimport axios from 'axios';\nimport arrayToTree from 'array-to-tree';\nimport { TreeItem, TreeView } from '@material-ui/lab';\nimport { Clear, Search } from '@material-ui/icons';\n\nconst drawerWidth = 450;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n      justifyContent: 'flex-end',\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      marginLeft: -drawerWidth,\n    },\n    contentShift: {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    },\n\n    linkButton: {\n      color: 'white',\n    },\n  }),\n);\n\nconst useStylesForSearch = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: '2px 4px',\n      display: 'flex',\n      alignItems: 'center',\n      width: 400,\n    },\n    input: {\n      marginLeft: theme.spacing(1),\n      flex: 1,\n    },\n    iconButton: {\n      padding: 10,\n    },\n    divider: {\n      height: 28,\n      margin: 4,\n    },\n  }),\n);\n\n\nexport default function SideHeader(props: any) {\n\n  type Asset = {\n    assetSeq: number,\n    assetOwner: string,\n    assetOwnerName: string,\n    assetTitle: string,\n    assetCreateDate: Date,\n    assetUpdateDate: Date,\n    locations: string,\n    assetFiles: Array<AssetFile>,\n    tags: string,\n    locationArray: Array<string>,\n    assetCategory: number,\n    assetCategoryName: string\n  }\n\n  type Page = {\n    startPage: number,\n    endPage: number,\n    prev: false,\n    next: false,\n    total: number\n  }\n\n  type AssetFile = {\n    assetLocation: string,\n    assetOriginName: string,\n    assetSeq: number,\n    assetSize: number,\n    assetType: string,\n  }\n\n  let sessionUser = sessionStorage.getItem(\"sessionUser\");\n  const user = useSelector((state: RootState) => state.member)\n  if (sessionUser) {\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + JSON.parse(sessionUser).token;\n  }\n  const useTreeStyles = makeStyles({\n    root: {\n      height: 240,\n      flexGrow: 1,\n      maxWidth: 400,\n      display: 'contents',\n    },\n    label: {\n      textAlign: 'left'\n    },\n  });\n  const treeClasses = useTreeStyles();\n  const classes = useStyles();\n  const searchClasses = useStylesForSearch();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n  let [categoriesHavingChild, setCategoriesHavingChild] = useState<Array<string>>();\n  let [categories, setCategories] = useState([]);\n  let [selectedCategory, setSelectedCategory] = useState<string>();\n  let [tags, setTags] = useState<Array<Tags>>();\n  const [checkedTags, setCheckedTags] = React.useState([]);\n  const [keyword, setKeyword] = useState<string>('');\n  const [crt, setCrt] = useState({ pageNum: 1, amount: 10 })\n  const [isSearch, setIsSearch] = useState<boolean>(false)\n  const [contents, setContents] = useState<Array<Asset>>([]);\n  const [pageNum, setPageNum] = useState<number>();\n  const [pageInfo, setPageInfo] = useState<Page>();\n  const [searchWindowOpen, setSearchWindowOpen] = useState<boolean>(false)\n  const handleCheck = (value: string) => () => {\n    const currentIndex = checkedTags.indexOf(value);\n    const newChecked = [...checkedTags];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setCheckedTags(newChecked);\n  };\n\n  useEffect(()=>{\n    search()\n  },[pageNum])\n  \n  useEffect(() => {\n    sessionUser = sessionStorage.getItem(\"sessionUser\");\n    if (sessionUser) {\n      axios.defaults.headers.common['Authorization'] = 'Bearer ' + JSON.parse(sessionUser).token;\n    }\n    axios.get(`/api/category/list`)\n      .then(response => {\n        setCategories(arrayToTree(response.data.result, { parentProperty: 'categoryParent', customID: 'categoryId' }))\n      })\n    axios.get(`/api/tag/list`)\n      .then(response => {\n        setTags(response.data.result)\n      })\n  }, [user])\n\n  useEffect(() => {\n    let tempArray: Array<string> = [];\n    async function getParents(array: Array<TreeViews>) {\n      await array.map((node: TreeViews) => {\n        if (node.children) {\n          tempArray.push(node.categoryId + '');\n          getParents(node.children);\n        }\n      });\n      setCategoriesHavingChild(tempArray)\n    };\n    getParents(categories);\n  }, [categories])\n\n  useEffect(()=>{\n    window.onpopstate = (event:any) => { \n      if(isSearch){\n        setSearchWindowOpen(true)\n      }\n    }\n  })\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const searchInputKeyPress = (e: React.KeyboardEvent<HTMLDivElement>) => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      setIsSearch(true);\n      setPageNum(1)\n      \n    }\n  }\n  const handlerSearchButtonClick = () =>{\n    setIsSearch(true);\n    setPageNum(1)\n  }\n  const search = () => {\n    let categoryList: Array<string> = [];\n    axios.get(`/api/category/list`)\n      .then(response => {\n        if (selectedCategory)\n          categoryList = (findChild(parseStringToNumber(selectedCategory), response.data.result).split('>'));\n        axios.get(`/api/search?${setData()}`)\n          .then(response => {\n            setContents(response.data.result)\n            setSearchWindowOpen(true)\n            setPageInfo(response.data.reference)\n          })\n      })\n    const setData = () => {\n      let data: string = ''\n      if (categoryList) {\n        categoryList.forEach((element: any) => {\n          data += `category=${element}&`\n        })\n      }\n      if (checkedTags) {\n        checkedTags.forEach((element: any) => {\n          data += `tag=${element}&`\n        })\n      }\n      if(keyword)\n        data += `keyword=${keyword}&`\n      data+=`pageNum=${pageNum}`      \n      return data\n    }\n  }\n  const parseStringToNumber = (target: string) => {\n    let parser: number = +target\n    return parser\n  }\n  const findChild = (target: number, categories: Category[]) => {\n    let pStr = \"\" + target;\n    categories.forEach(element => {\n      if (element.categoryParent == target) {\n        pStr += '>' + findChild(element.categoryId, categories)\n      }\n    });\n    // pStr+=target;\n    return pStr;\n  }\n  type Category = {\n    categoryId: number,\n    categoryName: string,\n    categoryParent: number,\n    categoryOrder: number\n  }\n  type Tags = {\n    assetSeq: number,\n    assetTag: string,\n    count: number\n  }\n\n  interface TreeViews {\n    children?: TreeViews[];\n    categoryName: string;\n    categoryId: string;\n  }\n  interface CategoryProps {\n    category: TreeViews\n  }\n\n  const renderTrees = (nodes: TreeViews) => (\n    <TreeItem key={nodes.categoryId} nodeId={nodes.categoryId + ''} label={nodes.categoryName} classes={{ label: treeClasses.label }}>\n      {Array.isArray(nodes.children) ? nodes.children.map((node) => renderTrees(node)) : null}\n    </TreeItem>\n  );\n\n  const Category = ({ category }: CategoryProps) => {\n    useEffect(() => {\n\n    }, [category]);\n    return renderTrees(category);\n  }\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleToggle = (event: any, nodeIds: string[]) => {\n    event.preventDefault()\n  };\n  const handleNodeSelect = (event: any, nodeId: React.SetStateAction<string>) => {\n    if(nodeId==selectedCategory){\n      setSelectedCategory('')\n    }else\n      setSelectedCategory(nodeId)\n  };\n\n  const handleSearchReset = () =>{\n    setIsSearch(false)\n    setSearchWindowOpen(false)\n    setContents([])\n    handleNodeSelect(null,selectedCategory)\n    setSelectedCategory('')\n    setCheckedTags([])\n  }\n\n  const dispatch = useDispatch()\n  const logoutHandler = () => {\n    handleSearchReset()\n    dispatch(logout());\n    sessionStorage.setItem(\"sessionUser\", '');\n    console.log('logout');\n  }\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <Search />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Malgn\n          </Typography>\n          <Typography style={{ marginLeft: \"auto\" }}>\n            <Link to=\"/\"><Button onClick={handleSearchReset} classes={{ text: classes.linkButton }}>Home</Button></Link>\n            <Link to=\"/upload\"><Button onClick={handleSearchReset} classes={{ text: classes.linkButton }}>파일 업로드</Button></Link>\n            <Button onClick={logoutHandler} classes={{ text: classes.linkButton }}>로그아웃</Button>\n          </Typography>\n\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <Typography align='left' variant='h5'>검색</Typography>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <ListItem key={0}>\n            <Paper component=\"form\" className={searchClasses.root}>\n              <IconButton onClick={handlerSearchButtonClick} className={searchClasses.iconButton} aria-label=\"search\">\n                <Search />\n              </IconButton>\n              <InputBase\n                className={searchClasses.input}\n                placeholder=\"검색어 입력\"\n                onKeyPress={(e) => { searchInputKeyPress(e) }}\n                onChange={(e) => { setKeyword(e.target.value) }}\n              />\n              {isSearch &&\n              <IconButton onClick={handleSearchReset} aria-label=\"search\">\n                <Clear />\n              </IconButton>}\n            </Paper>\n          </ListItem>\n        </List>\n        <Divider />\n        <List>\n          <ListItem key={1}>\n            {categories.length > 0 ? (\n              <TreeView\n                onNodeToggle={handleToggle}\n                onNodeSelect={handleNodeSelect}\n                className={classes.root}\n                // defaultCollapseIcon={<ExpandMore />}\n                // defaultExpandIcon={<ChevronRight />}\n                expanded={categoriesHavingChild}\n              >\n                <div>\n                  {categories.map((category: TreeViews) => {\n                    return <Category key={category.categoryId} category={category} />\n                  })}\n                </div>\n              </TreeView>\n            ) :\n              (<CircularProgress />)\n            }\n          </ListItem>\n        </List>\n        <Divider />\n        <List style={{ overflow: 'auto' }}>\n          {tags && tags.length > 0 ?\n            tags.map((item, i) => {\n              return (\n                <ListItem key={i} role={undefined} dense button onClick={handleCheck(item.assetTag)}>\n                  <ListItemIcon>\n                    <Checkbox\n                      edge=\"start\"\n                      checked={checkedTags.indexOf(item.assetTag) !== -1}\n                      tabIndex={-1}\n                      disableRipple\n                    />\n                  </ListItemIcon>\n                  <ListItemText id={item.assetTag} primary={`${item.assetTag}(${item.count})`} />\n                </ListItem>\n              )\n            }) : (<CircularProgress />)}\n        </List>\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        {!searchWindowOpen ? props.children : (\n          <SearchWindow contents={contents} setSearchWindowOpen={setSearchWindowOpen} setPageNum={setPageNum} pageNum={pageNum} pageInfo={pageInfo}/>\n        )}\n      </main>\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport Login from './login/Login';\nimport { connect, Provider, useDispatch, useSelector } from 'react-redux';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { RootState } from '../modules';\nimport { login } from '../modules/member';\nimport Upload from './upload/Upload';\nimport Header from './commons/Header';\nimport Main from './main';\nimport Detail from './detail';\nimport Modify from './modify';\nimport Drawer from './commons/SideHeader';\nimport SideHeader from './commons/SideHeader';\n\nconst Pages = (props: any) => {\n    const user = useSelector((state: RootState) => state.member)\n    const dispatch = useDispatch();\n    useEffect(() => {\n        const token = sessionStorage.getItem('sessionUser');\n        if (token && !user.isLogined) {\n            dispatch(login({ userId: '', isLogined: true }));\n        }\n    }, [user])\n    return !user.isLogined ? (\n        <Login />\n    ) : (\n\n            <BrowserRouter>\n                {/* <Header /> */}\n                <SideHeader>\n                    <Route exact path=\"/\" component={Main} />\n                    <Route path=\"/upload\" component={Upload} />\n                    <Route path=\"/detail/:assetSeq\" component={Detail} />\n                    <Route path=\"/modify/:assetSeq\" component={Modify} />\n                </SideHeader>\n            </BrowserRouter>\n        )\n}\n\nconst member = (state: any) => ({\n    user: state.member\n})\n\nexport default connect(member)(Pages);","import React, {  } from 'react';\nimport './App.css';\nimport rootReducer from './modules'\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport Pages from './components'\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  // const devTools =\n  //   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n  const store = createStore(rootReducer\n    //, devTools\n  )\n  console.log(store.getState())\n  \n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Provider store={store}>\n          <Pages />\n        </Provider>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}